{"version":3,"sources":["main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearStepper.js?5524","main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepper.js?5a89","main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearAlternativeLabelStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearAlternativeLabelStepper.js?dd2f","main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearAlternativeLabelStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearAlternativeLabelStepper.js?90b2","main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepperWithError.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepperWithError.js?dfcb","main/content/components/material-ui/material-ui-examples/steppers/VerticalLinearStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/VerticalLinearStepper.js?70ff","main/content/components/material-ui/material-ui-examples/steppers/CustomizedStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/CustomizedStepper.js?7db4","main/content/components/material-ui/material-ui-examples/steppers/TextMobileStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/TextMobileStepper.js?ee83","main/content/components/material-ui/material-ui-examples/steppers/SwipeableTextMobileStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/SwipeableTextMobileStepper.js?3651","main/content/components/material-ui/material-ui-examples/steppers/DotsMobileStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/DotsMobileStepper.js?abad","main/content/components/material-ui/material-ui-examples/steppers/ProgressMobileStepper.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/steppers/ProgressMobileStepper.js?b5ee","main/content/components/material-ui/pages/Steppers.js"],"names":["HorizontalLinearStepper","state","activeStep","skipped","Set","isStepOptional","step","handleNext","_this","isStepSkipped","values","delete","setState","handleBack","handleSkip","Error","add","handleReset","this","has","_this2","classes","props","steps","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","root","_material_ui_core_Stepper__WEBPACK_IMPORTED_MODULE_7___default","map","label","index","labelProps","optional","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11___default","variant","completed","_material_ui_core_Step__WEBPACK_IMPORTED_MODULE_8___default","Object","assign","key","_material_ui_core_StepLabel__WEBPACK_IMPORTED_MODULE_9___default","length","instructions","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","onClick","button","getStepContent","disabled","color","React","Component","withStyles","theme","width","marginRight","spacing","unit","marginTop","marginBottom","module","exports","HorizontalNonLinearStepper","totalSteps","isLastStep","allStepsCompleted","findIndex","i","handleStep","handleComplete","keys","completedSteps","nonLinear","_material_ui_core_StepButton__WEBPACK_IMPORTED_MODULE_9___default","display","HorizontalLabelPositionBelowStepper","alternativeLabel","stepIndex","backButton","HorizontalNonLinearAlternativeLabelStepper","size","skippedSteps","buttonProps","isStepComplete","HorizontalNonLinearStepperWithError","isStepFailed","error","VerticalLinearStepper","orientation","_material_ui_core_StepContent__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_13___default","actionsContainer","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_12___default","square","elevation","resetContainer","padding","CustomizedStepper","connector","_material_ui_core_StepConnector__WEBPACK_IMPORTED_MODULE_10___default","active","connectorActive","connectorCompleted","connectorDisabled","line","connectorLine","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_12___default","& $connectorLine","borderColor","palette","secondary","main","primary","grey","transition","transitions","create","tutorialSteps","imgPath","TextMobileStepper","prevState","_this$props","maxSteps","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_8___default","header","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9___default","img","src","alt","_material_ui_core_MobileStepper__WEBPACK_IMPORTED_MODULE_7___default","position","mobileStepper","nextButton","direction","_material_ui_icons_KeyboardArrowLeft__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_icons_KeyboardArrowRight__WEBPACK_IMPORTED_MODULE_12___default","maxWidth","flexGrow","alignItems","height","paddingLeft","backgroundColor","background","default","overflow","withTheme","AutoPlaySwipeableViews","autoPlay","SwipeableViews","SwipeableTextMobileStepper","handleStepChange","axis","onChangeIndex","enableMouseEvents","Math","abs","DotsMobileStepper","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_KeyboardArrowLeft__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_KeyboardArrowRight__WEBPACK_IMPORTED_MODULE_10___default","ProgressMobileStepper","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fuse__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles_index__WEBPACK_IMPORTED_MODULE_3__","layoutRoot","& .description","_ref","component","href","target","content","iframe","require","raw"],"mappings":"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","file":"static/js/105.a668cf36.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root        : {\n        width: '90%'\n    },\n    button      : {\n        marginRight: theme.spacing.unit\n    },\n    instructions: {\n        marginTop   : theme.spacing.unit,\n        marginBottom: theme.spacing.unit\n    }\n});\n\nfunction getSteps()\n{\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step)\n{\n    switch ( step )\n    {\n        case 0:\n            return 'Select campaign settings...';\n        case 1:\n            return 'What is an ad group anyways?';\n        case 2:\n            return 'This is the bit I really care about!';\n        default:\n            return 'Unknown step';\n    }\n}\n\nclass HorizontalLinearStepper extends React.Component {\n    state = {\n        activeStep: 0,\n        skipped   : new Set()\n    };\n\n    isStepOptional = step => {\n        return step === 1;\n    };\n\n    handleNext = () => {\n        const {activeStep} = this.state;\n        let {skipped} = this.state;\n        if ( this.isStepSkipped(activeStep) )\n        {\n            skipped = new Set(skipped.values());\n            skipped.delete(activeStep);\n        }\n        this.setState({\n            activeStep: activeStep + 1,\n            skipped\n        });\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    handleSkip = () => {\n        const {activeStep} = this.state;\n        if ( !this.isStepOptional(activeStep) )\n        {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        this.setState(state => {\n            const skipped = new Set(state.skipped.values());\n            skipped.add(activeStep);\n            return {\n                activeStep: state.activeStep + 1,\n                skipped\n            };\n        });\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0\n        });\n    };\n\n    isStepSkipped(step)\n    {\n        return this.state.skipped.has(step);\n    }\n\n    render()\n    {\n        const {classes} = this.props;\n        const steps = getSteps();\n        const {activeStep} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                        const props = {};\n                        const labelProps = {};\n                        if ( this.isStepOptional(index) )\n                        {\n                            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                        }\n                        if ( this.isStepSkipped(index) )\n                        {\n                            props.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...props}>\n                                <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed - you&apos;re finished\n                            </Typography>\n                            <Button onClick={this.handleReset} className={classes.button}>\n                                Reset\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                                </Button>\n                                {this.isStepOptional(activeStep) && (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={this.handleSkip}\n                                        className={classes.button}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nHorizontalLinearStepper.propTypes = {\n    classes: PropTypes.object\n};\n\nexport default withStyles(styles)(HorizontalLinearStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Stepper from '@material-ui/core/Stepper';\\nimport Step from '@material-ui/core/Step';\\nimport StepLabel from '@material-ui/core/StepLabel';\\nimport Button from '@material-ui/core/Button';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n    root        : {\\n        width: '90%'\\n    },\\n    button      : {\\n        marginRight: theme.spacing.unit\\n    },\\n    instructions: {\\n        marginTop   : theme.spacing.unit,\\n        marginBottom: theme.spacing.unit\\n    }\\n});\\n\\nfunction getSteps()\\n{\\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\n}\\n\\nfunction getStepContent(step)\\n{\\n    switch ( step )\\n    {\\n        case 0:\\n            return 'Select campaign settings...';\\n        case 1:\\n            return 'What is an ad group anyways?';\\n        case 2:\\n            return 'This is the bit I really care about!';\\n        default:\\n            return 'Unknown step';\\n    }\\n}\\n\\nclass HorizontalLinearStepper extends React.Component {\\n    state = {\\n        activeStep: 0,\\n        skipped   : new Set()\\n    };\\n\\n    isStepOptional = step => {\\n        return step === 1;\\n    };\\n\\n    handleNext = () => {\\n        const {activeStep} = this.state;\\n        let {skipped} = this.state;\\n        if ( this.isStepSkipped(activeStep) )\\n        {\\n            skipped = new Set(skipped.values());\\n            skipped.delete(activeStep);\\n        }\\n        this.setState({\\n            activeStep: activeStep + 1,\\n            skipped\\n        });\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    handleSkip = () => {\\n        const {activeStep} = this.state;\\n        if ( !this.isStepOptional(activeStep) )\\n        {\\n            // You probably want to guard against something like this,\\n            // it should never occur unless someone's actively trying to break something.\\n            throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\n        }\\n\\n        this.setState(state => {\\n            const skipped = new Set(state.skipped.values());\\n            skipped.add(activeStep);\\n            return {\\n                activeStep: state.activeStep + 1,\\n                skipped\\n            };\\n        });\\n    };\\n\\n    handleReset = () => {\\n        this.setState({\\n            activeStep: 0\\n        });\\n    };\\n\\n    isStepSkipped(step)\\n    {\\n        return this.state.skipped.has(step);\\n    }\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const steps = getSteps();\\n        const {activeStep} = this.state;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Stepper activeStep={activeStep}>\\n                    {steps.map((label, index) => {\\n                        const props = {};\\n                        const labelProps = {};\\n                        if ( this.isStepOptional(index) )\\n                        {\\n                            labelProps.optional = <Typography variant=\\\"caption\\\">Optional</Typography>;\\n                        }\\n                        if ( this.isStepSkipped(index) )\\n                        {\\n                            props.completed = false;\\n                        }\\n                        return (\\n                            <Step key={label} {...props}>\\n                                <StepLabel {...labelProps}>{label}</StepLabel>\\n                            </Step>\\n                        );\\n                    })}\\n                </Stepper>\\n                <div>\\n                    {activeStep === steps.length ? (\\n                        <div>\\n                            <Typography className={classes.instructions}>\\n                                All steps completed - you&apos;re finished\\n                            </Typography>\\n                            <Button onClick={this.handleReset} className={classes.button}>\\n                                Reset\\n                            </Button>\\n                        </div>\\n                    ) : (\\n                        <div>\\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\n                            <div>\\n                                <Button\\n                                    disabled={activeStep === 0}\\n                                    onClick={this.handleBack}\\n                                    className={classes.button}\\n                                >\\n                                    Back\\n                                </Button>\\n                                {this.isStepOptional(activeStep) && (\\n                                    <Button\\n                                        variant=\\\"contained\\\"\\n                                        color=\\\"primary\\\"\\n                                        onClick={this.handleSkip}\\n                                        className={classes.button}\\n                                    >\\n                                        Skip\\n                                    </Button>\\n                                )}\\n                                <Button\\n                                    variant=\\\"contained\\\"\\n                                    color=\\\"primary\\\"\\n                                    onClick={this.handleNext}\\n                                    className={classes.button}\\n                                >\\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\n                                </Button>\\n                            </div>\\n                        </div>\\n                    )}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nHorizontalLinearStepper.propTypes = {\\n    classes: PropTypes.object\\n};\\n\\nexport default withStyles(styles)(HorizontalLinearStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root        : {\n        width: '90%'\n    },\n    button      : {\n        marginRight: theme.spacing.unit\n    },\n    completed   : {\n        display: 'inline-block'\n    },\n    instructions: {\n        marginTop   : theme.spacing.unit,\n        marginBottom: theme.spacing.unit\n    }\n});\n\nfunction getSteps()\n{\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step)\n{\n    switch ( step )\n    {\n        case 0:\n            return 'Step 1: Select campaign settings...';\n        case 1:\n            return 'Step 2: What is an ad group anyways?';\n        case 2:\n            return 'Step 3: This is the bit I really care about!';\n        default:\n            return 'Unknown step';\n    }\n}\n\nclass HorizontalNonLinearStepper extends React.Component {\n    state = {\n        activeStep: 0,\n        completed : {}\n    };\n\n    totalSteps = () => {\n        return getSteps().length;\n    };\n\n    handleNext = () => {\n        let activeStep;\n\n        if ( this.isLastStep() && !this.allStepsCompleted() )\n        {\n            // It's the last step, but not all steps have been completed,\n            // find the first step that has been completed\n            const steps = getSteps();\n            activeStep = steps.findIndex((step, i) => !(i in this.state.completed));\n        }\n        else\n        {\n            activeStep = this.state.activeStep + 1;\n        }\n        this.setState({\n            activeStep\n        });\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    handleStep = step => () => {\n        this.setState({\n            activeStep: step\n        });\n    };\n\n    handleComplete = () => {\n        const {completed} = this.state;\n        completed[this.state.activeStep] = true;\n        this.setState({\n            completed\n        });\n        this.handleNext();\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0,\n            completed : {}\n        });\n    };\n\n    completedSteps()\n    {\n        return Object.keys(this.state.completed).length;\n    }\n\n    isLastStep()\n    {\n        return this.state.activeStep === this.totalSteps() - 1;\n    }\n\n    allStepsCompleted()\n    {\n        return this.completedSteps() === this.totalSteps();\n    }\n\n    render()\n    {\n        const {classes} = this.props;\n        const steps = getSteps();\n        const {activeStep} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper nonLinear activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                        return (\n                            <Step key={label}>\n                                <StepButton\n                                    onClick={this.handleStep(index)}\n                                    completed={this.state.completed[index]}\n                                >\n                                    {label}\n                                </StepButton>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div>\n                    {this.allStepsCompleted() ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed - you&apos;re finished\n                            </Typography>\n                            <Button onClick={this.handleReset}>Reset</Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className={classes.button}\n                                >\n                                    Next\n                                </Button>\n                                {activeStep !== steps.length &&\n                                (this.state.completed[this.state.activeStep] ? (\n                                    <Typography variant=\"caption\" className={classes.completed}>\n                                        Step {activeStep + 1} already completed\n                                    </Typography>\n                                ) : (\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\n                                        {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                                    </Button>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nHorizontalNonLinearStepper.propTypes = {\n    classes: PropTypes.object\n};\n\nexport default withStyles(styles)(HorizontalNonLinearStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Stepper from '@material-ui/core/Stepper';\\nimport Step from '@material-ui/core/Step';\\nimport StepButton from '@material-ui/core/StepButton';\\nimport Button from '@material-ui/core/Button';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n    root        : {\\n        width: '90%'\\n    },\\n    button      : {\\n        marginRight: theme.spacing.unit\\n    },\\n    completed   : {\\n        display: 'inline-block'\\n    },\\n    instructions: {\\n        marginTop   : theme.spacing.unit,\\n        marginBottom: theme.spacing.unit\\n    }\\n});\\n\\nfunction getSteps()\\n{\\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\n}\\n\\nfunction getStepContent(step)\\n{\\n    switch ( step )\\n    {\\n        case 0:\\n            return 'Step 1: Select campaign settings...';\\n        case 1:\\n            return 'Step 2: What is an ad group anyways?';\\n        case 2:\\n            return 'Step 3: This is the bit I really care about!';\\n        default:\\n            return 'Unknown step';\\n    }\\n}\\n\\nclass HorizontalNonLinearStepper extends React.Component {\\n    state = {\\n        activeStep: 0,\\n        completed : {}\\n    };\\n\\n    totalSteps = () => {\\n        return getSteps().length;\\n    };\\n\\n    handleNext = () => {\\n        let activeStep;\\n\\n        if ( this.isLastStep() && !this.allStepsCompleted() )\\n        {\\n            // It's the last step, but not all steps have been completed,\\n            // find the first step that has been completed\\n            const steps = getSteps();\\n            activeStep = steps.findIndex((step, i) => !(i in this.state.completed));\\n        }\\n        else\\n        {\\n            activeStep = this.state.activeStep + 1;\\n        }\\n        this.setState({\\n            activeStep\\n        });\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    handleStep = step => () => {\\n        this.setState({\\n            activeStep: step\\n        });\\n    };\\n\\n    handleComplete = () => {\\n        const {completed} = this.state;\\n        completed[this.state.activeStep] = true;\\n        this.setState({\\n            completed\\n        });\\n        this.handleNext();\\n    };\\n\\n    handleReset = () => {\\n        this.setState({\\n            activeStep: 0,\\n            completed : {}\\n        });\\n    };\\n\\n    completedSteps()\\n    {\\n        return Object.keys(this.state.completed).length;\\n    }\\n\\n    isLastStep()\\n    {\\n        return this.state.activeStep === this.totalSteps() - 1;\\n    }\\n\\n    allStepsCompleted()\\n    {\\n        return this.completedSteps() === this.totalSteps();\\n    }\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const steps = getSteps();\\n        const {activeStep} = this.state;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Stepper nonLinear activeStep={activeStep}>\\n                    {steps.map((label, index) => {\\n                        return (\\n                            <Step key={label}>\\n                                <StepButton\\n                                    onClick={this.handleStep(index)}\\n                                    completed={this.state.completed[index]}\\n                                >\\n                                    {label}\\n                                </StepButton>\\n                            </Step>\\n                        );\\n                    })}\\n                </Stepper>\\n                <div>\\n                    {this.allStepsCompleted() ? (\\n                        <div>\\n                            <Typography className={classes.instructions}>\\n                                All steps completed - you&apos;re finished\\n                            </Typography>\\n                            <Button onClick={this.handleReset}>Reset</Button>\\n                        </div>\\n                    ) : (\\n                        <div>\\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\n                            <div>\\n                                <Button\\n                                    disabled={activeStep === 0}\\n                                    onClick={this.handleBack}\\n                                    className={classes.button}\\n                                >\\n                                    Back\\n                                </Button>\\n                                <Button\\n                                    variant=\\\"contained\\\"\\n                                    color=\\\"primary\\\"\\n                                    onClick={this.handleNext}\\n                                    className={classes.button}\\n                                >\\n                                    Next\\n                                </Button>\\n                                {activeStep !== steps.length &&\\n                                (this.state.completed[this.state.activeStep] ? (\\n                                    <Typography variant=\\\"caption\\\" className={classes.completed}>\\n                                        Step {activeStep + 1} already completed\\n                                    </Typography>\\n                                ) : (\\n                                    <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={this.handleComplete}>\\n                                        {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\\n                                    </Button>\\n                                ))}\\n                            </div>\\n                        </div>\\n                    )}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nHorizontalNonLinearStepper.propTypes = {\\n    classes: PropTypes.object\\n};\\n\\nexport default withStyles(styles)(HorizontalNonLinearStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root        : {\n        width: '90%'\n    },\n    backButton  : {\n        marginRight: theme.spacing.unit\n    },\n    instructions: {\n        marginTop   : theme.spacing.unit,\n        marginBottom: theme.spacing.unit\n    }\n});\n\nfunction getSteps()\n{\n    return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(stepIndex)\n{\n    switch ( stepIndex )\n    {\n        case 0:\n            return 'Select campaign settings...';\n        case 1:\n            return 'What is an ad group anyways?';\n        case 2:\n            return 'This is the bit I really care about!';\n        default:\n            return 'Uknown stepIndex';\n    }\n}\n\nclass HorizontalLabelPositionBelowStepper extends React.Component {\n    state = {\n        activeStep: 0\n    };\n\n    handleNext = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep + 1\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        const steps = getSteps();\n        const {activeStep} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} alternativeLabel>\n                    {steps.map(label => {\n                        return (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div>\n                    {this.state.activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>All steps completed</Typography>\n                            <Button onClick={this.handleReset}>Reset</Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.backButton}\n                                >\n                                    Back\n                                </Button>\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nHorizontalLabelPositionBelowStepper.propTypes = {\n    classes: PropTypes.object\n};\n\nexport default withStyles(styles)(HorizontalLabelPositionBelowStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Stepper from '@material-ui/core/Stepper';\\nimport Step from '@material-ui/core/Step';\\nimport StepLabel from '@material-ui/core/StepLabel';\\nimport Button from '@material-ui/core/Button';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n    root        : {\\n        width: '90%'\\n    },\\n    backButton  : {\\n        marginRight: theme.spacing.unit\\n    },\\n    instructions: {\\n        marginTop   : theme.spacing.unit,\\n        marginBottom: theme.spacing.unit\\n    }\\n});\\n\\nfunction getSteps()\\n{\\n    return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\\n}\\n\\nfunction getStepContent(stepIndex)\\n{\\n    switch ( stepIndex )\\n    {\\n        case 0:\\n            return 'Select campaign settings...';\\n        case 1:\\n            return 'What is an ad group anyways?';\\n        case 2:\\n            return 'This is the bit I really care about!';\\n        default:\\n            return 'Uknown stepIndex';\\n    }\\n}\\n\\nclass HorizontalLabelPositionBelowStepper extends React.Component {\\n    state = {\\n        activeStep: 0\\n    };\\n\\n    handleNext = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep + 1\\n        }));\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    handleReset = () => {\\n        this.setState({\\n            activeStep: 0\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const steps = getSteps();\\n        const {activeStep} = this.state;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Stepper activeStep={activeStep} alternativeLabel>\\n                    {steps.map(label => {\\n                        return (\\n                            <Step key={label}>\\n                                <StepLabel>{label}</StepLabel>\\n                            </Step>\\n                        );\\n                    })}\\n                </Stepper>\\n                <div>\\n                    {this.state.activeStep === steps.length ? (\\n                        <div>\\n                            <Typography className={classes.instructions}>All steps completed</Typography>\\n                            <Button onClick={this.handleReset}>Reset</Button>\\n                        </div>\\n                    ) : (\\n                        <div>\\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\n                            <div>\\n                                <Button\\n                                    disabled={activeStep === 0}\\n                                    onClick={this.handleBack}\\n                                    className={classes.backButton}\\n                                >\\n                                    Back\\n                                </Button>\\n                                <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={this.handleNext}>\\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\n                                </Button>\\n                            </div>\\n                        </div>\\n                    )}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nHorizontalLabelPositionBelowStepper.propTypes = {\\n    classes: PropTypes.object\\n};\\n\\nexport default withStyles(styles)(HorizontalLabelPositionBelowStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root        : {\n        width: '90%'\n    },\n    button      : {\n        marginRight: theme.spacing.unit\n    },\n    backButton  : {\n        marginRight: theme.spacing.unit\n    },\n    completed   : {\n        display: 'inline-block'\n    },\n    instructions: {\n        marginTop   : theme.spacing.unit,\n        marginBottom: theme.spacing.unit\n    }\n});\n\nfunction getSteps()\n{\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step)\n{\n    switch ( step )\n    {\n        case 0:\n            return 'Step 1: Select campaign settings...';\n        case 1:\n            return 'Step 2: What is an ad group anyways?';\n        case 2:\n            return 'Step 3: This is the bit I really care about!';\n        default:\n            return 'Unknown step';\n    }\n}\n\nclass HorizontalNonLinearAlternativeLabelStepper extends React.Component {\n    state = {\n        activeStep: 0,\n        completed : new Set(),\n        skipped   : new Set()\n    };\n\n    totalSteps = () => {\n        return getSteps().length;\n    };\n\n    isStepOptional = step => {\n        return step === 1;\n    };\n\n    handleSkip = () => {\n        const {activeStep} = this.state;\n        if ( !this.isStepOptional(activeStep) )\n        {\n            // You probably want to guard against something like this\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        this.setState(state => {\n            const skipped = new Set(state.skipped.values());\n            skipped.add(activeStep);\n            return {\n                activeStep: state.activeStep + 1,\n                skipped\n            };\n        });\n    };\n\n    handleNext = () => {\n        let activeStep;\n\n        if ( this.isLastStep() && !this.allStepsCompleted() )\n        {\n            // It's the last step, but not all steps have been completed\n            // find the first step that has been completed\n            const steps = getSteps();\n            activeStep = steps.findIndex((step, i) => !this.state.completed.has(i));\n        }\n        else\n        {\n            activeStep = this.state.activeStep + 1;\n        }\n        this.setState({\n            activeStep\n        });\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    handleStep = step => () => {\n        this.setState({\n            activeStep: step\n        });\n    };\n\n    handleComplete = () => {\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        const completed = new Set(this.state.completed);\n        completed.add(this.state.activeStep);\n        this.setState({\n            completed\n        });\n\n        /**\n         * Sigh... it would be much nicer to replace the following if conditional with\n         * `if (!this.allStepsComplete())` however state is not set when we do this,\n         * thus we have to resort to not being very DRY.\n         */\n        if ( completed.size !== this.totalSteps() - this.skippedSteps() )\n        {\n            this.handleNext();\n        }\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0,\n            completed : new Set(),\n            skipped   : new Set()\n        });\n    };\n\n    skippedSteps()\n    {\n        return this.state.skipped.size;\n    }\n\n    isStepSkipped(step)\n    {\n        return this.state.skipped.has(step);\n    }\n\n    isStepComplete(step)\n    {\n        return this.state.completed.has(step);\n    }\n\n    completedSteps()\n    {\n        return this.state.completed.size;\n    }\n\n    allStepsCompleted()\n    {\n        return this.completedSteps() === this.totalSteps() - this.skippedSteps();\n    }\n\n    isLastStep()\n    {\n        return this.state.activeStep === this.totalSteps() - 1;\n    }\n\n    render()\n    {\n        const {classes} = this.props;\n        const steps = getSteps();\n        const {activeStep} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                        const props = {};\n                        const buttonProps = {};\n                        if ( this.isStepOptional(index) )\n                        {\n                            buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                        }\n                        if ( this.isStepSkipped(index) )\n                        {\n                            props.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...props}>\n                                <StepButton\n                                    onClick={this.handleStep(index)}\n                                    completed={this.isStepComplete(index)}\n                                    {...buttonProps}\n                                >\n                                    {label}\n                                </StepButton>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div>\n                    {this.allStepsCompleted() ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed - you&apos;re finished\n                            </Typography>\n                            <Button onClick={this.handleReset}>Reset</Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className={classes.button}\n                                >\n                                    Next\n                                </Button>\n                                {this.isStepOptional(activeStep) &&\n                                !this.state.completed.has(this.state.activeStep) && (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={this.handleSkip}\n                                        className={classes.button}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n                                {activeStep !== steps.length &&\n                                (this.state.completed.has(this.state.activeStep) ? (\n                                    <Typography variant=\"caption\" className={classes.completed}>\n                                        Step {activeStep + 1} already completed\n                                    </Typography>\n                                ) : (\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\n                                        {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                                    </Button>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nHorizontalNonLinearAlternativeLabelStepper.propTypes = {\n    classes: PropTypes.object\n};\n\nexport default withStyles(styles)(HorizontalNonLinearAlternativeLabelStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Stepper from '@material-ui/core/Stepper';\\nimport Step from '@material-ui/core/Step';\\nimport StepButton from '@material-ui/core/StepButton';\\nimport Button from '@material-ui/core/Button';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n    root        : {\\n        width: '90%'\\n    },\\n    button      : {\\n        marginRight: theme.spacing.unit\\n    },\\n    backButton  : {\\n        marginRight: theme.spacing.unit\\n    },\\n    completed   : {\\n        display: 'inline-block'\\n    },\\n    instructions: {\\n        marginTop   : theme.spacing.unit,\\n        marginBottom: theme.spacing.unit\\n    }\\n});\\n\\nfunction getSteps()\\n{\\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\n}\\n\\nfunction getStepContent(step)\\n{\\n    switch ( step )\\n    {\\n        case 0:\\n            return 'Step 1: Select campaign settings...';\\n        case 1:\\n            return 'Step 2: What is an ad group anyways?';\\n        case 2:\\n            return 'Step 3: This is the bit I really care about!';\\n        default:\\n            return 'Unknown step';\\n    }\\n}\\n\\nclass HorizontalNonLinearAlternativeLabelStepper extends React.Component {\\n    state = {\\n        activeStep: 0,\\n        completed : new Set(),\\n        skipped   : new Set()\\n    };\\n\\n    totalSteps = () => {\\n        return getSteps().length;\\n    };\\n\\n    isStepOptional = step => {\\n        return step === 1;\\n    };\\n\\n    handleSkip = () => {\\n        const {activeStep} = this.state;\\n        if ( !this.isStepOptional(activeStep) )\\n        {\\n            // You probably want to guard against something like this\\n            // it should never occur unless someone's actively trying to break something.\\n            throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\n        }\\n\\n        this.setState(state => {\\n            const skipped = new Set(state.skipped.values());\\n            skipped.add(activeStep);\\n            return {\\n                activeStep: state.activeStep + 1,\\n                skipped\\n            };\\n        });\\n    };\\n\\n    handleNext = () => {\\n        let activeStep;\\n\\n        if ( this.isLastStep() && !this.allStepsCompleted() )\\n        {\\n            // It's the last step, but not all steps have been completed\\n            // find the first step that has been completed\\n            const steps = getSteps();\\n            activeStep = steps.findIndex((step, i) => !this.state.completed.has(i));\\n        }\\n        else\\n        {\\n            activeStep = this.state.activeStep + 1;\\n        }\\n        this.setState({\\n            activeStep\\n        });\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    handleStep = step => () => {\\n        this.setState({\\n            activeStep: step\\n        });\\n    };\\n\\n    handleComplete = () => {\\n        // eslint-disable-next-line react/no-access-state-in-setstate\\n        const completed = new Set(this.state.completed);\\n        completed.add(this.state.activeStep);\\n        this.setState({\\n            completed\\n        });\\n\\n        /**\\n         * Sigh... it would be much nicer to replace the following if conditional with\\n         * `if (!this.allStepsComplete())` however state is not set when we do this,\\n         * thus we have to resort to not being very DRY.\\n         */\\n        if ( completed.size !== this.totalSteps() - this.skippedSteps() )\\n        {\\n            this.handleNext();\\n        }\\n    };\\n\\n    handleReset = () => {\\n        this.setState({\\n            activeStep: 0,\\n            completed : new Set(),\\n            skipped   : new Set()\\n        });\\n    };\\n\\n    skippedSteps()\\n    {\\n        return this.state.skipped.size;\\n    }\\n\\n    isStepSkipped(step)\\n    {\\n        return this.state.skipped.has(step);\\n    }\\n\\n    isStepComplete(step)\\n    {\\n        return this.state.completed.has(step);\\n    }\\n\\n    completedSteps()\\n    {\\n        return this.state.completed.size;\\n    }\\n\\n    allStepsCompleted()\\n    {\\n        return this.completedSteps() === this.totalSteps() - this.skippedSteps();\\n    }\\n\\n    isLastStep()\\n    {\\n        return this.state.activeStep === this.totalSteps() - 1;\\n    }\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const steps = getSteps();\\n        const {activeStep} = this.state;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Stepper alternativeLabel nonLinear activeStep={activeStep}>\\n                    {steps.map((label, index) => {\\n                        const props = {};\\n                        const buttonProps = {};\\n                        if ( this.isStepOptional(index) )\\n                        {\\n                            buttonProps.optional = <Typography variant=\\\"caption\\\">Optional</Typography>;\\n                        }\\n                        if ( this.isStepSkipped(index) )\\n                        {\\n                            props.completed = false;\\n                        }\\n                        return (\\n                            <Step key={label} {...props}>\\n                                <StepButton\\n                                    onClick={this.handleStep(index)}\\n                                    completed={this.isStepComplete(index)}\\n                                    {...buttonProps}\\n                                >\\n                                    {label}\\n                                </StepButton>\\n                            </Step>\\n                        );\\n                    })}\\n                </Stepper>\\n                <div>\\n                    {this.allStepsCompleted() ? (\\n                        <div>\\n                            <Typography className={classes.instructions}>\\n                                All steps completed - you&apos;re finished\\n                            </Typography>\\n                            <Button onClick={this.handleReset}>Reset</Button>\\n                        </div>\\n                    ) : (\\n                        <div>\\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\n                            <div>\\n                                <Button\\n                                    disabled={activeStep === 0}\\n                                    onClick={this.handleBack}\\n                                    className={classes.button}\\n                                >\\n                                    Back\\n                                </Button>\\n                                <Button\\n                                    variant=\\\"contained\\\"\\n                                    color=\\\"primary\\\"\\n                                    onClick={this.handleNext}\\n                                    className={classes.button}\\n                                >\\n                                    Next\\n                                </Button>\\n                                {this.isStepOptional(activeStep) &&\\n                                !this.state.completed.has(this.state.activeStep) && (\\n                                    <Button\\n                                        variant=\\\"contained\\\"\\n                                        color=\\\"primary\\\"\\n                                        onClick={this.handleSkip}\\n                                        className={classes.button}\\n                                    >\\n                                        Skip\\n                                    </Button>\\n                                )}\\n                                {activeStep !== steps.length &&\\n                                (this.state.completed.has(this.state.activeStep) ? (\\n                                    <Typography variant=\\\"caption\\\" className={classes.completed}>\\n                                        Step {activeStep + 1} already completed\\n                                    </Typography>\\n                                ) : (\\n                                    <Button variant=\\\"contained\\\" color=\\\"primary\\\" onClick={this.handleComplete}>\\n                                        {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\\n                                    </Button>\\n                                ))}\\n                            </div>\\n                        </div>\\n                    )}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nHorizontalNonLinearAlternativeLabelStepper.propTypes = {\\n    classes: PropTypes.object\\n};\\n\\nexport default withStyles(styles)(HorizontalNonLinearAlternativeLabelStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root        : {\n        width: '90%'\n    },\n    button      : {\n        marginRight: theme.spacing.unit\n    },\n    instructions: {\n        marginTop   : theme.spacing.unit,\n        marginBottom: theme.spacing.unit\n    }\n});\n\nfunction getSteps()\n{\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step)\n{\n    switch ( step )\n    {\n        case 0:\n            return 'Select campaign settings...';\n        case 1:\n            return 'What is an ad group anyways?';\n        case 2:\n            return 'This is the bit I really care about!';\n        default:\n            return 'Unknown step';\n    }\n}\n\nclass HorizontalNonLinearStepperWithError extends React.Component {\n    state = {\n        activeStep: 0,\n        skipped   : new Set()\n    };\n\n    isStepOptional = step => {\n        return step === 1;\n    };\n\n    isStepFailed = step => {\n        return step === 1;\n    };\n\n    handleNext = () => {\n        const {activeStep} = this.state;\n        let {skipped} = this.state;\n        if ( this.isStepSkipped(activeStep) )\n        {\n            skipped = new Set(skipped.values());\n            skipped.delete(activeStep);\n        }\n        this.setState({\n            activeStep: activeStep + 1,\n            skipped\n        });\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    handleSkip = () => {\n        const {activeStep} = this.state;\n        if ( !this.isStepOptional(activeStep) )\n        {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        this.setState(state => {\n            const skipped = new Set(state.skipped.values());\n            skipped.add(activeStep);\n            return {\n                activeStep: state.activeStep + 1,\n                skipped\n            };\n        });\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0\n        });\n    };\n\n    isStepSkipped(step)\n    {\n        return this.state.skipped.has(step);\n    }\n\n    render()\n    {\n        const {classes} = this.props;\n        const steps = getSteps();\n        const {activeStep} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                        const props = {};\n                        const labelProps = {};\n                        if ( this.isStepOptional(index) )\n                        {\n                            labelProps.optional = (\n                                <Typography variant=\"caption\" color=\"error\">\n                                    Alert message\n                                </Typography>\n                            );\n                        }\n                        if ( this.isStepFailed(index) )\n                        {\n                            labelProps.error = true;\n                        }\n                        if ( this.isStepSkipped(index) )\n                        {\n                            props.completed = false;\n                        }\n                        return (\n                            <Step key={label} {...props}>\n                                <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed - you&apos;re finished\n                            </Typography>\n                            <Button onClick={this.handleReset} className={classes.button}>\n                                Reset\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                                </Button>\n                                {this.isStepOptional(activeStep) && (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={this.handleSkip}\n                                        className={classes.button}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nHorizontalNonLinearStepperWithError.propTypes = {\n    classes: PropTypes.object\n};\n\nexport default withStyles(styles)(HorizontalNonLinearStepperWithError);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Stepper from '@material-ui/core/Stepper';\\nimport Step from '@material-ui/core/Step';\\nimport StepLabel from '@material-ui/core/StepLabel';\\nimport Button from '@material-ui/core/Button';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n    root        : {\\n        width: '90%'\\n    },\\n    button      : {\\n        marginRight: theme.spacing.unit\\n    },\\n    instructions: {\\n        marginTop   : theme.spacing.unit,\\n        marginBottom: theme.spacing.unit\\n    }\\n});\\n\\nfunction getSteps()\\n{\\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\n}\\n\\nfunction getStepContent(step)\\n{\\n    switch ( step )\\n    {\\n        case 0:\\n            return 'Select campaign settings...';\\n        case 1:\\n            return 'What is an ad group anyways?';\\n        case 2:\\n            return 'This is the bit I really care about!';\\n        default:\\n            return 'Unknown step';\\n    }\\n}\\n\\nclass HorizontalNonLinearStepperWithError extends React.Component {\\n    state = {\\n        activeStep: 0,\\n        skipped   : new Set()\\n    };\\n\\n    isStepOptional = step => {\\n        return step === 1;\\n    };\\n\\n    isStepFailed = step => {\\n        return step === 1;\\n    };\\n\\n    handleNext = () => {\\n        const {activeStep} = this.state;\\n        let {skipped} = this.state;\\n        if ( this.isStepSkipped(activeStep) )\\n        {\\n            skipped = new Set(skipped.values());\\n            skipped.delete(activeStep);\\n        }\\n        this.setState({\\n            activeStep: activeStep + 1,\\n            skipped\\n        });\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    handleSkip = () => {\\n        const {activeStep} = this.state;\\n        if ( !this.isStepOptional(activeStep) )\\n        {\\n            // You probably want to guard against something like this,\\n            // it should never occur unless someone's actively trying to break something.\\n            throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\n        }\\n\\n        this.setState(state => {\\n            const skipped = new Set(state.skipped.values());\\n            skipped.add(activeStep);\\n            return {\\n                activeStep: state.activeStep + 1,\\n                skipped\\n            };\\n        });\\n    };\\n\\n    handleReset = () => {\\n        this.setState({\\n            activeStep: 0\\n        });\\n    };\\n\\n    isStepSkipped(step)\\n    {\\n        return this.state.skipped.has(step);\\n    }\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const steps = getSteps();\\n        const {activeStep} = this.state;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Stepper activeStep={activeStep}>\\n                    {steps.map((label, index) => {\\n                        const props = {};\\n                        const labelProps = {};\\n                        if ( this.isStepOptional(index) )\\n                        {\\n                            labelProps.optional = (\\n                                <Typography variant=\\\"caption\\\" color=\\\"error\\\">\\n                                    Alert message\\n                                </Typography>\\n                            );\\n                        }\\n                        if ( this.isStepFailed(index) )\\n                        {\\n                            labelProps.error = true;\\n                        }\\n                        if ( this.isStepSkipped(index) )\\n                        {\\n                            props.completed = false;\\n                        }\\n                        return (\\n                            <Step key={label} {...props}>\\n                                <StepLabel {...labelProps}>{label}</StepLabel>\\n                            </Step>\\n                        );\\n                    })}\\n                </Stepper>\\n                <div>\\n                    {activeStep === steps.length ? (\\n                        <div>\\n                            <Typography className={classes.instructions}>\\n                                All steps completed - you&apos;re finished\\n                            </Typography>\\n                            <Button onClick={this.handleReset} className={classes.button}>\\n                                Reset\\n                            </Button>\\n                        </div>\\n                    ) : (\\n                        <div>\\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\n                            <div>\\n                                <Button\\n                                    disabled={activeStep === 0}\\n                                    onClick={this.handleBack}\\n                                    className={classes.button}\\n                                >\\n                                    Back\\n                                </Button>\\n                                {this.isStepOptional(activeStep) && (\\n                                    <Button\\n                                        variant=\\\"contained\\\"\\n                                        color=\\\"primary\\\"\\n                                        onClick={this.handleSkip}\\n                                        className={classes.button}\\n                                    >\\n                                        Skip\\n                                    </Button>\\n                                )}\\n                                <Button\\n                                    variant=\\\"contained\\\"\\n                                    color=\\\"primary\\\"\\n                                    onClick={this.handleNext}\\n                                    className={classes.button}\\n                                >\\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\n                                </Button>\\n                            </div>\\n                        </div>\\n                    )}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nHorizontalNonLinearStepperWithError.propTypes = {\\n    classes: PropTypes.object\\n};\\n\\nexport default withStyles(styles)(HorizontalNonLinearStepperWithError);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root            : {\n        width: '90%'\n    },\n    button          : {\n        marginTop  : theme.spacing.unit,\n        marginRight: theme.spacing.unit\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing.unit * 2\n    },\n    resetContainer  : {\n        padding: theme.spacing.unit * 3\n    }\n});\n\nfunction getSteps()\n{\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step)\n{\n    switch ( step )\n    {\n        case 0:\n            return `For each ad campaign that you create, you can control how much\n              you're willing to spend on clicks and conversions, which networks\n              and geographical locations you want your ads to show on, and more.`;\n        case 1:\n            return 'An ad group contains one or more ads which target a shared set of keywords.';\n        case 2:\n            return `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`;\n        default:\n            return 'Unknown step';\n    }\n}\n\nclass VerticalLinearStepper extends React.Component {\n    state = {\n        activeStep: 0\n    };\n\n    handleNext = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep + 1\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        const steps = getSteps();\n        const {activeStep} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => {\n                        return (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                                <StepContent>\n                                    <Typography>{getStepContent(index)}</Typography>\n                                    <div className={classes.actionsContainer}>\n                                        <div>\n                                            <Button\n                                                disabled={activeStep === 0}\n                                                onClick={this.handleBack}\n                                                className={classes.button}\n                                            >\n                                                Back\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={this.handleNext}\n                                                className={classes.button}\n                                            >\n                                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </StepContent>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={this.handleReset} className={classes.button}>\n                            Reset\n                        </Button>\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nVerticalLinearStepper.propTypes = {\n    classes: PropTypes.object\n};\n\nexport default withStyles(styles)(VerticalLinearStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Stepper from '@material-ui/core/Stepper';\\nimport Step from '@material-ui/core/Step';\\nimport StepLabel from '@material-ui/core/StepLabel';\\nimport StepContent from '@material-ui/core/StepContent';\\nimport Button from '@material-ui/core/Button';\\nimport Paper from '@material-ui/core/Paper';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n    root            : {\\n        width: '90%'\\n    },\\n    button          : {\\n        marginTop  : theme.spacing.unit,\\n        marginRight: theme.spacing.unit\\n    },\\n    actionsContainer: {\\n        marginBottom: theme.spacing.unit * 2\\n    },\\n    resetContainer  : {\\n        padding: theme.spacing.unit * 3\\n    }\\n});\\n\\nfunction getSteps()\\n{\\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\n}\\n\\nfunction getStepContent(step)\\n{\\n    switch ( step )\\n    {\\n        case 0:\\n            return `For each ad campaign that you create, you can control how much\\n              you're willing to spend on clicks and conversions, which networks\\n              and geographical locations you want your ads to show on, and more.`;\\n        case 1:\\n            return 'An ad group contains one or more ads which target a shared set of keywords.';\\n        case 2:\\n            return `Try out different ad text to see what brings in the most customers,\\n              and learn how to enhance your ads using features like ad extensions.\\n              If you run into any problems with your ads, find out how to tell if\\n              they're running and how to resolve approval issues.`;\\n        default:\\n            return 'Unknown step';\\n    }\\n}\\n\\nclass VerticalLinearStepper extends React.Component {\\n    state = {\\n        activeStep: 0\\n    };\\n\\n    handleNext = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep + 1\\n        }));\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    handleReset = () => {\\n        this.setState({\\n            activeStep: 0\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const steps = getSteps();\\n        const {activeStep} = this.state;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Stepper activeStep={activeStep} orientation=\\\"vertical\\\">\\n                    {steps.map((label, index) => {\\n                        return (\\n                            <Step key={label}>\\n                                <StepLabel>{label}</StepLabel>\\n                                <StepContent>\\n                                    <Typography>{getStepContent(index)}</Typography>\\n                                    <div className={classes.actionsContainer}>\\n                                        <div>\\n                                            <Button\\n                                                disabled={activeStep === 0}\\n                                                onClick={this.handleBack}\\n                                                className={classes.button}\\n                                            >\\n                                                Back\\n                                            </Button>\\n                                            <Button\\n                                                variant=\\\"contained\\\"\\n                                                color=\\\"primary\\\"\\n                                                onClick={this.handleNext}\\n                                                className={classes.button}\\n                                            >\\n                                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\n                                            </Button>\\n                                        </div>\\n                                    </div>\\n                                </StepContent>\\n                            </Step>\\n                        );\\n                    })}\\n                </Stepper>\\n                {activeStep === steps.length && (\\n                    <Paper square elevation={0} className={classes.resetContainer}>\\n                        <Typography>All steps completed - you&apos;re finished</Typography>\\n                        <Button onClick={this.handleReset} className={classes.button}>\\n                            Reset\\n                        </Button>\\n                    </Paper>\\n                )}\\n            </div>\\n        );\\n    }\\n}\\n\\nVerticalLinearStepper.propTypes = {\\n    classes: PropTypes.object\\n};\\n\\nexport default withStyles(styles)(VerticalLinearStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    root              : {\n        width: '90%'\n    },\n    button            : {\n        marginRight: theme.spacing.unit\n    },\n    instructions      : {\n        marginTop   : theme.spacing.unit,\n        marginBottom: theme.spacing.unit\n    },\n    connectorActive   : {\n        '& $connectorLine': {\n            borderColor: theme.palette.secondary.main\n        }\n    },\n    connectorCompleted: {\n        '& $connectorLine': {\n            borderColor: theme.palette.primary.main\n        }\n    },\n    connectorDisabled : {\n        '& $connectorLine': {\n            borderColor: theme.palette.grey[100]\n        }\n    },\n    connectorLine     : {\n        transition: theme.transitions.create('border-color')\n    }\n});\n\nfunction getSteps()\n{\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step)\n{\n    switch ( step )\n    {\n        case 0:\n            return 'Select campaign settings...';\n        case 1:\n            return 'What is an ad group anyways?';\n        case 2:\n            return 'This is the bit I really care about!';\n        default:\n            return 'Unknown step';\n    }\n}\n\nclass CustomizedStepper extends React.Component {\n    state = {\n        activeStep: 0\n    };\n\n    handleNext = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep + 1\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        const {activeStep} = this.state;\n        const steps = getSteps();\n        const connector = (\n            <StepConnector\n                classes={{\n                    active   : classes.connectorActive,\n                    completed: classes.connectorCompleted,\n                    disabled : classes.connectorDisabled,\n                    line     : classes.connectorLine\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} connector={connector}>\n                    {steps.map(label => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <Stepper alternativeLabel activeStep={activeStep} connector={connector}>\n                    {steps.map(label => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <div>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed - you&apos;re finished\n                            </Typography>\n                            <Button onClick={this.handleReset} className={classes.button}>\n                                Reset\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nCustomizedStepper.propTypes = {\n    classes: PropTypes.object\n};\n\nexport default withStyles(styles)(CustomizedStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Stepper from '@material-ui/core/Stepper';\\nimport Step from '@material-ui/core/Step';\\nimport StepLabel from '@material-ui/core/StepLabel';\\nimport StepConnector from '@material-ui/core/StepConnector';\\nimport Button from '@material-ui/core/Button';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst styles = theme => ({\\n    root              : {\\n        width: '90%'\\n    },\\n    button            : {\\n        marginRight: theme.spacing.unit\\n    },\\n    instructions      : {\\n        marginTop   : theme.spacing.unit,\\n        marginBottom: theme.spacing.unit\\n    },\\n    connectorActive   : {\\n        '& $connectorLine': {\\n            borderColor: theme.palette.secondary.main\\n        }\\n    },\\n    connectorCompleted: {\\n        '& $connectorLine': {\\n            borderColor: theme.palette.primary.main\\n        }\\n    },\\n    connectorDisabled : {\\n        '& $connectorLine': {\\n            borderColor: theme.palette.grey[100]\\n        }\\n    },\\n    connectorLine     : {\\n        transition: theme.transitions.create('border-color')\\n    }\\n});\\n\\nfunction getSteps()\\n{\\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\n}\\n\\nfunction getStepContent(step)\\n{\\n    switch ( step )\\n    {\\n        case 0:\\n            return 'Select campaign settings...';\\n        case 1:\\n            return 'What is an ad group anyways?';\\n        case 2:\\n            return 'This is the bit I really care about!';\\n        default:\\n            return 'Unknown step';\\n    }\\n}\\n\\nclass CustomizedStepper extends React.Component {\\n    state = {\\n        activeStep: 0\\n    };\\n\\n    handleNext = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep + 1\\n        }));\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    handleReset = () => {\\n        this.setState({\\n            activeStep: 0\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const {activeStep} = this.state;\\n        const steps = getSteps();\\n        const connector = (\\n            <StepConnector\\n                classes={{\\n                    active   : classes.connectorActive,\\n                    completed: classes.connectorCompleted,\\n                    disabled : classes.connectorDisabled,\\n                    line     : classes.connectorLine\\n                }}\\n            />\\n        );\\n\\n        return (\\n            <div className={classes.root}>\\n                <Stepper activeStep={activeStep} connector={connector}>\\n                    {steps.map(label => (\\n                        <Step key={label}>\\n                            <StepLabel>{label}</StepLabel>\\n                        </Step>\\n                    ))}\\n                </Stepper>\\n                <Stepper alternativeLabel activeStep={activeStep} connector={connector}>\\n                    {steps.map(label => (\\n                        <Step key={label}>\\n                            <StepLabel>{label}</StepLabel>\\n                        </Step>\\n                    ))}\\n                </Stepper>\\n                <div>\\n                    {activeStep === steps.length ? (\\n                        <div>\\n                            <Typography className={classes.instructions}>\\n                                All steps completed - you&apos;re finished\\n                            </Typography>\\n                            <Button onClick={this.handleReset} className={classes.button}>\\n                                Reset\\n                            </Button>\\n                        </div>\\n                    ) : (\\n                        <div>\\n                            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\\n                            <div>\\n                                <Button\\n                                    disabled={activeStep === 0}\\n                                    onClick={this.handleBack}\\n                                    className={classes.button}\\n                                >\\n                                    Back\\n                                </Button>\\n                                <Button\\n                                    variant=\\\"contained\\\"\\n                                    color=\\\"primary\\\"\\n                                    onClick={this.handleNext}\\n                                    className={classes.button}\\n                                >\\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\n                                </Button>\\n                            </div>\\n                        </div>\\n                    )}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nCustomizedStepper.propTypes = {\\n    classes: PropTypes.object\\n};\\n\\nexport default withStyles(styles)(CustomizedStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst tutorialSteps = [\n    {\n        label  : 'San Francisco – Oakland Bay Bridge, United States',\n        imgPath:\n            'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60'\n    },\n    {\n        label  : 'Bird',\n        imgPath:\n            'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60'\n    },\n    {\n        label  : 'Bali, Indonesia',\n        imgPath:\n            'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80'\n    },\n    {\n        label  : 'NeONBRAND Digital Marketing, Las Vegas, United States',\n        imgPath:\n            'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60'\n    },\n    {\n        label  : 'Goč, Serbia',\n        imgPath:\n            'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60'\n    }\n];\n\nconst styles = theme => ({\n    root  : {\n        maxWidth: 400,\n        flexGrow: 1\n    },\n    header: {\n        display        : 'flex',\n        alignItems     : 'center',\n        height         : 50,\n        paddingLeft    : theme.spacing.unit * 4,\n        backgroundColor: theme.palette.background.default\n    },\n    img   : {\n        height  : 255,\n        maxWidth: 400,\n        overflow: 'hidden',\n        display : 'block',\n        width   : '100%'\n    }\n});\n\nclass TextMobileStepper extends React.Component {\n    state = {\n        activeStep: 0\n    };\n\n    handleNext = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep + 1\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep - 1\n        }));\n    };\n\n    render()\n    {\n        const {classes, theme} = this.props;\n        const {activeStep} = this.state;\n        const maxSteps = tutorialSteps.length;\n\n        return (\n            <div className={classes.root}>\n                <Paper square elevation={0} className={classes.header}>\n                    <Typography>{tutorialSteps[activeStep].label}</Typography>\n                </Paper>\n                <img\n                    className={classes.img}\n                    src={tutorialSteps[activeStep].imgPath}\n                    alt={tutorialSteps[activeStep].label}\n                />\n                <MobileStepper\n                    steps={maxSteps}\n                    position=\"static\"\n                    activeStep={activeStep}\n                    className={classes.mobileStepper}\n                    nextButton={\n                        <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\n                            Next\n                            {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n                        </Button>\n                    }\n                    backButton={\n                        <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\n                            {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n                            Back\n                        </Button>\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nTextMobileStepper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme  : PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, {withTheme: true})(TextMobileStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\nimport Paper from '@material-ui/core/Paper';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\n\\nconst tutorialSteps = [\\n    {\\n        label  : 'San Francisco – Oakland Bay Bridge, United States',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60'\\n    },\\n    {\\n        label  : 'Bird',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60'\\n    },\\n    {\\n        label  : 'Bali, Indonesia',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80'\\n    },\\n    {\\n        label  : 'NeONBRAND Digital Marketing, Las Vegas, United States',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60'\\n    },\\n    {\\n        label  : 'Goč, Serbia',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60'\\n    }\\n];\\n\\nconst styles = theme => ({\\n    root  : {\\n        maxWidth: 400,\\n        flexGrow: 1\\n    },\\n    header: {\\n        display        : 'flex',\\n        alignItems     : 'center',\\n        height         : 50,\\n        paddingLeft    : theme.spacing.unit * 4,\\n        backgroundColor: theme.palette.background.default\\n    },\\n    img   : {\\n        height  : 255,\\n        maxWidth: 400,\\n        overflow: 'hidden',\\n        display : 'block',\\n        width   : '100%'\\n    }\\n});\\n\\nclass TextMobileStepper extends React.Component {\\n    state = {\\n        activeStep: 0\\n    };\\n\\n    handleNext = () => {\\n        this.setState(prevState => ({\\n            activeStep: prevState.activeStep + 1\\n        }));\\n    };\\n\\n    handleBack = () => {\\n        this.setState(prevState => ({\\n            activeStep: prevState.activeStep - 1\\n        }));\\n    };\\n\\n    render()\\n    {\\n        const {classes, theme} = this.props;\\n        const {activeStep} = this.state;\\n        const maxSteps = tutorialSteps.length;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Paper square elevation={0} className={classes.header}>\\n                    <Typography>{tutorialSteps[activeStep].label}</Typography>\\n                </Paper>\\n                <img\\n                    className={classes.img}\\n                    src={tutorialSteps[activeStep].imgPath}\\n                    alt={tutorialSteps[activeStep].label}\\n                />\\n                <MobileStepper\\n                    steps={maxSteps}\\n                    position=\\\"static\\\"\\n                    activeStep={activeStep}\\n                    className={classes.mobileStepper}\\n                    nextButton={\\n                        <Button size=\\\"small\\\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\\n                            Next\\n                            {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\\n                        </Button>\\n                    }\\n                    backButton={\\n                        <Button size=\\\"small\\\" onClick={this.handleBack} disabled={activeStep === 0}>\\n                            {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\\n                            Back\\n                        </Button>\\n                    }\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nTextMobileStepper.propTypes = {\\n    classes: PropTypes.object.isRequired,\\n    theme  : PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles, {withTheme: true})(TextMobileStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport {autoPlay} from 'react-swipeable-views-utils';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst tutorialSteps = [\n    {\n        label  : 'San Francisco – Oakland Bay Bridge, United States',\n        imgPath:\n            'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60'\n    },\n    {\n        label  : 'Bird',\n        imgPath:\n            'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60'\n    },\n    {\n        label  : 'Bali, Indonesia',\n        imgPath:\n            'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80'\n    },\n    {\n        label  : 'NeONBRAND Digital Marketing, Las Vegas, United States',\n        imgPath:\n            'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60'\n    },\n    {\n        label  : 'Goč, Serbia',\n        imgPath:\n            'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60'\n    }\n];\n\nconst styles = theme => ({\n    root  : {\n        maxWidth: 400,\n        flexGrow: 1\n    },\n    header: {\n        display        : 'flex',\n        alignItems     : 'center',\n        height         : 50,\n        paddingLeft    : theme.spacing.unit * 4,\n        backgroundColor: theme.palette.background.default\n    },\n    img   : {\n        height  : 255,\n        display : 'block',\n        maxWidth: 400,\n        overflow: 'hidden',\n        width   : '100%'\n    }\n});\n\nclass SwipeableTextMobileStepper extends React.Component {\n    state = {\n        activeStep: 0\n    };\n\n    handleNext = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep + 1\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep - 1\n        }));\n    };\n\n    handleStepChange = activeStep => {\n        this.setState({activeStep});\n    };\n\n    render()\n    {\n        const {classes, theme} = this.props;\n        const {activeStep} = this.state;\n        const maxSteps = tutorialSteps.length;\n\n        return (\n            <div className={classes.root}>\n                <Paper square elevation={0} className={classes.header}>\n                    <Typography>{tutorialSteps[activeStep].label}</Typography>\n                </Paper>\n                <AutoPlaySwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={activeStep}\n                    onChangeIndex={this.handleStepChange}\n                    enableMouseEvents\n                >\n                    {tutorialSteps.map((step, index) => (\n                        <div key={step.label}>\n                            {Math.abs(activeStep - index) <= 2 ? (\n                                <img className={classes.img} src={step.imgPath} alt={step.label}/>\n                            ) : null}\n                        </div>\n                    ))}\n                </AutoPlaySwipeableViews>\n                <MobileStepper\n                    steps={maxSteps}\n                    position=\"static\"\n                    activeStep={activeStep}\n                    className={classes.mobileStepper}\n                    nextButton={\n                        <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\n                            Next\n                            {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n                        </Button>\n                    }\n                    backButton={\n                        <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\n                            {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n                            Back\n                        </Button>\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nSwipeableTextMobileStepper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme  : PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, {withTheme: true})(SwipeableTextMobileStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\nimport Paper from '@material-ui/core/Paper';\\nimport Typography from '@material-ui/core/Typography';\\nimport Button from '@material-ui/core/Button';\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\nimport SwipeableViews from 'react-swipeable-views';\\nimport {autoPlay} from 'react-swipeable-views-utils';\\n\\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\\n\\nconst tutorialSteps = [\\n    {\\n        label  : 'San Francisco – Oakland Bay Bridge, United States',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60'\\n    },\\n    {\\n        label  : 'Bird',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60'\\n    },\\n    {\\n        label  : 'Bali, Indonesia',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80'\\n    },\\n    {\\n        label  : 'NeONBRAND Digital Marketing, Las Vegas, United States',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60'\\n    },\\n    {\\n        label  : 'Goč, Serbia',\\n        imgPath:\\n            'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60'\\n    }\\n];\\n\\nconst styles = theme => ({\\n    root  : {\\n        maxWidth: 400,\\n        flexGrow: 1\\n    },\\n    header: {\\n        display        : 'flex',\\n        alignItems     : 'center',\\n        height         : 50,\\n        paddingLeft    : theme.spacing.unit * 4,\\n        backgroundColor: theme.palette.background.default\\n    },\\n    img   : {\\n        height  : 255,\\n        display : 'block',\\n        maxWidth: 400,\\n        overflow: 'hidden',\\n        width   : '100%'\\n    }\\n});\\n\\nclass SwipeableTextMobileStepper extends React.Component {\\n    state = {\\n        activeStep: 0\\n    };\\n\\n    handleNext = () => {\\n        this.setState(prevState => ({\\n            activeStep: prevState.activeStep + 1\\n        }));\\n    };\\n\\n    handleBack = () => {\\n        this.setState(prevState => ({\\n            activeStep: prevState.activeStep - 1\\n        }));\\n    };\\n\\n    handleStepChange = activeStep => {\\n        this.setState({activeStep});\\n    };\\n\\n    render()\\n    {\\n        const {classes, theme} = this.props;\\n        const {activeStep} = this.state;\\n        const maxSteps = tutorialSteps.length;\\n\\n        return (\\n            <div className={classes.root}>\\n                <Paper square elevation={0} className={classes.header}>\\n                    <Typography>{tutorialSteps[activeStep].label}</Typography>\\n                </Paper>\\n                <AutoPlaySwipeableViews\\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\\n                    index={activeStep}\\n                    onChangeIndex={this.handleStepChange}\\n                    enableMouseEvents\\n                >\\n                    {tutorialSteps.map((step, index) => (\\n                        <div key={step.label}>\\n                            {Math.abs(activeStep - index) <= 2 ? (\\n                                <img className={classes.img} src={step.imgPath} alt={step.label}/>\\n                            ) : null}\\n                        </div>\\n                    ))}\\n                </AutoPlaySwipeableViews>\\n                <MobileStepper\\n                    steps={maxSteps}\\n                    position=\\\"static\\\"\\n                    activeStep={activeStep}\\n                    className={classes.mobileStepper}\\n                    nextButton={\\n                        <Button size=\\\"small\\\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\\n                            Next\\n                            {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\\n                        </Button>\\n                    }\\n                    backButton={\\n                        <Button size=\\\"small\\\" onClick={this.handleBack} disabled={activeStep === 0}>\\n                            {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\\n                            Back\\n                        </Button>\\n                    }\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nSwipeableTextMobileStepper.propTypes = {\\n    classes: PropTypes.object.isRequired,\\n    theme  : PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles, {withTheme: true})(SwipeableTextMobileStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst styles = {\n    root: {\n        maxWidth: 400,\n        flexGrow: 1\n    }\n};\n\nclass DotsMobileStepper extends React.Component {\n    state = {\n        activeStep: 0\n    };\n\n    handleNext = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep + 1\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    render()\n    {\n        const {classes, theme} = this.props;\n\n        return (\n            <MobileStepper\n                variant=\"dots\"\n                steps={6}\n                position=\"static\"\n                activeStep={this.state.activeStep}\n                className={classes.root}\n                nextButton={\n                    <Button size=\"small\" onClick={this.handleNext} disabled={this.state.activeStep === 5}>\n                        Next\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={this.handleBack} disabled={this.state.activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n                        Back\n                    </Button>\n                }\n            />\n        );\n    }\n}\n\nDotsMobileStepper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme  : PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, {withTheme: true})(DotsMobileStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\nimport Button from '@material-ui/core/Button';\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\n\\nconst styles = {\\n    root: {\\n        maxWidth: 400,\\n        flexGrow: 1\\n    }\\n};\\n\\nclass DotsMobileStepper extends React.Component {\\n    state = {\\n        activeStep: 0\\n    };\\n\\n    handleNext = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep + 1\\n        }));\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    render()\\n    {\\n        const {classes, theme} = this.props;\\n\\n        return (\\n            <MobileStepper\\n                variant=\\\"dots\\\"\\n                steps={6}\\n                position=\\\"static\\\"\\n                activeStep={this.state.activeStep}\\n                className={classes.root}\\n                nextButton={\\n                    <Button size=\\\"small\\\" onClick={this.handleNext} disabled={this.state.activeStep === 5}>\\n                        Next\\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\\n                    </Button>\\n                }\\n                backButton={\\n                    <Button size=\\\"small\\\" onClick={this.handleBack} disabled={this.state.activeStep === 0}>\\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\\n                        Back\\n                    </Button>\\n                }\\n            />\\n        );\\n    }\\n}\\n\\nDotsMobileStepper.propTypes = {\\n    classes: PropTypes.object.isRequired,\\n    theme  : PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles, {withTheme: true})(DotsMobileStepper);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst styles = {\n    root: {\n        maxWidth: 400,\n        flexGrow: 1\n    }\n};\n\nclass ProgressMobileStepper extends React.Component {\n    state = {\n        activeStep: 0\n    };\n\n    handleNext = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep + 1\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1\n        }));\n    };\n\n    render()\n    {\n        const {classes, theme} = this.props;\n\n        return (\n            <MobileStepper\n                variant=\"progress\"\n                steps={6}\n                position=\"static\"\n                activeStep={this.state.activeStep}\n                className={classes.root}\n                nextButton={\n                    <Button size=\"small\" onClick={this.handleNext} disabled={this.state.activeStep === 5}>\n                        Next\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={this.handleBack} disabled={this.state.activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n                        Back\n                    </Button>\n                }\n            />\n        );\n    }\n}\n\nProgressMobileStepper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme  : PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, {withTheme: true})(ProgressMobileStepper);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\nimport Button from '@material-ui/core/Button';\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\n\\nconst styles = {\\n    root: {\\n        maxWidth: 400,\\n        flexGrow: 1\\n    }\\n};\\n\\nclass ProgressMobileStepper extends React.Component {\\n    state = {\\n        activeStep: 0\\n    };\\n\\n    handleNext = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep + 1\\n        }));\\n    };\\n\\n    handleBack = () => {\\n        this.setState(state => ({\\n            activeStep: state.activeStep - 1\\n        }));\\n    };\\n\\n    render()\\n    {\\n        const {classes, theme} = this.props;\\n\\n        return (\\n            <MobileStepper\\n                variant=\\\"progress\\\"\\n                steps={6}\\n                position=\\\"static\\\"\\n                activeStep={this.state.activeStep}\\n                className={classes.root}\\n                nextButton={\\n                    <Button size=\\\"small\\\" onClick={this.handleNext} disabled={this.state.activeStep === 5}>\\n                        Next\\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\\n                    </Button>\\n                }\\n                backButton={\\n                    <Button size=\\\"small\\\" onClick={this.handleBack} disabled={this.state.activeStep === 0}>\\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\\n                        Back\\n                    </Button>\\n                }\\n            />\\n        );\\n    }\\n}\\n\\nProgressMobileStepper.propTypes = {\\n    classes: PropTypes.object.isRequired,\\n    theme  : PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles, {withTheme: true})(ProgressMobileStepper);\\n\"","import React from 'react';\nimport {FuseExample, FuseHighlight, FusePageSimple} from '@fuse';\nimport {Button, Icon, Typography} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles/index';\n/* eslint import/no-webpack-loader-syntax: off */\n/* eslint no-unused-vars: off */\nconst styles = theme => ({\n    layoutRoot: {\n        '& .description': {\n            marginBottom: 16\n        }\n    }\n});\n\nfunction Steppers({classes})\n{\n    return (\n\n        <FusePageSimple\n            classes={{\n                root: classes.layoutRoot\n            }}\n            header={\n                <div className=\"flex flex-1 items-center justify-between p-24\">\n                    <Typography variant=\"h6\">Steppers</Typography>\n                    <Button\n                        className=\"normal-case\"\n                        variant=\"contained\"\n                        component=\"a\"\n                        href=\"https://material-ui-next.com/demos/steppers\"\n                        target=\"_blank\"\n                    >\n                        <Icon className=\"mr-4\">link</Icon>\n                        Reference\n                    </Button>\n                </div>\n            }\n            content={\n                <div className=\"p-24 max-w-2xl mx-auto\">\n                    <Typography className=\"text-44 mt-32 mb-8\" component=\"h1\">Steppers</Typography>\n                    <Typography className=\"description\">Steppers convey progress through numbered steps.</Typography>\n\n                    <Typography className=\"mb-16\" component=\"div\"><a href=\"https://material.io/archive/guidelines/components/steppers.html\">Steppers</a> display progress through a\n                        sequence of logical and numbered steps. They may also be used for navigation.\n                        Steppers may display a transient feedback message after a step is saved.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><strong>Types of Steps</strong></Typography>\n                    <ul>\n                        <li>Editable</li>\n                        <li>Non-editable</li>\n                        <li>Mobile</li>\n                        <li>Optional</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\"><strong>Types of Steppers</strong></Typography>\n                    <ul>\n                        <li>Horizontal</li>\n                        <li>Vertical</li>\n                        <li>Linear</li>\n                        <li>Non-linear</li>\n                    </ul>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Horizontal Linear</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">The <code>Stepper</code> can be controlled by passing the current step index (zero-based) as\n                        the <code>activeStep</code> property. <code>Stepper</code> orientation is set using the <code>orientation</code> property.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">This example also shows the use of an optional step by placing the <code>optional</code> property on the\n                        second <code>Step</code> component. Note that it&#39;s up to you to manage when an optional step is skipped. Once you&#39;ve determined this for a\n                        particular step you must set <code>completed={false}</code> to signify that even though the active step index has gone beyond the optional step, it&#39;s\n                        not actually complete.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Horizontal Non-linear</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Non-linear steppers allow users to enter a multi-step flow at any point.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">This example is similar to the regular horizontal stepper, except steps are no longer automatically set\n                        to <code>disabled={true}</code> based on the <code>activeStep</code> property.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">We&#39;ve used the <code>StepButton</code> here to demonstrate clickable step labels as well as setting\n                        the <code>completed</code>\n                        flag however because steps can be accessed in a non-linear fashion it&#39;s up to your own implementation to\n                        determine when all steps are completed (or even if they need to be completed).</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Horizontal Linear - Alternative Label</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Labels can be placed below the step icon by setting the <code>alternativeLabel</code> property on\n                        the <code>Stepper</code> component.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearAlternativeLabelStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/HorizontalLinearAlternativeLabelStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Horizontal Non Linear - Alternative Label</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearAlternativeLabelStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearAlternativeLabelStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Horizontal Non Linear - Error Step</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepperWithError.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/HorizontalNonLinearStepperWithError.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Vertical Stepper</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/VerticalLinearStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/VerticalLinearStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Customized Stepper</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">This component uses a customized <code>StepConnector</code> element that changes border color based on\n                        the <code>active</code> and <code>completed</code> state.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/CustomizedStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/CustomizedStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Mobile Stepper</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">This component implements a compact stepper suitable for a mobile device. See <a\n                        href=\"https://material.io/archive/guidelines/components/steppers.html#steppers-types-of-steps\">mobile steps</a> for its inspiration.</Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">Mobile Stepper - Text</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">This is essentially a back/next button positioned correctly.\n                        You must implement the textual description yourself, however, an example is provided below for reference.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/TextMobileStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/TextMobileStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">Mobile Stepper - Text with Carousel effect</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">This demo is very similar to the previous, the difference is the usage of\n                        <a href=\"https://github.com/oliviertassinari/react-swipeable-views\">react-swipeable-views</a> to make the transition of steps.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/SwipeableTextMobileStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/SwipeableTextMobileStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">Mobile Stepper - Dots</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Use dots when the number of steps isn’t large.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/DotsMobileStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/DotsMobileStepper.js')}\n                    /></Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">Mobile Stepper - Progress</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Use a progress bar when there are many steps, or if there are steps that need to be inserted during the process\n                        (based on responses to earlier steps).</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/steppers/ProgressMobileStepper.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/steppers/ProgressMobileStepper.js')}\n                    /></Typography>\n\n                </div>\n            }\n        />\n\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(Steppers);\n"],"sourceRoot":""}