{"version":3,"sources":["../node_modules/@material-ui/icons/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@material-ui/icons/node_modules/recompose/setDisplayName.js","../node_modules/@material-ui/icons/node_modules/recompose/wrapDisplayName.js","../node_modules/@material-ui/icons/node_modules/recompose/pure.js","../node_modules/@material-ui/icons/node_modules/recompose/shouldUpdate.js","../node_modules/@material-ui/icons/node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/@material-ui/icons/node_modules/recompose/setStatic.js","../node_modules/@material-ui/icons/node_modules/recompose/getDisplayName.js","../node_modules/@material-ui/icons/node_modules/recompose/shallowEqual.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/ListItemAvatar/ListItemAvatar.js","main/content/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js","../node_modules/@material-ui/icons/Person.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js?4bda","main/content/components/material-ui/material-ui-examples/dialogs/AlertDialog.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/AlertDialog.js?f326","main/content/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js?cf44","main/content/components/material-ui/material-ui-examples/dialogs/FormDialog.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/FormDialog.js?0e3e","main/content/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js?68a4","main/content/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js?3658","main/content/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js","../node_modules/@material-ui/core/withMobileDialog/withMobileDialog.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js?f89f","main/content/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js?019f","main/content/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js?3091","main/content/components/material-ui/pages/Dialogs.js","../node_modules/@material-ui/core/ListItemAvatar/index.js","../node_modules/@material-ui/core/withMobileDialog/index.js"],"names":["module","exports","obj","__esModule","default","_interopRequireDefault","__webpack_require__","Object","defineProperty","value","_react","_pure","_SvgIcon","_default","path","displayName","Icon","props","createElement","concat","muiName","_setStatic","_getDisplayName","BaseComponent","hocName","_shouldUpdate","_shallowEqual","nextProps","hoc","_inheritsLoose2","test","factory","createFactory","_Component","ShouldUpdate","apply","this","arguments","_proto","prototype","shouldComponentUpdate","render","Component","subClass","superClass","create","constructor","__proto__","key","name","Fragment","d","fill","styles","_defineProperty2","_extends2","_objectWithoutProperties2","_classnames","_withStyles","_ListContext","theme","root","width","height","fontSize","typography","pxToRem","marginRight","alignItemsFlexStart","marginTop","icon","ListItemAvatar","children","classes","className","other","Consumer","context","_classNames","cloneElement","dense","alignItems","childrenClassName","propTypes","emails","avatar","backgroundColor","blue","color","SimpleDialog","handleClose","_this","onClose","selectedValue","handleListItemClick","_this2","_this$props","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_15___default","assign","aria-labelledby","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_14___default","id","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_10___default","map","email","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_11___default","button","onClick","_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_Person__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_13___default","primary","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_17___default","React","SimpleDialogWrapped","withStyles","SimpleDialogDemo","state","open","handleClickOpen","_this3","setState","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_18___default","variant","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","AlertDialog","react__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_7___default","aria-describedby","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_8___default","autoFocus","Transition","_material_ui_core_Slide__WEBPACK_IMPORTED_MODULE_12___default","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_7___default","margin","label","type","fullWidth","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_Slide__WEBPACK_IMPORTED_MODULE_18___default","FullScreenDialog","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","fullScreen","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_13___default","appBar","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_15___default","aria-label","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_16___default","flex","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_9___default","secondary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_12___default","position","maxWidth","handleMaxWidthChange","event","target","handleFullWidthChange","checked","form","noValidate","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_13___default","formControl","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_15___default","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_17___default","onChange","inputProps","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_14___default","formControlLabel","control","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_18___default","display","flexDirection","spacing","unit","minWidth","ResponsiveDialog","withMobileDialog","_interopRequireWildcard","_withWidth","options","length","undefined","_options$breakpoint","breakpoint","WithMobileDialog","isWidthDown","ConfirmationDialogRaw","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleEntering","radioGroupRef","focus","handleCancel","handleOk","handleChange","disableBackdropClick","disableEscapeKeyDown","onEntering","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_RadioGroup__WEBPACK_IMPORTED_MODULE_16___default","ref","option","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_core_Radio__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_14___default","ConfirmationDialog","handleClickListItem","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_9___default","divider","disabled","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_11___default","aria-haspopup","aria-controls","paper","palette","background","maxHeight","ScrollDialog","scroll","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fuse__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles_index__WEBPACK_IMPORTED_MODULE_3__","layoutRoot","& .description","marginBottom","withTheme","_ref","header","component","href","content","iframe","require","raw","enumerable","get","_ListItemAvatar","_withMobileDialog"],"mappings":"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","file":"static/js/92.3824c886.chunk.js","sourcesContent":["function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _pure = _interopRequireDefault(require(\"recompose/pure\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Icon = function Icon(props) {\n    return _react.default.createElement(_SvgIcon.default, props, path);\n  };\n\n  Icon.displayName = \"\".concat(displayName, \"Icon\");\n  Icon = (0, _pure.default)(Icon);\n  Icon.muiName = 'SvgIcon';\n  return Icon;\n}\n\n;\nvar _default = createSvgIcon;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _setStatic = _interopRequireDefault(require(\"./setStatic\"));\n\nvar setDisplayName = function setDisplayName(displayName) {\n  return (0, _setStatic.default)('displayName', displayName);\n};\n\nvar _default = setDisplayName;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _getDisplayName = _interopRequireDefault(require(\"./getDisplayName\"));\n\nvar wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {\n  return hocName + \"(\" + (0, _getDisplayName.default)(BaseComponent) + \")\";\n};\n\nvar _default = wrapDisplayName;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _shouldUpdate = _interopRequireDefault(require(\"./shouldUpdate\"));\n\nvar _shallowEqual = _interopRequireDefault(require(\"./shallowEqual\"));\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar pure = function pure(BaseComponent) {\n  var hoc = (0, _shouldUpdate.default)(function (props, nextProps) {\n    return !(0, _shallowEqual.default)(props, nextProps);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'pure'))(hoc(BaseComponent));\n  }\n\n  return hoc(BaseComponent);\n};\n\nvar _default = pure;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = require(\"react\");\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar shouldUpdate = function shouldUpdate(test) {\n  return function (BaseComponent) {\n    var factory = (0, _react.createFactory)(BaseComponent);\n\n    var ShouldUpdate =\n    /*#__PURE__*/\n    function (_Component) {\n      (0, _inheritsLoose2.default)(ShouldUpdate, _Component);\n\n      function ShouldUpdate() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = ShouldUpdate.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return test(this.props, nextProps);\n      };\n\n      _proto.render = function render() {\n        return factory(this.props);\n      };\n\n      return ShouldUpdate;\n    }(_react.Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);\n    }\n\n    return ShouldUpdate;\n  };\n};\n\nvar _default = shouldUpdate;\nexports.default = _default;","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar setStatic = function setStatic(key, value) {\n  return function (BaseComponent) {\n    /* eslint-disable no-param-reassign */\n    BaseComponent[key] = value;\n    /* eslint-enable no-param-reassign */\n\n    return BaseComponent;\n  };\n};\n\nvar _default = setStatic;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar getDisplayName = function getDisplayName(Component) {\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (!Component) {\n    return undefined;\n  }\n\n  return Component.displayName || Component.name || 'Component';\n};\n\nvar _default = getDisplayName;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _shallowEqual = _interopRequireDefault(require(\"fbjs/lib/shallowEqual\"));\n\nvar _default = _shallowEqual.default;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _ListContext = _interopRequireDefault(require(\"../List/ListContext\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      width: 36,\n      height: 36,\n      fontSize: theme.typography.pxToRem(18),\n      marginRight: 4\n    },\n\n    /* Styles applied to the root element when. */\n    alignItemsFlexStart: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the children – typically the `Avatar` component. */\n    icon: {\n      width: 20,\n      height: 20,\n      fontSize: theme.typography.pxToRem(20)\n    }\n  };\n};\n/**\n * This is a simple wrapper to apply the `dense`\n * and `align-items=\"flex-start\"` mode styles to `Avatar`.\n */\n\n\nexports.styles = styles;\n\nfunction ListItemAvatar(props) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\"]);\n  return _react.default.createElement(_ListContext.default.Consumer, null, function (context) {\n    var _classNames;\n\n    return _react.default.cloneElement(children, (0, _extends2.default)({\n      className: (0, _classnames.default)((_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.root, context.dense), (0, _defineProperty2.default)(_classNames, classes.alignItemsFlexStart, context.alignItems === 'flex-start'), _classNames), className, children.props.className),\n      childrenClassName: (0, _classnames.default)((0, _defineProperty2.default)({}, classes.icon, context.dense), children.props.childrenClassName)\n    }, other));\n  });\n}\n\nListItemAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: _propTypes.default.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string\n} : {};\nListItemAvatar.muiName = 'ListItemAvatar';\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);\n\nexports.default = _default;","/* eslint-disable react/no-multi-comp */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst styles = {\n    avatar: {\n        backgroundColor: blue[100],\n        color          : blue[600]\n    }\n};\n\nclass SimpleDialog extends React.Component {\n    handleClose = () => {\n        this.props.onClose(this.props.selectedValue);\n    };\n\n    handleListItemClick = value => {\n        this.props.onClose(value);\n    };\n\n    render()\n    {\n        const {classes, onClose, selectedValue, ...other} = this.props;\n\n        return (\n            <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n                <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n                <div>\n                    <List>\n                        {emails.map(email => (\n                            <ListItem button onClick={() => this.handleListItemClick(email)} key={email}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <PersonIcon/>\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={email}/>\n                            </ListItem>\n                        ))}\n                        <ListItem button onClick={() => this.handleListItemClick('addAccount')}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <AddIcon/>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"add account\"/>\n                        </ListItem>\n                    </List>\n                </div>\n            </Dialog>\n        );\n    }\n}\n\nSimpleDialog.propTypes = {\n    classes      : PropTypes.object.isRequired,\n    onClose      : PropTypes.func,\n    selectedValue: PropTypes.string\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n    state = {\n        open         : false,\n        selectedValue: emails[1]\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    };\n\n    handleClose = value => {\n        this.setState({\n            selectedValue: value,\n            open         : false\n        });\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Typography variant=\"subtitle1\">Selected: {this.state.selectedValue}</Typography>\n                <br/>\n                <Button onClick={this.handleClickOpen}>Open simple dialog</Button>\n                <SimpleDialogWrapped\n                    selectedValue={this.state.selectedValue}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SimpleDialogDemo;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Person');\n\nexports.default = _default;","module.exports = \"/* eslint-disable react/no-multi-comp */\\n\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport PersonIcon from '@material-ui/icons/Person';\\nimport AddIcon from '@material-ui/icons/Add';\\nimport Typography from '@material-ui/core/Typography';\\nimport blue from '@material-ui/core/colors/blue';\\n\\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\\nconst styles = {\\n    avatar: {\\n        backgroundColor: blue[100],\\n        color          : blue[600]\\n    }\\n};\\n\\nclass SimpleDialog extends React.Component {\\n    handleClose = () => {\\n        this.props.onClose(this.props.selectedValue);\\n    };\\n\\n    handleListItemClick = value => {\\n        this.props.onClose(value);\\n    };\\n\\n    render()\\n    {\\n        const {classes, onClose, selectedValue, ...other} = this.props;\\n\\n        return (\\n            <Dialog onClose={this.handleClose} aria-labelledby=\\\"simple-dialog-title\\\" {...other}>\\n                <DialogTitle id=\\\"simple-dialog-title\\\">Set backup account</DialogTitle>\\n                <div>\\n                    <List>\\n                        {emails.map(email => (\\n                            <ListItem button onClick={() => this.handleListItemClick(email)} key={email}>\\n                                <ListItemAvatar>\\n                                    <Avatar className={classes.avatar}>\\n                                        <PersonIcon/>\\n                                    </Avatar>\\n                                </ListItemAvatar>\\n                                <ListItemText primary={email}/>\\n                            </ListItem>\\n                        ))}\\n                        <ListItem button onClick={() => this.handleListItemClick('addAccount')}>\\n                            <ListItemAvatar>\\n                                <Avatar>\\n                                    <AddIcon/>\\n                                </Avatar>\\n                            </ListItemAvatar>\\n                            <ListItemText primary=\\\"add account\\\"/>\\n                        </ListItem>\\n                    </List>\\n                </div>\\n            </Dialog>\\n        );\\n    }\\n}\\n\\nSimpleDialog.propTypes = {\\n    classes      : PropTypes.object.isRequired,\\n    onClose      : PropTypes.func,\\n    selectedValue: PropTypes.string\\n};\\n\\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\\n\\nclass SimpleDialogDemo extends React.Component {\\n    state = {\\n        open         : false,\\n        selectedValue: emails[1]\\n    };\\n\\n    handleClickOpen = () => {\\n        this.setState({\\n            open: true\\n        });\\n    };\\n\\n    handleClose = value => {\\n        this.setState({\\n            selectedValue: value,\\n            open         : false\\n        });\\n    };\\n\\n    render()\\n    {\\n        return (\\n            <div>\\n                <Typography variant=\\\"subtitle1\\\">Selected: {this.state.selectedValue}</Typography>\\n                <br/>\\n                <Button onClick={this.handleClickOpen}>Open simple dialog</Button>\\n                <SimpleDialogWrapped\\n                    selectedValue={this.state.selectedValue}\\n                    open={this.state.open}\\n                    onClose={this.handleClose}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default SimpleDialogDemo;\\n\"","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass AlertDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open alert dialog</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Let Google help apps determine location. This means sending anonymous location data to\n                            Google, even when no apps are running.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Disagree\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AlertDialog;\n","module.exports = \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\n\\nclass AlertDialog extends React.Component {\\n    state = {\\n        open: false\\n    };\\n\\n    handleClickOpen = () => {\\n        this.setState({open: true});\\n    };\\n\\n    handleClose = () => {\\n        this.setState({open: false});\\n    };\\n\\n    render()\\n    {\\n        return (\\n            <div>\\n                <Button onClick={this.handleClickOpen}>Open alert dialog</Button>\\n                <Dialog\\n                    open={this.state.open}\\n                    onClose={this.handleClose}\\n                    aria-labelledby=\\\"alert-dialog-title\\\"\\n                    aria-describedby=\\\"alert-dialog-description\\\"\\n                >\\n                    <DialogTitle id=\\\"alert-dialog-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\n                    <DialogContent>\\n                        <DialogContentText id=\\\"alert-dialog-description\\\">\\n                            Let Google help apps determine location. This means sending anonymous location data to\\n                            Google, even when no apps are running.\\n                        </DialogContentText>\\n                    </DialogContent>\\n                    <DialogActions>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Disagree\\n                        </Button>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\" autoFocus>\\n                            Agree\\n                        </Button>\\n                    </DialogActions>\\n                </Dialog>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default AlertDialog;\\n\"","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props)\n{\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass AlertDialogSlide extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Slide in alert dialog</Button>\n                <Dialog\n                    open={this.state.open}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Use Google's location service?\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Let Google help apps determine location. This means sending anonymous location data to\n                            Google, even when no apps are running.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Disagree\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AlertDialogSlide;\n","module.exports = \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport Slide from '@material-ui/core/Slide';\\n\\nfunction Transition(props)\\n{\\n    return <Slide direction=\\\"up\\\" {...props} />;\\n}\\n\\nclass AlertDialogSlide extends React.Component {\\n    state = {\\n        open: false\\n    };\\n\\n    handleClickOpen = () => {\\n        this.setState({open: true});\\n    };\\n\\n    handleClose = () => {\\n        this.setState({open: false});\\n    };\\n\\n    render()\\n    {\\n        return (\\n            <div>\\n                <Button onClick={this.handleClickOpen}>Slide in alert dialog</Button>\\n                <Dialog\\n                    open={this.state.open}\\n                    TransitionComponent={Transition}\\n                    keepMounted\\n                    onClose={this.handleClose}\\n                    aria-labelledby=\\\"alert-dialog-slide-title\\\"\\n                    aria-describedby=\\\"alert-dialog-slide-description\\\"\\n                >\\n                    <DialogTitle id=\\\"alert-dialog-slide-title\\\">\\n                        {\\\"Use Google's location service?\\\"}\\n                    </DialogTitle>\\n                    <DialogContent>\\n                        <DialogContentText id=\\\"alert-dialog-slide-description\\\">\\n                            Let Google help apps determine location. This means sending anonymous location data to\\n                            Google, even when no apps are running.\\n                        </DialogContentText>\\n                    </DialogContent>\\n                    <DialogActions>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Disagree\\n                        </Button>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Agree\\n                        </Button>\\n                    </DialogActions>\\n                </Dialog>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default AlertDialogSlide;\\n\"","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class FormDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open form dialog</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            To subscribe to this website, please enter your email address here. We will send\n                            updates occasionally.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Email Address\"\n                            type=\"email\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Subscribe\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n","module.exports = \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport TextField from '@material-ui/core/TextField';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\n\\nexport default class FormDialog extends React.Component {\\n    state = {\\n        open: false\\n    };\\n\\n    handleClickOpen = () => {\\n        this.setState({open: true});\\n    };\\n\\n    handleClose = () => {\\n        this.setState({open: false});\\n    };\\n\\n    render()\\n    {\\n        return (\\n            <div>\\n                <Button onClick={this.handleClickOpen}>Open form dialog</Button>\\n                <Dialog\\n                    open={this.state.open}\\n                    onClose={this.handleClose}\\n                    aria-labelledby=\\\"form-dialog-title\\\"\\n                >\\n                    <DialogTitle id=\\\"form-dialog-title\\\">Subscribe</DialogTitle>\\n                    <DialogContent>\\n                        <DialogContentText>\\n                            To subscribe to this website, please enter your email address here. We will send\\n                            updates occasionally.\\n                        </DialogContentText>\\n                        <TextField\\n                            autoFocus\\n                            margin=\\\"dense\\\"\\n                            id=\\\"name\\\"\\n                            label=\\\"Email Address\\\"\\n                            type=\\\"email\\\"\\n                            fullWidth\\n                        />\\n                    </DialogContent>\\n                    <DialogActions>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Cancel\\n                        </Button>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Subscribe\\n                        </Button>\\n                    </DialogActions>\\n                </Dialog>\\n            </div>\\n        );\\n    }\\n}\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nconst styles = {\n    appBar: {\n        position: 'relative'\n    },\n    flex  : {\n        flex: 1\n    }\n};\n\nfunction Transition(props)\n{\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass FullScreenDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open full-screen dialog</Button>\n                <Dialog\n                    fullScreen\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    TransitionComponent={Transition}\n                >\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                                <CloseIcon/>\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                Sound\n                            </Typography>\n                            <Button color=\"inherit\" onClick={this.handleClose}>\n                                save\n                            </Button>\n                        </Toolbar>\n                    </AppBar>\n                    <List>\n                        <ListItem button>\n                            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\"/>\n                        </ListItem>\n                        <Divider/>\n                        <ListItem button>\n                            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\n                        </ListItem>\n                    </List>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nFullScreenDialog.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FullScreenDialog);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport List from '@material-ui/core/List';\\nimport Divider from '@material-ui/core/Divider';\\nimport AppBar from '@material-ui/core/AppBar';\\nimport Toolbar from '@material-ui/core/Toolbar';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Typography from '@material-ui/core/Typography';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport Slide from '@material-ui/core/Slide';\\n\\nconst styles = {\\n    appBar: {\\n        position: 'relative'\\n    },\\n    flex  : {\\n        flex: 1\\n    }\\n};\\n\\nfunction Transition(props)\\n{\\n    return <Slide direction=\\\"up\\\" {...props} />;\\n}\\n\\nclass FullScreenDialog extends React.Component {\\n    state = {\\n        open: false\\n    };\\n\\n    handleClickOpen = () => {\\n        this.setState({open: true});\\n    };\\n\\n    handleClose = () => {\\n        this.setState({open: false});\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        return (\\n            <div>\\n                <Button onClick={this.handleClickOpen}>Open full-screen dialog</Button>\\n                <Dialog\\n                    fullScreen\\n                    open={this.state.open}\\n                    onClose={this.handleClose}\\n                    TransitionComponent={Transition}\\n                >\\n                    <AppBar className={classes.appBar}>\\n                        <Toolbar>\\n                            <IconButton color=\\\"inherit\\\" onClick={this.handleClose} aria-label=\\\"Close\\\">\\n                                <CloseIcon/>\\n                            </IconButton>\\n                            <Typography variant=\\\"h6\\\" color=\\\"inherit\\\" className={classes.flex}>\\n                                Sound\\n                            </Typography>\\n                            <Button color=\\\"inherit\\\" onClick={this.handleClose}>\\n                                save\\n                            </Button>\\n                        </Toolbar>\\n                    </AppBar>\\n                    <List>\\n                        <ListItem button>\\n                            <ListItemText primary=\\\"Phone ringtone\\\" secondary=\\\"Titania\\\"/>\\n                        </ListItem>\\n                        <Divider/>\\n                        <ListItem button>\\n                            <ListItemText primary=\\\"Default notification ringtone\\\" secondary=\\\"Tethys\\\"/>\\n                        </ListItem>\\n                    </List>\\n                </Dialog>\\n            </div>\\n        );\\n    }\\n}\\n\\nFullScreenDialog.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(FullScreenDialog);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n    form            : {\n        display      : 'flex',\n        flexDirection: 'column',\n        margin       : 'auto',\n        width        : 'fit-content'\n    },\n    formControl     : {\n        marginTop: theme.spacing.unit * 2,\n        minWidth : 120\n    },\n    formControlLabel: {\n        marginTop: theme.spacing.unit\n    }\n});\n\nclass FullScreenDialog extends React.Component {\n    state = {\n        open     : false,\n        fullWidth: true,\n        maxWidth : 'sm'\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    handleMaxWidthChange = event => {\n        this.setState({maxWidth: event.target.value});\n    };\n\n    handleFullWidthChange = event => {\n        this.setState({fullWidth: event.target.checked});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <React.Fragment>\n                <Button onClick={this.handleClickOpen}>Open max-width dialog</Button>\n                <Dialog\n                    fullWidth={this.state.fullWidth}\n                    maxWidth={this.state.maxWidth}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            You can set my maximum width and whether to adapt or not.\n                        </DialogContentText>\n                        <form className={classes.form} noValidate>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n                                <Select\n                                    value={this.state.maxWidth}\n                                    onChange={this.handleMaxWidthChange}\n                                    inputProps={{\n                                        name: 'max-width',\n                                        id  : 'max-width'\n                                    }}\n                                >\n                                    <MenuItem value={false}>false</MenuItem>\n                                    <MenuItem value=\"xs\">xs</MenuItem>\n                                    <MenuItem value=\"sm\">sm</MenuItem>\n                                    <MenuItem value=\"md\">md</MenuItem>\n                                    <MenuItem value=\"lg\">lg</MenuItem>\n                                    <MenuItem value=\"xl\">xl</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControlLabel\n                                className={classes.formControlLabel}\n                                control={\n                                    <Switch\n                                        checked={this.state.fullWidth}\n                                        onChange={this.handleFullWidthChange}\n                                        value=\"fullWidth\"\n                                    />\n                                }\n                                label=\"Full width\"\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nFullScreenDialog.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FullScreenDialog);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Select from '@material-ui/core/Select';\\nimport Switch from '@material-ui/core/Switch';\\n\\nconst styles = theme => ({\\n    form            : {\\n        display      : 'flex',\\n        flexDirection: 'column',\\n        margin       : 'auto',\\n        width        : 'fit-content'\\n    },\\n    formControl     : {\\n        marginTop: theme.spacing.unit * 2,\\n        minWidth : 120\\n    },\\n    formControlLabel: {\\n        marginTop: theme.spacing.unit\\n    }\\n});\\n\\nclass FullScreenDialog extends React.Component {\\n    state = {\\n        open     : false,\\n        fullWidth: true,\\n        maxWidth : 'sm'\\n    };\\n\\n    handleClickOpen = () => {\\n        this.setState({open: true});\\n    };\\n\\n    handleClose = () => {\\n        this.setState({open: false});\\n    };\\n\\n    handleMaxWidthChange = event => {\\n        this.setState({maxWidth: event.target.value});\\n    };\\n\\n    handleFullWidthChange = event => {\\n        this.setState({fullWidth: event.target.checked});\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <React.Fragment>\\n                <Button onClick={this.handleClickOpen}>Open max-width dialog</Button>\\n                <Dialog\\n                    fullWidth={this.state.fullWidth}\\n                    maxWidth={this.state.maxWidth}\\n                    open={this.state.open}\\n                    onClose={this.handleClose}\\n                    aria-labelledby=\\\"max-width-dialog-title\\\"\\n                >\\n                    <DialogTitle id=\\\"max-width-dialog-title\\\">Optional sizes</DialogTitle>\\n                    <DialogContent>\\n                        <DialogContentText>\\n                            You can set my maximum width and whether to adapt or not.\\n                        </DialogContentText>\\n                        <form className={classes.form} noValidate>\\n                            <FormControl className={classes.formControl}>\\n                                <InputLabel htmlFor=\\\"max-width\\\">maxWidth</InputLabel>\\n                                <Select\\n                                    value={this.state.maxWidth}\\n                                    onChange={this.handleMaxWidthChange}\\n                                    inputProps={{\\n                                        name: 'max-width',\\n                                        id  : 'max-width'\\n                                    }}\\n                                >\\n                                    <MenuItem value={false}>false</MenuItem>\\n                                    <MenuItem value=\\\"xs\\\">xs</MenuItem>\\n                                    <MenuItem value=\\\"sm\\\">sm</MenuItem>\\n                                    <MenuItem value=\\\"md\\\">md</MenuItem>\\n                                    <MenuItem value=\\\"lg\\\">lg</MenuItem>\\n                                    <MenuItem value=\\\"xl\\\">xl</MenuItem>\\n                                </Select>\\n                            </FormControl>\\n                            <FormControlLabel\\n                                className={classes.formControlLabel}\\n                                control={\\n                                    <Switch\\n                                        checked={this.state.fullWidth}\\n                                        onChange={this.handleFullWidthChange}\\n                                        value=\\\"fullWidth\\\"\\n                                    />\\n                                }\\n                                label=\\\"Full width\\\"\\n                            />\\n                        </form>\\n                    </DialogContent>\\n                    <DialogActions>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Close\\n                        </Button>\\n                    </DialogActions>\\n                </Dialog>\\n            </React.Fragment>\\n        );\\n    }\\n}\\n\\nFullScreenDialog.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(FullScreenDialog);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nclass ResponsiveDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        const {fullScreen} = this.props;\n\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open responsive dialog</Button>\n                <Dialog\n                    fullScreen={fullScreen}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"responsive-dialog-title\"\n                >\n                    <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Let Google help apps determine location. This means sending anonymous location data to\n                            Google, even when no apps are running.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Disagree\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nResponsiveDialog.propTypes = {\n    fullScreen: PropTypes.bool.isRequired\n};\n\nexport default withMobileDialog()(ResponsiveDialog);\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _withWidth = _interopRequireWildcard(require(\"../withWidth\"));\n/**\n * Dialog will responsively be full screen *at or below* the given breakpoint\n * (defaults to 'sm' for mobile devices).\n * Notice that this Higher-order Component is incompatible with server side rendering.\n */\n\n\nvar withMobileDialog = function withMobileDialog() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Component) {\n    var _options$breakpoint = options.breakpoint,\n        breakpoint = _options$breakpoint === void 0 ? 'sm' : _options$breakpoint;\n\n    function WithMobileDialog(props) {\n      return _react.default.createElement(Component, (0, _extends2.default)({\n        fullScreen: (0, _withWidth.isWidthDown)(breakpoint, props.width)\n      }, props));\n    }\n\n    WithMobileDialog.propTypes = process.env.NODE_ENV !== \"production\" ? {\n      width: _propTypes.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']).isRequired\n    } : {};\n    return (0, _withWidth.default)()(WithMobileDialog);\n  };\n};\n\nvar _default = withMobileDialog;\nexports.default = _default;","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\\n\\nclass ResponsiveDialog extends React.Component {\\n    state = {\\n        open: false\\n    };\\n\\n    handleClickOpen = () => {\\n        this.setState({open: true});\\n    };\\n\\n    handleClose = () => {\\n        this.setState({open: false});\\n    };\\n\\n    render()\\n    {\\n        const {fullScreen} = this.props;\\n\\n        return (\\n            <div>\\n                <Button onClick={this.handleClickOpen}>Open responsive dialog</Button>\\n                <Dialog\\n                    fullScreen={fullScreen}\\n                    open={this.state.open}\\n                    onClose={this.handleClose}\\n                    aria-labelledby=\\\"responsive-dialog-title\\\"\\n                >\\n                    <DialogTitle id=\\\"responsive-dialog-title\\\">{\\\"Use Google's location service?\\\"}</DialogTitle>\\n                    <DialogContent>\\n                        <DialogContentText>\\n                            Let Google help apps determine location. This means sending anonymous location data to\\n                            Google, even when no apps are running.\\n                        </DialogContentText>\\n                    </DialogContent>\\n                    <DialogActions>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Disagree\\n                        </Button>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\" autoFocus>\\n                            Agree\\n                        </Button>\\n                    </DialogActions>\\n                </Dialog>\\n            </div>\\n        );\\n    }\\n}\\n\\nResponsiveDialog.propTypes = {\\n    fullScreen: PropTypes.bool.isRequired\\n};\\n\\nexport default withMobileDialog()(ResponsiveDialog);\\n\"","/* eslint-disable react/no-multi-comp */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n    'None',\n    'Atria',\n    'Callisto',\n    'Dione',\n    'Ganymede',\n    'Hangouts Call',\n    'Luna',\n    'Oberon',\n    'Phobos',\n    'Pyxis',\n    'Sedna',\n    'Titania',\n    'Triton',\n    'Umbriel'\n];\n\nclass ConfirmationDialogRaw extends React.Component {\n    constructor(props)\n    {\n        super();\n        this.state = {\n            value: props.value\n        };\n    }\n\n    // TODO\n    componentWillReceiveProps(nextProps)\n    {\n        if ( nextProps.value !== this.props.value )\n        {\n            this.setState({value: nextProps.value});\n        }\n    }\n\n    handleEntering = () => {\n        this.radioGroupRef.focus();\n    };\n\n    handleCancel = () => {\n        this.props.onClose(this.props.value);\n    };\n\n    handleOk = () => {\n        this.props.onClose(this.state.value);\n    };\n\n    handleChange = (event, value) => {\n        this.setState({value});\n    };\n\n    render()\n    {\n        const {value, ...other} = this.props;\n\n        return (\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                maxWidth=\"xs\"\n                onEntering={this.handleEntering}\n                aria-labelledby=\"confirmation-dialog-title\"\n                {...other}\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n                <DialogContent>\n                    <RadioGroup\n                        ref={ref => {\n                            this.radioGroupRef = ref;\n                        }}\n                        aria-label=\"Ringtone\"\n                        name=\"ringtone\"\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    >\n                        {options.map(option => (\n                            <FormControlLabel value={option} key={option} control={<Radio/>} label={option}/>\n                        ))}\n                    </RadioGroup>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={this.handleOk} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func,\n    value  : PropTypes.string\n};\n\nconst styles = theme => ({\n    root : {\n        width          : '100%',\n        maxWidth       : 360,\n        backgroundColor: theme.palette.background.paper\n    },\n    paper: {\n        width    : '80%',\n        maxHeight: 435\n    }\n});\n\nclass ConfirmationDialog extends React.Component {\n    state = {\n        open : false,\n        value: 'Dione'\n    };\n\n    handleClickListItem = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = value => {\n        this.setState({\n            value,\n            open: false\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <List>\n                    <ListItem button divider disabled>\n                        <ListItemText primary=\"Interruptions\"/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        divider\n                        aria-haspopup=\"true\"\n                        aria-controls=\"ringtone-menu\"\n                        aria-label=\"Phone ringtone\"\n                        onClick={this.handleClickListItem}\n                    >\n                        <ListItemText primary=\"Phone ringtone\" secondary={this.state.value}/>\n                    </ListItem>\n                    <ListItem button divider disabled>\n                        <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\n                    </ListItem>\n                    <ConfirmationDialogRaw\n                        classes={{\n                            paper: classes.paper\n                        }}\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        value={this.state.value}\n                    />\n                </List>\n            </div>\n        );\n    }\n}\n\nConfirmationDialog.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ConfirmationDialog);\n","module.exports = \"/* eslint-disable react/no-multi-comp */\\n\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport Radio from '@material-ui/core/Radio';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\n\\nconst options = [\\n    'None',\\n    'Atria',\\n    'Callisto',\\n    'Dione',\\n    'Ganymede',\\n    'Hangouts Call',\\n    'Luna',\\n    'Oberon',\\n    'Phobos',\\n    'Pyxis',\\n    'Sedna',\\n    'Titania',\\n    'Triton',\\n    'Umbriel'\\n];\\n\\nclass ConfirmationDialogRaw extends React.Component {\\n    constructor(props)\\n    {\\n        super();\\n        this.state = {\\n            value: props.value\\n        };\\n    }\\n\\n    // TODO\\n    componentWillReceiveProps(nextProps)\\n    {\\n        if ( nextProps.value !== this.props.value )\\n        {\\n            this.setState({value: nextProps.value});\\n        }\\n    }\\n\\n    handleEntering = () => {\\n        this.radioGroupRef.focus();\\n    };\\n\\n    handleCancel = () => {\\n        this.props.onClose(this.props.value);\\n    };\\n\\n    handleOk = () => {\\n        this.props.onClose(this.state.value);\\n    };\\n\\n    handleChange = (event, value) => {\\n        this.setState({value});\\n    };\\n\\n    render()\\n    {\\n        const {value, ...other} = this.props;\\n\\n        return (\\n            <Dialog\\n                disableBackdropClick\\n                disableEscapeKeyDown\\n                maxWidth=\\\"xs\\\"\\n                onEntering={this.handleEntering}\\n                aria-labelledby=\\\"confirmation-dialog-title\\\"\\n                {...other}\\n            >\\n                <DialogTitle id=\\\"confirmation-dialog-title\\\">Phone Ringtone</DialogTitle>\\n                <DialogContent>\\n                    <RadioGroup\\n                        ref={ref => {\\n                            this.radioGroupRef = ref;\\n                        }}\\n                        aria-label=\\\"Ringtone\\\"\\n                        name=\\\"ringtone\\\"\\n                        value={this.state.value}\\n                        onChange={this.handleChange}\\n                    >\\n                        {options.map(option => (\\n                            <FormControlLabel value={option} key={option} control={<Radio/>} label={option}/>\\n                        ))}\\n                    </RadioGroup>\\n                </DialogContent>\\n                <DialogActions>\\n                    <Button onClick={this.handleCancel} color=\\\"primary\\\">\\n                        Cancel\\n                    </Button>\\n                    <Button onClick={this.handleOk} color=\\\"primary\\\">\\n                        Ok\\n                    </Button>\\n                </DialogActions>\\n            </Dialog>\\n        );\\n    }\\n}\\n\\nConfirmationDialogRaw.propTypes = {\\n    onClose: PropTypes.func,\\n    value  : PropTypes.string\\n};\\n\\nconst styles = theme => ({\\n    root : {\\n        width          : '100%',\\n        maxWidth       : 360,\\n        backgroundColor: theme.palette.background.paper\\n    },\\n    paper: {\\n        width    : '80%',\\n        maxHeight: 435\\n    }\\n});\\n\\nclass ConfirmationDialog extends React.Component {\\n    state = {\\n        open : false,\\n        value: 'Dione'\\n    };\\n\\n    handleClickListItem = () => {\\n        this.setState({open: true});\\n    };\\n\\n    handleClose = value => {\\n        this.setState({\\n            value,\\n            open: false\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        return (\\n            <div className={classes.root}>\\n                <List>\\n                    <ListItem button divider disabled>\\n                        <ListItemText primary=\\\"Interruptions\\\"/>\\n                    </ListItem>\\n                    <ListItem\\n                        button\\n                        divider\\n                        aria-haspopup=\\\"true\\\"\\n                        aria-controls=\\\"ringtone-menu\\\"\\n                        aria-label=\\\"Phone ringtone\\\"\\n                        onClick={this.handleClickListItem}\\n                    >\\n                        <ListItemText primary=\\\"Phone ringtone\\\" secondary={this.state.value}/>\\n                    </ListItem>\\n                    <ListItem button divider disabled>\\n                        <ListItemText primary=\\\"Default notification ringtone\\\" secondary=\\\"Tethys\\\"/>\\n                    </ListItem>\\n                    <ConfirmationDialogRaw\\n                        classes={{\\n                            paper: classes.paper\\n                        }}\\n                        open={this.state.open}\\n                        onClose={this.handleClose}\\n                        value={this.state.value}\\n                    />\\n                </List>\\n            </div>\\n        );\\n    }\\n}\\n\\nConfirmationDialog.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(ConfirmationDialog);\\n\"","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass ScrollDialog extends React.Component {\n    state = {\n        open  : false,\n        scroll: 'paper'\n    };\n\n    handleClickOpen = scroll => () => {\n        this.setState({\n            open: true,\n            scroll\n        });\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen('paper')}>scroll=paper</Button>\n                <Button onClick={this.handleClickOpen('body')}>scroll=body</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    scroll={this.state.scroll}\n                    aria-labelledby=\"scroll-dialog-title\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                            facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n                            at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus\n                            sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum\n                            nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur\n                            et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras\n                            mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Subscribe\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default ScrollDialog;\n","module.exports = \"import React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Dialog from '@material-ui/core/Dialog';\\nimport DialogActions from '@material-ui/core/DialogActions';\\nimport DialogContent from '@material-ui/core/DialogContent';\\nimport DialogContentText from '@material-ui/core/DialogContentText';\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\n\\nclass ScrollDialog extends React.Component {\\n    state = {\\n        open  : false,\\n        scroll: 'paper'\\n    };\\n\\n    handleClickOpen = scroll => () => {\\n        this.setState({\\n            open: true,\\n            scroll\\n        });\\n    };\\n\\n    handleClose = () => {\\n        this.setState({open: false});\\n    };\\n\\n    render()\\n    {\\n        return (\\n            <div>\\n                <Button onClick={this.handleClickOpen('paper')}>scroll=paper</Button>\\n                <Button onClick={this.handleClickOpen('body')}>scroll=body</Button>\\n                <Dialog\\n                    open={this.state.open}\\n                    onClose={this.handleClose}\\n                    scroll={this.state.scroll}\\n                    aria-labelledby=\\\"scroll-dialog-title\\\"\\n                >\\n                    <DialogTitle id=\\\"scroll-dialog-title\\\">Subscribe</DialogTitle>\\n                    <DialogContent>\\n                        <DialogContentText>\\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\\n                            facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\\n                            at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus\\n                            sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum\\n                            nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur\\n                            et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras\\n                            mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\\n                        </DialogContentText>\\n                    </DialogContent>\\n                    <DialogActions>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Cancel\\n                        </Button>\\n                        <Button onClick={this.handleClose} color=\\\"primary\\\">\\n                            Subscribe\\n                        </Button>\\n                    </DialogActions>\\n                </Dialog>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default ScrollDialog;\\n\"","import React from 'react';\nimport {FuseExample, FuseHighlight, FusePageSimple} from '@fuse';\nimport {Button, Icon, Typography} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles/index';\n/* eslint import/no-webpack-loader-syntax: off */\n/* eslint no-unused-vars: off */\nconst styles = theme => ({\n    layoutRoot: {\n        '& .description': {\n            marginBottom: 16\n        }\n    }\n});\n\nfunction Dialogs({classes})\n{\n    return (\n\n        <FusePageSimple\n            classes={{\n                root: classes.layoutRoot\n            }}\n            header={\n                <div className=\"flex flex-1 items-center justify-between p-24\">\n                    <Typography variant=\"h6\">Dialogs</Typography>\n                    <Button\n                        className=\"normal-case\"\n                        variant=\"contained\"\n                        component=\"a\"\n                        href=\"https://material-ui-next.com/demos/dialogs\"\n                        target=\"_blank\"\n                    >\n                        <Icon className=\"mr-4\">link</Icon>\n                        Reference\n                    </Button>\n                </div>\n            }\n            content={\n                <div className=\"p-24 max-w-2xl mx-auto\">\n                    <Typography className=\"text-44 mt-32 mb-8\" component=\"h1\">Dialogs</Typography>\n                    <Typography className=\"description\">Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple\n                        tasks.</Typography>\n\n                    <Typography className=\"mb-16\" component=\"div\">A <a href=\"https://material.io/design/components/dialogs.html\">Dialog</a> is a type of <a\n                        href=\"/utils/modal/\">modal</a> window that appears in front of app content to provide critical information or ask for a decision. Dialogs disable all app\n                        functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Dialogs are purposefully interruptive, so they should be used sparingly.</Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Simple Dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Simple dialogs can provide additional details or actions about a list item.\n                        For example, they can display avatars, icons, clarifying subtext, or orthogonal actions (such as adding an account).</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Touch mechanics:</Typography>\n                    <ul>\n                        <li>Choosing an option immediately commits the option and closes the menu</li>\n                        <li>Touching outside of the dialog, or pressing Back, cancels the action and closes the dialog</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/SimpleDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Alerts</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Most alerts don&#39;t need titles.\n                        They summarize a decision in a sentence or two by either:</Typography>\n                    <ul>\n                        <li>Asking a question (e.g. &quot;Delete this conversation?&quot;)</li>\n                        <li>Making a statement related to the action buttons</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\">Use title bar alerts only for high-risk situations, such as the potential loss of connectivity.\n                        Users should be able to understand the choices based on the title and button text alone.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">If a title is required:</Typography>\n                    <ul>\n                        <li>Use a clear question or statement with an explanation in the content area, such as &quot;Erase USB storage?&quot;.</li>\n                        <li>Avoid apologies, ambiguity, or questions, such as “Warning!” or “Are you sure?”</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/AlertDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/AlertDialog.js')}\n                    /></Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You can also swap out the transition, the next example uses <code>Slide</code>.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/AlertDialogSlide.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Form dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Form dialogs allow users to fill out form fields within a dialog.\n                        For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and\n                        touch &#39;Submit&#39;</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/FormDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/FormDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Full-screen dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/FullScreenDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Optional sizes</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You can set a dialog maximum width by using the <code>maxWidth</code> enumerable in combination with\n                        the <code>fullWidth</code> boolean.\n                        When the <code>fullWidth</code> property is true, the dialog will adapt based on the <code>maxWidth</code> value.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/MaxWidthDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Responsive full-screen</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You may make a dialog responsively full screen the dialog using <code>withMobileDialog</code>. By\n                        default, <code>withMobileDialog()(Dialog)</code> responsively full screens <em>at or below</em> the <code>sm</code> <a href=\"/layout/basics/\">screen\n                            size</a>. You can choose your own breakpoint for example <code>xs</code> by passing\n                        the <code>breakpoint</code> argument: <code>withMobileDialog({\"{breakpoint: 'xs'}\"})(Dialog)</code>.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/ResponsiveDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Confirmation dialogs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Confirmation dialogs require users to explicitly confirm their choice before an option is committed.\n                        For example, users can listen to multiple ringtones but only make a final selection upon touching “OK.”</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Touching “Cancel” in a confirmation dialog, or pressing Back, cancels the action, discards any changes, and closes\n                        the dialog.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/ConfirmationDialog.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Accessibility</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Be sure to add <code>aria-labelledby=&quot;id...&quot;</code>, referencing the modal title, to\n                        the <code>Dialog</code>. Additionally, you may give a description of your modal dialog with the <code>aria-describedby=&quot;id...&quot;</code> property on\n                        the <code>Dialog</code>.</Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Scrolling long content</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">When dialogs become too long for the user’s viewport or device, they scroll.</Typography>\n                    <ul>\n                        <li><code>scroll=paper</code> the content of the dialog scrolls within the paper element.</li>\n                        <li><code>scroll=body</code> the content of the dialog scrolls within the body element.</li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\">Try the demo below to see what we mean:</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/dialogs/ScrollDialog.js')}\n                    /></Typography>\n\n                </div>\n            }\n        />\n\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(Dialogs);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _ListItemAvatar.default;\n  }\n});\n\nvar _ListItemAvatar = _interopRequireDefault(require(\"./ListItemAvatar\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _withMobileDialog.default;\n  }\n});\n\nvar _withMobileDialog = _interopRequireDefault(require(\"./withMobileDialog\"));"],"sourceRoot":""}