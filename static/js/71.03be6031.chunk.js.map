{"version":3,"sources":["main/content/components/fuse-authorization/FuseAuthorizationDoc.js"],"names":["FuseAuthorizationDoc","classes","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_fuse__WEBPACK_IMPORTED_MODULE_7__","root","layoutRoot","header","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","variant","content","component","Component","withStyles","theme","withTheme"],"mappings":"qLASMA,mLAGF,IACWC,EAAWC,KAAKC,MAAhBF,QAEP,OACIG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIN,QAAS,CACLO,KAAMP,EAAQQ,YAElBC,OACIN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iDACXP,EAAAC,EAAAC,cAACM,EAAA,GAAD,CAAYC,QAAQ,MAApB,sBAGRC,QACIV,EAAAC,EAAAC,cAAA,OAAKK,UAAU,0BAEXP,EAAAC,EAAAC,cAACM,EAAA,GAAD,CAAYD,UAAU,QAAQI,UAAU,KACpCX,EAAAC,EAAAC,cAAA,QAAMK,UAAU,iBAAhB,qBADJ,0IAKAP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeQ,UAAU,MAAMJ,UAAU,gBAAzC,mnDAmCAP,EAAAC,EAAAC,cAACM,EAAA,GAAD,CAAYD,UAAU,qBAAqBI,UAAU,MAArD,iBAEAX,EAAAC,EAAAC,cAACM,EAAA,GAAD,CAAYD,UAAU,QAAQI,UAAU,KAAxC,6DAIAX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeQ,UAAU,MAAMJ,UAAU,eAAzC,oxBAmBAP,EAAAC,EAAAC,cAACM,EAAA,GAAD,CAAYD,UAAU,cAAcI,UAAU,KAA9C,+EACgFX,EAAAC,EAAAC,cAAA,QAAMK,UAAU,iBAAhB,wCADhF,KAIAP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeQ,UAAU,MAAMJ,UAAU,eAAzC,+fAaAP,EAAAC,EAAAC,cAACM,EAAA,GAAD,CAAYD,UAAU,qBAAqBI,UAAU,MAArD,+BAEAX,EAAAC,EAAAC,cAACM,EAAA,GAAD,CAAYD,UAAU,cAAcI,UAAU,KAA9C,sDAEIX,EAAAC,EAAAC,cAAA,WAFJ,mFAGIF,EAAAC,EAAAC,cAAA,WAHJ,uCAG6CF,EAAAC,EAAAC,cAAA,sBAH7C,oBAMAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeQ,UAAU,MAAMJ,UAAU,eAAzC,kwGA7GWK,aAwKpBC,+BA5KA,SAAAC,GAAK,MAAK,CACrBT,WAAY,KA2KkB,CAACU,WAAW,GAA/BF,CAAsCjB","file":"static/js/71.03be6031.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport {FuseHighlight, FusePageSimple} from '@fuse';\nimport {Typography} from '@material-ui/core';\n\nconst styles = theme => ({\n    layoutRoot: {}\n});\n\nclass FuseAuthorizationDoc extends Component {\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <FusePageSimple\n                classes={{\n                    root: classes.layoutRoot\n                }}\n                header={\n                    <div className=\"flex flex-1 items-center justify-between p-24\">\n                        <Typography variant=\"h6\">FuseAuthorization</Typography>\n                    </div>\n                }\n                content={\n                    <div className=\"p-24 max-w-2xl mx-auto\">\n\n                        <Typography className=\"mb-16\" component=\"p\">\n                            <code className=\"language-bash\">FuseAuthorization</code> is authorization component of the Fuse React. It allows to block routes based on user roles. It\n                            should wraps the FuseTheme component.\n                        </Typography>\n\n                        <FuseHighlight component=\"pre\" className=\"language-jsx\">\n                            {\n                                `\n                               <FuseAuthorization routes={routes}>\n                                    <FuseTheme>\n                                        <FuseLayout\n                                            routes={routes}\n                                            toolbar={\n                                                <MainToolbar/>\n                                            }\n                                            navbarHeader={\n                                                <MainNavbarHeader/>\n                                            }\n                                            navbarContent={\n                                                <MainNavbarContent/>\n                                            }\n                                            footer={\n                                                <MainFooter/>\n                                            }\n                                            rightSidePanel={\n                                                <React.Fragment>\n                                                    <ChatPanel/>\n                                                    <QuickPanel/>\n                                                </React.Fragment>\n                                            }\n                                            contentWrapper={\n                                                <SettingsPanel/>\n                                            }\n                                        />\n                                    </FuseTheme>\n                                </FuseAuthorization>\n                                `\n                            }\n                        </FuseHighlight>\n\n                        <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Configuration</Typography>\n\n                        <Typography className=\"mb-16\" component=\"p\">\n                            You can define authorization roles in route config files.\n                        </Typography>\n\n                        <FuseHighlight component=\"pre\" className=\"language-js\">\n                            {`\n                                export const AdminRoleExampleConfig = {\n                                    settings: {\n                                        layout: {\n                                            config: {}\n                                        }\n                                    },\n                                    auth    : authRoles.admin,//['admin']\n                                    routes  : [\n                                        {\n                                            path     : '/auth/admin-role-example',\n                                            component: AdminRoleExample\n                                        }\n                                    ]\n                                };\n                            `}\n                        </FuseHighlight>\n\n                        <Typography className=\"mb-16 mt-32\" component=\"p\">\n                            You can also hide navigation item/group/collapse by adding auth property in <code className=\"language-bash\">fuse-configs/fuseNavigationConfig.js</code>.\n                        </Typography>\n\n                        <FuseHighlight component=\"pre\" className=\"language-js\">\n                            {`\n                                  {\n                                    'id'   : 'only-admin-navigation-item',\n                                    'title': 'Nav item only for Admin',\n                                    'type' : 'item',\n                                    'auth' : authRoles.admin,\n                                    'url'  : '/auth/admin-role-example',\n                                    'icon' : 'verified_user'\n                                  },\n                            `}\n                        </FuseHighlight>\n\n                        <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">On fuseRoutesConfig.js file</Typography>\n\n                        <Typography className=\"mb-16 mt-32\" component=\"p\">\n                            If you don't want to set auth on every page config;\n                            <br/>You can group the configs and define authorization the fuseRoutesConfig.js file,\n                            <br/>With this configuration below makes <b>whole app</b> auth protected:\n                        </Typography>\n\n                        <FuseHighlight component=\"pre\" className=\"language-js\">\n                            {`\n                                    import React from 'react';\n                                    import {Redirect} from 'react-router-dom';\n                                    import {FuseUtils} from '@fuse/index';\n                                    import {appsConfigs} from 'main/content/apps/appsConfigs';\n                                    import {pagesConfigs} from 'main/content/pages/pagesConfigs';\n                                    import {authRoleExamplesConfigs} from 'main/content/auth/authRoleExamplesConfigs';\n                                    import {UserInterfaceConfig} from 'main/content/user-interface/UserInterfaceConfig';\n                                    import {ComponentsConfig} from 'main/content/components/ComponentsConfig';\n                                    import {ComponentsThirdPartyConfig} from 'main/content/components-third-party/ComponentsThirdPartyConfig';\n                                    import {GettingStartedConfig} from 'main/content/getting-started/GettingStartedConfig';\n                                    import {LoginConfig} from 'main/content/login/LoginConfig';\n                                    import {RegisterConfig} from 'main/content/register/RegisterConfig';\n                                    import {CallbackConfig} from 'main/content/callback/CallbackConfig';\n                                    import _ from '@lodash';\n                                    import {authRoles} from 'auth';\n\n                                    function setAdminAuth(configs)\n                                    {\n                                        return configs.map(config => _.merge({}, config, {auth: authRoles.admin}))\n                                    }\n\n                                    const routeConfigs = [\n                                        ...setAdminAuth([\n                                            ...appsConfigs,\n                                            ...pagesConfigs,\n                                            ...authRoleExamplesConfigs,\n                                            ComponentsConfig,\n                                            ComponentsThirdPartyConfig,\n                                            UserInterfaceConfig,\n                                            GettingStartedConfig\n                                        ]),\n                                        LoginConfig,\n                                        RegisterConfig,\n                                        CallbackConfig\n                                    ];\n\n                                    export const routes = [\n                                        ...FuseUtils.generateRoutesFromConfigs(routeConfigs),\n                                        {\n                                            path     : '/',\n                                            component: () => <Redirect to=\"/apps/dashboards/analytics\"/>\n                                        },\n                                        {\n                                            exact    : true,\n                                            component: () => <Redirect to=\"/pages/errors/error-404\"/>\n                                        }\n                                    ];\n                            `}\n                        </FuseHighlight>\n\n                    </div>\n                }\n            />\n        );\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(FuseAuthorizationDoc);\n"],"sourceRoot":""}