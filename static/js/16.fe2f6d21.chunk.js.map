{"version":3,"sources":["main/content/apps/scrumboard/store/actions/reorder.js","main/content/apps/scrumboard/model/ListModel.js","main/content/apps/scrumboard/model/CardModel.js","main/content/apps/scrumboard/store/actions/board.actions.js","main/content/apps/scrumboard/model/BoardModel.js","main/content/apps/scrumboard/store/actions/boards.actions.js","main/content/apps/scrumboard/store/actions/card.actions.js","main/content/apps/scrumboard/store/actions/index.js","main/content/apps/scrumboard/store/reducers/boards.reducer.js","main/content/apps/scrumboard/store/reducers/board.reducer.js","main/content/apps/scrumboard/store/reducers/card.reducer.js","main/content/apps/scrumboard/store/reducers/index.js","main/content/apps/scrumboard/board/BoardTitle.js","main/content/apps/scrumboard/board/BoardCard.js","main/content/apps/scrumboard/board/BoardAddCard.js","main/content/apps/scrumboard/board/BoardListHeader.js","main/content/apps/scrumboard/board/BoardList.js","main/content/apps/scrumboard/board/BoardAddList.js","main/content/apps/scrumboard/model/LabelModel.js","main/content/apps/scrumboard/board/dialogs/card/attachment/CardAttachment.js","main/content/apps/scrumboard/board/dialogs/card/toolbar/ToolbarMenu.js","main/content/apps/scrumboard/board/dialogs/card/toolbar/DueMenu.js","main/content/apps/scrumboard/board/dialogs/card/toolbar/LabelsMenu.js","main/content/apps/scrumboard/board/dialogs/card/toolbar/MembersMenu.js","main/content/apps/scrumboard/model/ChecklistModel.js","main/content/apps/scrumboard/board/dialogs/card/toolbar/CheckListMenu.js","main/content/apps/scrumboard/board/dialogs/card/toolbar/OptionsMenu.js","main/content/apps/scrumboard/board/dialogs/card/checklist/CardChecklistItem.js","main/content/apps/scrumboard/model/ChecklistItemModel.js","main/content/apps/scrumboard/board/dialogs/card/checklist/CardAddChecklistItem.js","main/content/apps/scrumboard/board/dialogs/card/checklist/CardChecklist.js","main/content/apps/scrumboard/board/dialogs/card/activity/CardActivity.js","main/content/apps/scrumboard/model/CommentModel.js","main/content/apps/scrumboard/board/dialogs/card/comment/CardComment.js","main/content/apps/scrumboard/board/dialogs/card/BoardCardDialog.js","main/content/apps/scrumboard/board/sidebars/settings/BoardSettingsSidebar.js","main/content/apps/scrumboard/board/Board.js"],"names":["reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","Object","slicedToArray","actions_reorder","reorderQuoteMap","lists","source","destination","current","_","find","id","droppableId","next","target","idCards","index","reordered","map","ListModel","data","classCallCheck","this","FuseUtils","generateGUID","name","CardModel","card","description","idAttachmentCover","idMembers","idLabels","attachments","subscribed","checklists","checkItems","checkItemsChecked","comments","activities","due","GET_BOARD","DELETE_BOARD","COPY_BOARD","RENAME_BOARD","CHANGE_BOARD_SETTINGS","RESET_BOARD","ORDER_LIST","ORDER_CARD","ADD_CARD","ADD_LIST","ADD_LABEL","RENAME_LIST","REMOVE_LIST","getBoard","boardId","request","axios","get","dispatch","then","response","type","payload","error","showMessage","message","autoHideDuration","anchorOrigin","vertical","horizontal","history","push","pathname","resetBoard","reorderList","getState","board","scrumboardApp","ordered","post","reorderCard","newCard","listId","cardTitle","Promise","resolve","reject","newList","listTitle","renameList","removeList","addLabel","label","changeBoardSettings","newSettings","settings","merge","deleteBoard","copyBoard","newBoard","uri","Actions","renameBoard","boardTitle","sampleLabels","class","sampleMembers","avatar","BoardModel","color","cardCoverImages","cards","members","labels","GET_BOARDS","RESET_BOARDS","NEW_BOARD","getBoards","resetBoards","handle","OPEN_CARD_DIALOG","CLOSE_CARD_DIALOG","UPDATE_CARD","CHANGE_CARD","REMOVE_CARD","CHIP_CHANGE_CARD","NEW_CHIP_CARD","MAKE_COVER_CARD","REMOVE_COVER_CARD","REMOVE_ATTACHMENT_CARD","REMOVE_DUE_CARD","TOGGLE_LABEL_CARD","TOGGLE_MEMBER_CARD","ADD_CHECKLIST_CARD","CHECKLIST_CHANGE_CARD","CHECKLIST_REMOVE_CARD","COMMENT_ADD_CARD","openCardDialog","closeCardDialog","updateCard","removeCard","cardId","handleChange","event","chipChange","value","addNewChip","makeCover","attachmentId","removeCover","removeAttachment","removeDue","toggleLabel","labelId","toggleMember","memberId","addCheckList","checkListChange","item","removeCheckList","commentAdd","comment","__webpack_require__","d","__webpack_exports__","boards_actions_newBoard","initialState","boardsReducer","state","arguments","length","undefined","action","toConsumableArray","concat","boardReducer","objectSpread","_card","set","cardReducer","setIn","checked","xor","findIndex","x","scrumboardAppReducers","combineReducers","boards","BoardListHeader","renameForm","renameTitle","_this","props","renameFormToggle","setState","onRenameTitleChange","ev","renameTitleSubmit","preventDefault","canSubmit","_this2","_this$state","react_default","a","createElement","className","index_es","onClickAway","onSubmit","onChange","variant","margin","autoFocus","InputProps","endAdornment","position","disabled","onClick","Component","withRouter","connect","_ref","bindActionCreators","BoardCard","handleCardClick","sum","commentsCount","_this$props","classes","react_beautiful_dnd_esm","draggableId","provided","snapshot","assign","ref","innerRef","draggableProps","dragHandleProps","classNames","elevation","isDragging","src","alt","cardContent","title","key","moment","format","member","cardFooter","withStyles","theme","root","transitionProperty","transitionDuration","transitions","duration","short","transitionTimingFunction","easing","easeInOut","borderWidth","borderStyle","borderColor","palette","divider","height","borderTopWidth","borderTopStyle","borderTopColor","withTheme","formOpen","BoardAddCard","handleOpenForm","handleCloseForm","onCardAdded","required","fullWidth","canBeSubmitted","anchorEl","handleClick","currentTarget","handleClose","handleProps","aria-owns","aria-haspopup","size","open","Boolean","onClose","primary","BoardList","handleCardAdded","contentScrollEl","scrollTop","scrollHeight","square","board_BoardListHeader","listHeader","direction","board_BoardCard","placeholder","board_BoardAddCard","backgroundColor","darken","background","default","borderBottomWidth","borderBottomStyle","borderBottomColor","BoardAddList","LabelModel","CardAttachment","time","url","ToolbarMenu","children","hideBackdrop","transformOrigin","paper","Fragment","DueMenu","handleMenuClick","handleMenuClose","onRemoveDue","onDueChange","dueDate","HTML5_FMT","DATE","toolbar_ToolbarMenu","InputLabelProps","shrink","LabelsMenu","onToggleLabel","includes","MembersMenu","onToggleMember","ChecklistModel","CheckListMenu","console","info","onAddCheckList","handleTitleChange","OptionsMenu","onRemoveCard","CardChecklistItem","prevProps","prevState","isEqual","onListItemChange","onListItemRemove","dense","tabIndex","disableRipple","aria-label","ChecklistItemModel","CardAddChecklistItem","submit","onListItemAdd","CardChecklist","checklist","handleListItemChange","handleListItemRemove","handleListItemAdd","onCheckListChange","onRemoveCheckList","checkItem","checklist_CardChecklistItem","checklist_CardAddChecklistItem","commentBubble","borderRadius","border","user","idMember","CommentModel","CardComment","onCommentAdd","row","auth","BoardCardDialog","dueMenu","debounce","_list","component","toolbar_DueMenu","toolbar_LabelsMenu","toolbar_MembersMenu","toolbar_CheckListMenu","toolbar_OptionsMenu","multiline","rows","_fuse","isMulti","textFieldProps","options","onCreateOption","newLabel","attachment_CardAttachment","checklist_CardChecklist","comment_CardComment","activity_CardActivity","text","formControl","marginBottom","BoardSettingsSidebar","button","Board","settingsDrawerOpen","onDragEnd","toggleSettingsDrawer","match","params","xsDown","to","Link","smUp","BoardTitle","ignoreContainerClipping","board_BoardList","board_BoardAddList","anchor","BackdropProps","container","ModalProps","keepMounted","settings_BoardSettingsSidebar","card_BoardCardDialog","withReducer","reducer"],"mappings":"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","file":"static/js/16.fe2f6d21.chunk.js","sourcesContent":["import _ from '@lodash';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nexport default reorder;\n\nexport const reorderQuoteMap =\n    (\n        lists,\n        source,\n        destination\n    ) => {\n        const current = _.find(lists, {id: source.droppableId});\n        const next = _.find(lists, {id: destination.droppableId});\n        const target = current.idCards[source.index];\n\n        // moving to same list\n        if ( source.droppableId === destination.droppableId )\n        {\n            const reordered = reorder(\n                current.idCards,\n                source.index,\n                destination.index\n            );\n            return lists.map((list) => {\n                if ( list.id === source.droppableId )\n                {\n                    list.idCards = reordered;\n                }\n                return list;\n            });\n        }\n\n        // moving to different list\n\n        // remove from original\n        current.idCards.splice(source.index, 1);\n        // insert into next\n        next.idCards.splice(destination.index, 0, target);\n\n        return lists.map((list) => {\n            if ( list.id === source.droppableId )\n            {\n                return current;\n            }\n            if ( list.id === destination.droppableId )\n            {\n                return next;\n            }\n            return list;\n        });\n    };\n","import {FuseUtils} from '@fuse/index';\n\nclass ListModel {\n    /**\n     * Constructor\n     */\n    constructor(data)\n    {\n        const list = data ? data : {};\n\n        this.id = list.id || FuseUtils.generateGUID();\n        this.name = list.name || '';\n        this.idCards = [];\n    }\n}\n\nexport default ListModel;\n","import {FuseUtils} from '@fuse';\n\nclass CardModel {\n    /**\n     * Constructor\n     */\n    constructor(data)\n    {\n        const card = data ? data : {};\n\n        this.id = card.id || FuseUtils.generateGUID();\n        this.name = card.name || '';\n        this.description = card.description || '';\n        this.idAttachmentCover = card.idAttachmentCover || '';\n        this.idMembers = card.idMembers || [];\n        this.idLabels = card.idLabels || [];\n        this.attachments = card.attachments || [];\n        this.subscribed = card.subscribed || true;\n        this.checklists = card.checklists || [];\n        this.checkItems = card.checkItems || 0;\n        this.checkItemsChecked = card.checkItemsChecked || 0;\n        this.comments = card.comments || [];\n        this.activities = card.activities || [];\n        this.due = card.due || '';\n    }\n}\n\nexport default CardModel;\n","import axios from 'axios/index';\nimport reorder, {reorderQuoteMap} from './reorder';\nimport {showMessage} from 'store/actions/fuse';\nimport ListModel from '../../model/ListModel';\nimport CardModel from '../../model/CardModel';\nimport history from 'history.js';\nimport _ from '@lodash';\nimport * as Actions from './index';\nimport {FuseUtils} from '@fuse';\n\nexport const GET_BOARD = '[SCRUMBOARD APP] GET BOARD';\nexport const DELETE_BOARD = '[SCRUMBOARD APP] DELETE BOARD';\nexport const COPY_BOARD = '[SCRUMBOARD APP] COPY BOARD';\nexport const RENAME_BOARD = '[SCRUMBOARD APP] RENAME BOARD';\nexport const CHANGE_BOARD_SETTINGS = '[SCRUMBOARD APP] CHANGE BOARD SETTINGS';\nexport const RESET_BOARD = '[SCRUMBOARD APP] RESET BOARD';\nexport const ORDER_LIST = '[SCRUMBOARD APP] ORDER LIST';\nexport const ORDER_CARD = '[SCRUMBOARD APP] ORDER CARD';\nexport const ADD_CARD = '[SCRUMBOARD APP] ADD CARD';\nexport const ADD_LIST = '[SCRUMBOARD APP] ADD LIST';\nexport const ADD_LABEL = '[SCRUMBOARD APP] ADD LABEL';\nexport const RENAME_LIST = '[SCRUMBOARD APP] RENAME LIST';\nexport const REMOVE_LIST = '[SCRUMBOARD APP] REMOVE LIST';\n\nexport function getBoard(boardId)\n{\n    const request = axios.get('/api/scrumboard-app/board', {boardId});\n\n    return (dispatch) =>\n        request.then(\n            (response) =>\n                dispatch({\n                    type   : GET_BOARD,\n                    payload: response.data\n                }),\n            (error) => {\n                dispatch(showMessage({\n                    message         : error.response.data,\n                    autoHideDuration: 2000,\n                    anchorOrigin    : {\n                        vertical  : 'top',\n                        horizontal: 'right'\n                    }\n                }));\n                history.push({\n                    pathname: '/apps/scrumboard/boards'\n                });\n            });\n}\n\nexport function resetBoard()\n{\n    return {\n        type: RESET_BOARD\n    };\n}\n\nexport function reorderList(result)\n{\n    return (dispatch, getState) => {\n\n        const {board} = getState().scrumboardApp;\n        const {lists} = board;\n\n        const ordered = reorder(\n            lists,\n            result.source.index,\n            result.destination.index\n        );\n\n        const request = axios.post('/api/scrumboard-app/list/order',\n            {\n                boardId: board.id,\n                lists  : ordered\n            }\n        );\n\n        request.then((response) => {\n            dispatch(showMessage({\n                message         : 'List Order Saved',\n                autoHideDuration: 2000,\n                anchorOrigin    : {\n                    vertical  : 'top',\n                    horizontal: 'right'\n                }\n            }));\n        });\n\n        return dispatch({\n            type   : ORDER_LIST,\n            payload: ordered\n        });\n    }\n}\n\nexport function reorderCard(result)\n{\n    return (dispatch, getState) => {\n\n        const {board} = getState().scrumboardApp;\n        const {lists} = board;\n\n        const ordered = reorderQuoteMap(\n            lists,\n            result.source,\n            result.destination\n        );\n\n        const request = axios.post('/api/scrumboard-app/card/order',\n            {\n                boardId: board.id,\n                lists  : ordered\n            }\n        );\n\n        request.then((response) => {\n            dispatch(showMessage({\n                message         : 'Card Order Saved',\n                autoHideDuration: 2000,\n                anchorOrigin    : {\n                    vertical  : 'top',\n                    horizontal: 'right'\n                }\n            }));\n        });\n\n        return dispatch({\n            type   : ORDER_CARD,\n            payload: ordered\n        });\n    }\n}\n\nexport function newCard(boardId, listId, cardTitle)\n{\n    const data = new CardModel({name: cardTitle});\n\n    const request = axios.post('/api/scrumboard-app/card/new',\n        {\n            boardId,\n            listId,\n            data\n        }\n    );\n    return (dispatch) =>\n        new Promise((resolve, reject) => {\n            request.then((response) => {\n                resolve(response.data);\n                return dispatch({\n                    type   : ADD_CARD,\n                    payload: response.data\n                });\n            });\n        });\n}\n\n\nexport function newList(boardId, listTitle)\n{\n    const data = new ListModel({name: listTitle});\n\n    const request = axios.post('/api/scrumboard-app/list/new',\n        {\n            boardId,\n            data\n        }\n    );\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : ADD_LIST,\n                payload: response.data\n            })\n        );\n}\n\nexport function renameList(boardId, listId, listTitle)\n{\n    const request = axios.post('/api/scrumboard-app/list/rename',\n        {\n            boardId,\n            listId,\n            listTitle\n        }\n    );\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type: RENAME_LIST,\n                listId,\n                listTitle\n            })\n        );\n}\n\nexport function removeList(boardId, listId)\n{\n    const request = axios.post('/api/scrumboard-app/list/remove',\n        {\n            boardId,\n            listId\n        }\n    );\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type: REMOVE_LIST,\n                listId\n            })\n        );\n}\n\nexport function addLabel(label)\n{\n    return (dispatch) => {\n        return dispatch({\n            type   : ADD_LABEL,\n            payload: label\n        })\n    }\n}\n\nexport function changeBoardSettings(newSettings)\n{\n    return (dispatch, getState) => {\n        const {board} = getState().scrumboardApp;\n        const settings = _.merge(board.settings, newSettings);\n        const request = axios.post('/api/scrumboard-app/board/settings/update',\n            {\n                boardId: board.id,\n                settings\n            }\n        );\n\n        return request.then((response) =>\n            dispatch({\n                type   : CHANGE_BOARD_SETTINGS,\n                payload: response.data\n            })\n        );\n    }\n}\n\nexport function deleteBoard(boardId)\n{\n    const request = axios.post('/api/scrumboard-app/board/delete',\n        {\n            boardId\n        }\n    );\n\n    return (dispatch) =>\n        request.then((response) => {\n\n            history.push({\n                pathname: '/apps/scrumboard/boards'\n            });\n\n            return dispatch({\n                type: DELETE_BOARD\n            });\n        })\n}\n\nexport function copyBoard(board)\n{\n    const newBoard = _.merge(board, {\n        id  : FuseUtils.generateGUID(),\n        name: board.name + ' (Copied)',\n        uri : board.uri + '-copied'\n    });\n    return (dispatch) => {\n        dispatch(Actions.newBoard(newBoard));\n        return {type: COPY_BOARD};\n    }\n}\n\nexport function renameBoard(boardId, boardTitle)\n{\n    const request = axios.post('/api/scrumboard-app/board/rename',\n        {\n            boardId,\n            boardTitle\n        }\n    );\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type: RENAME_BOARD,\n                boardTitle\n            }));\n}\n","import {FuseUtils} from '@fuse';\n\nconst sampleLabels = [\n    {\n        'id'   : '26022e4129ad3a5sc28b36cd',\n        'name' : 'High Priority',\n        'class': 'bg-red text-white'\n    },\n    {\n        'id'   : '56027e4119ad3a5dc28b36cd',\n        'name' : 'Design',\n        'class': 'bg-orange text-white'\n    },\n    {\n        'id'   : '5640635e19ad3a5dc21416b2',\n        'name' : 'App',\n        'class': 'bg-blue text-white'\n    },\n    {\n        'id'   : '6540635g19ad3s5dc31412b2',\n        'name' : 'Feature',\n        'class': 'bg-green text-white'\n    }\n];\n\nconst sampleMembers = [\n    {\n        'id'    : '56027c1930450d8bf7b10758',\n        'name'  : 'Alice Freeman',\n        'avatar': 'assets/images/avatars/alice.jpg'\n    },\n    {\n        'id'    : '26027s1930450d8bf7b10828',\n        'name'  : 'Danielle Obrien',\n        'avatar': 'assets/images/avatars/danielle.jpg'\n    },\n    {\n        'id'    : '76027g1930450d8bf7b10958',\n        'name'  : 'James Lewis',\n        'avatar': 'assets/images/avatars/james.jpg'\n    },\n    {\n        'id'    : '36027j1930450d8bf7b10158',\n        'name'  : 'John Doe',\n        'avatar': 'assets/images/avatars/Velazquez.jpg'\n    }\n];\n\nclass BoardModel {\n    /**\n     * Constructor\n     */\n    constructor(data)\n    {\n        const board = data ? data : {};\n\n        this.name = board.name || 'Untitled Board';\n        this.uri = board.uri || 'untitled-board';\n        this.id = board.id || FuseUtils.generateGUID();\n        this.settings = board.settings || {\n            color          : '',\n            subscribed     : true,\n            cardCoverImages: true\n        };\n        this.lists = [];\n        this.cards = [];\n        this.members = board.members || sampleMembers;\n        this.labels = board.labels || sampleLabels;\n    }\n}\n\nexport default BoardModel;\n","import axios from 'axios/index';\nimport history from 'history.js';\nimport BoardModel from 'main/content/apps/scrumboard/model/BoardModel';\n\nexport const GET_BOARDS = '[SCRUMBOARD APP] GET BOARDS';\nexport const RESET_BOARDS = '[SCRUMBOARD APP] RESET BOARDS';\nexport const NEW_BOARD = '[SCRUMBOARD APP] NEW BOARD';\n\nexport function getBoards()\n{\n    const request = axios.get('/api/scrumboard-app/boards');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_BOARDS,\n                payload: response.data\n            })\n        );\n}\n\nexport function resetBoards()\n{\n    return {\n        type: RESET_BOARDS\n    }\n}\n\nexport function newBoard(board)\n{\n    const request = axios.post('/api/scrumboard-app/board/new', {\n        board: board || new BoardModel()\n    });\n\n    return (dispatch) =>\n        request.then((response) => {\n                const board = response.data;\n                history.push({\n                    pathname: '/apps/scrumboard/boards/' + board.id + '/' + board.handle\n                });\n                return dispatch({\n                    type: NEW_BOARD,\n                    board\n                })\n            }\n        );\n}\n","import axios from 'axios/index';\nimport {showMessage} from 'store/actions/fuse';\n\nexport const OPEN_CARD_DIALOG = '[SCRUMBOARD APP] OPEN CARD DIALOG';\nexport const CLOSE_CARD_DIALOG = '[SCRUMBOARD APP] CLOSE CARD DIALOG';\nexport const UPDATE_CARD = '[SCRUMBOARD APP] UPDATE CARD';\nexport const CHANGE_CARD = '[SCRUMBOARD APP] CHANGE CARD';\nexport const REMOVE_CARD = '[SCRUMBOARD APP] REMOVE CARD';\nexport const CHIP_CHANGE_CARD = '[SCRUMBOARD APP] CHIP CHANGED CARD';\nexport const NEW_CHIP_CARD = '[SCRUMBOARD APP] NEW CHIP CARD';\nexport const MAKE_COVER_CARD = '[SCRUMBOARD APP] MAKE COVER CARD';\nexport const REMOVE_COVER_CARD = '[SCRUMBOARD APP] REMOVE COVER CARD';\nexport const REMOVE_ATTACHMENT_CARD = '[SCRUMBOARD APP] REMOVE ATTACHMENT CARD';\nexport const REMOVE_DUE_CARD = '[SCRUMBOARD APP] REMOVE DUE CARD';\nexport const TOGGLE_LABEL_CARD = '[SCRUMBOARD APP] TOGGLE LABEL CARD';\nexport const TOGGLE_MEMBER_CARD = '[SCRUMBOARD APP] TOGGLE MEMBER CARD';\nexport const ADD_CHECKLIST_CARD = '[SCRUMBOARD APP] ADD CHECKLIST CARD';\nexport const CHECKLIST_CHANGE_CARD = '[SCRUMBOARD APP] CHECKLIST CHANGE CARD';\nexport const CHECKLIST_REMOVE_CARD = '[SCRUMBOARD APP] CHECKLIST REMOVE CARD';\nexport const COMMENT_ADD_CARD = '[SCRUMBOARD APP] COMMENT ADD CARD';\n\nexport function openCardDialog(data)\n{\n    return {\n        type   : OPEN_CARD_DIALOG,\n        payload: data\n    }\n}\n\nexport function closeCardDialog()\n{\n    return {\n        type: CLOSE_CARD_DIALOG\n    }\n}\n\nexport function updateCard(boardId, card)\n{\n    return (dispatch) => {\n        const request = axios.post('/api/scrumboard-app/card/update', {\n            boardId,\n            card\n        });\n\n        return request.then((response) => {\n            dispatch(showMessage({\n                message         : 'Card Saved',\n                autoHideDuration: 2000,\n                anchorOrigin    : {\n                    vertical  : 'top',\n                    horizontal: 'right'\n                }\n            }));\n\n            return dispatch({\n                type   : UPDATE_CARD,\n                payload: card\n            })\n        });\n    }\n}\n\nexport function removeCard(boardId, cardId)\n{\n    return (dispatch) => {\n        const request = axios.post('/api/scrumboard-app/card/remove', {\n            boardId,\n            cardId\n        });\n\n        return request.then((response) =>\n            dispatch({\n                type: REMOVE_CARD,\n                boardId,\n                cardId\n            })\n        );\n    };\n}\n\nexport function handleChange(event)\n{\n    return {\n        type  : CHANGE_CARD,\n        target: event.target\n    };\n}\n\nexport function chipChange(name, value)\n{\n    return {\n        type: CHIP_CHANGE_CARD,\n        name,\n        value\n    };\n}\n\nexport function addNewChip(name, value)\n{\n    return {\n        type: NEW_CHIP_CARD,\n        name,\n        value\n    };\n}\n\nexport function makeCover(attachmentId)\n{\n    return {\n        type: MAKE_COVER_CARD,\n        attachmentId\n    };\n}\n\nexport function removeCover()\n{\n    return {\n        type: REMOVE_COVER_CARD\n    };\n}\n\nexport function removeAttachment(attachmentId)\n{\n    return {\n        type: REMOVE_ATTACHMENT_CARD,\n        attachmentId\n    };\n}\n\nexport function removeDue()\n{\n    return {\n        type: REMOVE_DUE_CARD\n    };\n}\n\nexport function toggleLabel(labelId)\n{\n    return {\n        type: TOGGLE_LABEL_CARD,\n        labelId\n    };\n}\n\nexport function toggleMember(memberId)\n{\n    return {\n        type: TOGGLE_MEMBER_CARD,\n        memberId\n    };\n}\n\nexport function addCheckList(newList)\n{\n    return {\n        type: ADD_CHECKLIST_CARD,\n        newList\n    };\n}\n\nexport function checkListChange(item)\n{\n    return {\n        type: CHECKLIST_CHANGE_CARD,\n        item\n    };\n}\n\nexport function removeCheckList(id)\n{\n    return {\n        type: CHECKLIST_REMOVE_CARD,\n        id\n    };\n}\n\n\nexport function commentAdd(comment)\n{\n    return {\n        type: COMMENT_ADD_CARD,\n        comment\n    };\n}\n","export * from './board.actions';\nexport * from './boards.actions';\nexport * from './card.actions';\n","import * as Actions from '../actions';\n\nconst initialState = [];\n\nconst boardsReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_BOARDS:\n        {\n\n            return [\n                ...action.payload\n            ];\n        }\n        case Actions.NEW_BOARD:\n        {\n            return [\n                ...state,\n                action.board\n            ];\n        }\n        case Actions.RESET_BOARDS:\n        {\n            return [];\n        }\n        default:\n            return state;\n    }\n};\n\nexport default boardsReducer;\n","import * as Actions from '../actions';\nimport _ from '@lodash';\n\nconst initialState = null;\n\nconst boardReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_BOARD:\n        {\n            return {\n                ...action.payload\n            };\n        }\n        case Actions.RESET_BOARD:\n        {\n            return initialState;\n        }\n        case Actions.ORDER_LIST:\n        {\n            return {\n                ...state,\n                lists: action.payload\n            };\n        }\n        case Actions.ORDER_CARD:\n        {\n            return {\n                ...state,\n                lists: action.payload\n            };\n        }\n        case Actions.ADD_LIST:\n        {\n            return {\n                ...state,\n                lists: action.payload\n            };\n        }\n        case Actions.ADD_CARD:\n        {\n            return {\n                ...action.payload\n            };\n        }\n        case Actions.ADD_LABEL:\n        {\n            return {\n                ...state,\n                labels: [\n                    ...state.labels,\n                    action.payload\n                ]\n            };\n        }\n        case Actions.UPDATE_CARD:\n        {\n            return {\n                ...state,\n                cards: state.cards.map((_card) => {\n                    if ( _card.id === action.payload.id )\n                    {\n                        return action.payload;\n                    }\n                    return _card;\n                })\n            };\n        }\n        case Actions.REMOVE_CARD:\n        {\n            return {\n                ...state,\n                cards: _.reject(state.cards, {id: action.cardId}),\n                lists: state.lists.map(list => {\n                    _.set(list, 'idCards', _.reject(list.idCards, (id) => id === action.cardId));\n                    return list;\n                })\n            };\n        }\n        case Actions.RENAME_LIST:\n        {\n            return {\n                ...state,\n                lists: state.lists.map(list => {\n                    if ( list.id === action.listId )\n                    {\n                        list.name = action.listTitle\n                    }\n                    return list;\n                })\n            };\n        }\n        case Actions.REMOVE_LIST:\n        {\n            return {\n                ...state,\n                lists: _.reject(state.lists, {id: action.listId})\n            };\n        }\n        case Actions.CHANGE_BOARD_SETTINGS:\n        {\n            return {\n                ...state,\n                settings: action.payload\n            };\n        }\n        case Actions.DELETE_BOARD:\n        {\n            return initialState;\n        }\n        case Actions.RENAME_BOARD:\n        {\n            return {\n                ...state,\n                name: action.boardTitle\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default boardReducer;\n","import * as Actions from '../actions';\nimport _ from '@lodash';\n\nconst initialState = null;\n\nconst cardReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.OPEN_CARD_DIALOG:\n        {\n            return {\n                ...action.payload\n            };\n        }\n        case Actions.REMOVE_CARD:\n        {\n            return null;\n        }\n        case Actions.CLOSE_CARD_DIALOG:\n        {\n            return null;\n        }\n        case Actions.CHANGE_CARD:\n        {\n            return _.setIn(state, action.target.name, action.target.type === 'checkbox' ? action.target.checked : action.target.value);\n        }\n        case Actions.CHIP_CHANGE_CARD:\n        {\n            return _.setIn(state, action.name, action.value.map(item => item.value));\n        }\n        case Actions.NEW_CHIP_CARD:\n        {\n            return _.setIn(state, action.name, [...state[action.name], action.value]);\n        }\n        case Actions.MAKE_COVER_CARD:\n        {\n            return _.setIn(state, 'idAttachmentCover', action.attachmentId);\n        }\n        case Actions.REMOVE_COVER_CARD:\n        {\n            return _.setIn(state, 'idAttachmentCover', '');\n        }\n        case Actions.REMOVE_ATTACHMENT_CARD:\n        {\n            return {\n                ...state,\n                attachments      : _.reject(state.attachments, {id: action.attachmentId}),\n                idAttachmentCover: state.idAttachmentCover === action.attachmentId ? '' : state.idAttachmentCover\n            }\n        }\n        case Actions.REMOVE_DUE_CARD:\n        {\n            return _.setIn(state, 'due', null);\n        }\n        case Actions.TOGGLE_LABEL_CARD:\n        {\n            return _.setIn(state, 'idLabels', _.xor(state.idLabels, [action.labelId]));\n        }\n        case Actions.TOGGLE_MEMBER_CARD:\n        {\n            return _.setIn(state, 'idMembers', _.xor(state.idMembers, [action.memberId]));\n        }\n        case Actions.ADD_CHECKLIST_CARD:\n        {\n            return _.setIn(state, 'checklists', [...state.checklists, action.newList]);\n        }\n        case Actions.CHECKLIST_CHANGE_CARD:\n        {\n            const index = state.checklists.findIndex((x) => x.id === action.item.id);\n            return _.setIn(state, `checklists[${index}]`, action.item);\n        }\n        case Actions.CHECKLIST_REMOVE_CARD:\n        {\n            return _.setIn(state, 'checklists', _.reject(state.checklists, {id: action.id}));\n        }\n        case Actions.COMMENT_ADD_CARD:\n        {\n            return _.setIn(state, 'activities', [action.comment, ...state.activities]);\n        }\n        default:\n            return state;\n    }\n};\n\nexport default cardReducer;\n","import {combineReducers} from 'redux';\nimport boards from './boards.reducer';\nimport board from './board.reducer';\nimport card from './card.reducer';\n\nconst scrumboardAppReducers = combineReducers({\n    boards,\n    board,\n    card\n});\n\nexport default scrumboardAppReducers;\n","import React, {Component} from 'react';\nimport {Paper, ClickAwayListener, Icon, IconButton, InputAdornment, TextField, Typography} from '@material-ui/core';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions';\nimport {withRouter} from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\n\nclass BoardListHeader extends Component {\n    state = {\n        renameForm : false,\n        renameTitle: this.props.board.name\n    };\n    renameFormToggle = (state) => {\n        this.setState({\n            renameForm : state,\n            renameTitle: this.props.board.name\n        })\n    };\n\n    onRenameTitleChange = (ev) => {\n        this.setState({renameTitle: ev.target.value})\n    };\n\n    renameTitleSubmit = (ev) => {\n        ev.preventDefault();\n        if ( !this.canSubmit() )\n        {\n            this.renameFormToggle(false);\n            return;\n        }\n        this.setState({\n            renameForm : false,\n            renameTitle: this.state.renameTitle\n        });\n        this.props.renameBoard(this.props.board.id, this.state.renameTitle);\n    };\n\n    canSubmit = () => {\n        return this.state.renameTitle !== '';\n    };\n\n    render()\n    {\n        const {board} = this.props;\n        const {renameTitle, renameForm} = this.state;\n\n        return (\n            <div className=\"flex items-center min-w-0\">\n                {renameForm ? (\n                    <ClickAwayListener onClickAway={() => this.renameFormToggle(false)}>\n                        <Paper className=\"p-4\">\n                            <form className=\"flex w-full\" onSubmit={this.renameTitleSubmit}>\n                                <TextField\n                                    value={renameTitle}\n                                    onChange={this.onRenameTitleChange}\n                                    variant=\"outlined\"\n                                    margin=\"none\"\n                                    autoFocus\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    type=\"submit\"\n                                                    disabled={!this.canSubmit()}\n                                                >\n                                                    <Icon>check</Icon>\n                                                </IconButton>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n                            </form>\n                        </Paper>\n                    </ClickAwayListener>\n                ) : (\n                    <div className=\"flex items-center justify-center\">\n                        {board.settings.subscribed && (\n                            <Icon className=\"text-16 mr-8\">remove_red_eye</Icon>\n                        )}\n                        <Typography\n                            className=\"text-16 font-600 cursor-pointer\"\n                            onClick={() => this.renameFormToggle(true)}\n                            color=\"inherit\"\n                        >\n                            {board.name}\n                        </Typography>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        renameBoard: Actions.renameBoard\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardListHeader));\n","import React, {Component} from 'react';\nimport {Card, Typography, Avatar, Icon, Tooltip, withStyles} from '@material-ui/core';\nimport {Draggable} from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions';\nimport moment from 'moment';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    root       : {},\n    card       : {\n        transitionProperty      : 'box-shadow',\n        transitionDuration      : theme.transitions.duration.short,\n        transitionTimingFunction: theme.transitions.easing.easeInOut,\n        borderWidth             : 1,\n        borderStyle             : 'solid',\n        borderColor             : theme.palette.divider\n    },\n    cardContent: {},\n    cardFooter : {\n        height        : 48,\n        borderTopWidth: 1,\n        borderTopStyle: 'solid',\n        borderTopColor: theme.palette.divider\n    }\n});\n\nclass BoardCard extends Component {\n\n    handleCardClick = (ev, card) => {\n        ev.preventDefault();\n        this.props.openCardDialog(card)\n    };\n\n    checkItemsChecked = (card) => {\n        return _.sum(card.checklists.map(list => _.sum(list.checkItems.map(x => (x.checked ? 1 : 0)))));\n    };\n\n    checkItems = (card) => {\n        return _.sum(card.checklists.map(x => x.checkItems.length));\n    };\n\n    commentsCount = (card) => {\n        return _.sum(card.activities.map(x => (x.type === 'comment' ? 1 : 0)));\n    };\n\n    render()\n    {\n        const {classes, cardId, index, board} = this.props;\n        const card = _.find(board.cards, {id: cardId});\n        const checkItemsChecked = this.checkItemsChecked(card);\n        const checkItems = this.checkItems(card);\n        const commentsCount = this.commentsCount(card);\n\n        return (\n            <Draggable draggableId={cardId} index={index} type=\"card\">\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                    >\n                        <Card\n                            className={classNames(classes.card, \"w-full mb-16 rounded-4 cursor-pointer\")}\n                            elevation={snapshot.isDragging ? 3 : 0}\n                            onClick={(ev) => this.handleCardClick(ev, card)}\n                        >\n\n                            {board.settings.cardCoverImages && card.idAttachmentCover !== '' && (\n                                <img className=\"block\" src={_.find(card.attachments, {id: card.idAttachmentCover}).src} alt=\"card cover\"/>\n                            )}\n\n                            <div className={classNames(classes.cardContent, \"p-16 pb-0\")}>\n\n                                {card.idLabels.length > 0 && (\n                                    <div className=\"flex flex-wrap mb-8\">\n                                        {card.idLabels.map(id => {\n                                            const label = _.find(board.labels, {id});\n                                            return (\n                                                <Tooltip title={label.name} key={id}>\n                                                    <div className={classNames(label.class, \"w-32  h-6 rounded-6 mr-6 mb-6\")}/>\n                                                </Tooltip>\n                                            );\n                                        })}\n                                    </div>\n                                )}\n\n                                <Typography className=\"font-600 mb-12\">{card.name}</Typography>\n\n                                {(card.due || checkItems > 0) && (\n                                    <div className=\"flex items-center mb-12\">\n                                        {card.due && (\n                                            <div\n                                                className={classNames(\"flex items-center px-8 py-4 mr-8 rounded-sm\", moment() > moment(card.due) ? \"bg-red text-white\" : \"bg-green text-white\")}>\n                                                <Icon className=\"text-16 mr-4\">access_time</Icon>\n                                                <span>{moment(card.due).format(\"MMM Do YY\")}</span>\n                                            </div>\n                                        )}\n\n                                        {checkItems > 0 && (\n                                            <div\n                                                className={classNames(\"flex items-center px-8 py-4 mr-8 rounded-sm\", checkItemsChecked === checkItems ? \"bg-green text-white\" : \"bg-grey-dark text-white\")}\n                                            >\n                                                <Icon className=\"text-16 mr-4\">check_circle</Icon>\n                                                <span>{checkItemsChecked}</span>\n                                                <span>/</span>\n                                                <span>{checkItems}</span>\n                                            </div>\n                                        )}\n\n                                    </div>\n                                )}\n\n                                {card.idMembers.length > 0 && (\n                                    <div className=\"flex flex-wrap mb-12\">\n                                        {card.idMembers.map(id => {\n                                            const member = _.find(board.members, {id});\n                                            return (\n                                                <Tooltip title={member.name} key={id}>\n                                                    <Avatar className=\"mr-8 w-32 h-32\" src={member.avatar}/>\n                                                </Tooltip>\n                                            )\n                                        })}\n                                        <div className=\"\">\n                                        </div>\n                                    </div>\n                                )}\n\n                            </div>\n\n                            <div className={classNames(classes.cardFooter, \"px-16 flex justify-between\")}>\n                                <div className=\"flex items-center\">\n                                    {card.subscribed && (\n                                        <Icon className=\"text-18 mr-12\" color=\"action\">remove_red_eye</Icon>\n                                    )}\n\n                                    {card.description !== '' && (\n                                        <Icon className=\"text-18 mr-12\" color=\"action\">description</Icon>\n                                    )}\n                                </div>\n\n                                <div className=\"flex items-center justify-end\">\n                                    {card.attachments && (\n                                        <span className=\"flex items-center ml-12\">\n                                            <Icon className=\"text-18 mr-8\" color=\"action\">attachment</Icon>\n                                            <Typography color=\"textSecondary\">{card.attachments.length}</Typography>\n                                        </span>\n                                    )}\n                                    {commentsCount > 0 && (\n                                        <span className=\"flex items-center ml-12\">\n                                            <Icon className=\"text-18 mr-8\" color=\"action\">comment</Icon>\n                                            <Typography color=\"textSecondary\">{commentsCount}</Typography>\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                )}\n            </Draggable>\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        openCardDialog: Actions.openCardDialog\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardCard)));\n","import React, {Component} from 'react';\nimport {Button, IconButton, Icon, withStyles, TextField, ClickAwayListener, InputAdornment} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions';\nimport {withRouter} from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\n\nconst styles = theme => ({\n    root: {\n        borderTopWidth: 1,\n        borderTopStyle: 'solid',\n        borderTopColor: theme.palette.divider\n    }\n});\n\nconst initialState = {\n    formOpen : false,\n    cardTitle: \"\"\n};\n\nclass BoardAddCard extends Component {\n    state = initialState;\n\n    handleOpenForm = () => {\n        this.setState({formOpen: true})\n    };\n\n    handleCloseForm = () => {\n        this.setState({...initialState})\n    };\n\n    handleChange = (event) => {\n        this.setState({cardTitle: event.target.value});\n    };\n\n    onSubmit = (ev) => {\n        ev.preventDefault();\n        this.props.newCard(this.props.board.id, this.props.listId, this.state.cardTitle).then(() => {\n            this.props.onCardAdded();\n        });\n        this.handleCloseForm();\n    };\n\n    canBeSubmitted()\n    {\n        const {cardTitle} = this.state;\n        return (\n            cardTitle.length > 0\n        );\n    }\n\n    render()\n    {\n        const {classes} = this.props;\n        const {formOpen} = this.state;\n\n        return (\n            <div className={classNames(classes.root, \"w-full\")}>\n                {formOpen ? (\n                    <ClickAwayListener onClickAway={this.handleCloseForm}>\n                        <form className=\"p-16\" onSubmit={this.onSubmit}>\n\n                            <TextField\n                                className=\"mb-16\"\n                                required\n                                fullWidth\n                                variant=\"outlined\"\n                                label=\"Card title\"\n                                autoFocus\n                                name=\"title\"\n                                value={this.state.cardTitle}\n                                onChange={this.handleChange}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={this.handleCloseForm}>\n                                                <Icon className=\"text-18\">close</Icon>\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n\n                            <div className=\"flex justify-between items-center\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    type=\"submit\"\n                                    disabled={!this.canBeSubmitted()}\n                                >\n                                    Add\n                                </Button>\n\n                            </div>\n                        </form>\n                    </ClickAwayListener>\n                ) : (\n                    <Button\n                        onClick={this.handleOpenForm}\n                        classes={{\n                            root : \"normal-case font-600 w-full rounded-none h-48\",\n                            label: \"justify-start\"\n                        }}\n                    >\n                        <Icon className=\"text-20 mr-8\">add</Icon>\n                        Add a card\n                    </Button>\n                )}\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        newCard: Actions.newCard\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardAddCard)));\n","import React, {Component} from 'react';\nimport {ClickAwayListener, Icon, IconButton, InputAdornment, ListItemIcon, ListItemText, Menu, MenuItem, TextField, Typography} from '@material-ui/core';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions';\nimport {withRouter} from 'react-router-dom';\nimport connect from 'react-redux/es/connect/connect';\n\nclass BoardListHeader extends Component {\n    state = {\n        anchorEl   : null,\n        renameForm : false,\n        renameTitle: this.props.list.name\n    };\n\n    handleClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    renameFormToggle = (state) => {\n        this.setState({\n            renameForm : state,\n            renameTitle: this.props.list.name,\n            anchorEl   : null\n        })\n    };\n\n    onRenameTitleChange = (ev) => {\n        this.setState({renameTitle: ev.target.value})\n    };\n\n    renameTitleSubmit = (ev) => {\n        ev.preventDefault();\n        if ( !this.canSubmit() )\n        {\n            this.renameFormToggle(false);\n            return;\n        }\n        this.setState({\n            renameForm : false,\n            renameTitle: this.state.renameTitle,\n            anchorEl   : null\n        });\n        this.props.renameList(this.props.board.id, this.props.list.id, this.state.renameTitle);\n    };\n\n    canSubmit = () => {\n        return this.state.renameTitle !== '';\n    };\n\n    render()\n    {\n        const {board, list, handleProps, removeList} = this.props;\n        const {anchorEl, renameTitle, renameForm} = this.state;\n\n        return (\n            <div {...handleProps}>\n                <div className=\"flex items-center justify-between h-64 pl-16 pr-8\">\n                    <div className=\"flex items-center min-w-0\">\n                        {renameForm ? (\n                            <ClickAwayListener onClickAway={() => this.renameFormToggle(false)}>\n                                <form className=\"flex w-full\" onSubmit={this.renameTitleSubmit}>\n                                    <TextField\n                                        value={renameTitle}\n                                        onChange={this.onRenameTitleChange}\n                                        variant=\"outlined\"\n                                        margin=\"none\"\n                                        autoFocus\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        type=\"submit\"\n                                                        disabled={!this.canSubmit()}\n                                                    >\n                                                        <Icon>check</Icon>\n                                                    </IconButton>\n                                                </InputAdornment>\n                                            )\n                                        }}\n                                    />\n                                </form>\n                            </ClickAwayListener>\n                        ) : (\n                            <Typography\n                                className=\"text-16 font-600 cursor-pointer\"\n                                onClick={() => this.renameFormToggle(true)}\n                            >\n                                {list.name}\n                            </Typography>\n                        )}\n\n                    </div>\n                    <div className=\"\">\n                        <IconButton\n                            aria-owns={anchorEl ? 'actions-menu' : null}\n                            aria-haspopup=\"true\"\n                            onClick={this.handleClick}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            <Icon className=\"text-20\">more_vert</Icon>\n                        </IconButton>\n                        <Menu\n                            id=\"actions-menu\"\n                            anchorEl={anchorEl}\n                            open={Boolean(anchorEl)}\n                            onClose={this.handleClose}\n                        >\n                            <MenuItem onClick={() => {\n                                removeList(board.id, list.id);\n                            }}>\n                                <ListItemIcon>\n                                    <Icon>delete</Icon>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Remove List\"/>\n                            </MenuItem>\n                            <MenuItem onClick={() => this.renameFormToggle(true)}>\n                                <ListItemIcon>\n                                    <Icon>edit</Icon>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Rename List\"/>\n                            </MenuItem>\n                        </Menu>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        renameList: Actions.renameList,\n        removeList: Actions.removeList\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardListHeader));\n","import React, {Component} from 'react';\nimport {Draggable, Droppable} from 'react-beautiful-dnd';\nimport {Card, CardContent, CardActions, withStyles} from '@material-ui/core';\nimport BoardCard from './BoardCard';\nimport classNames from 'classnames';\nimport {darken} from '@material-ui/core/styles/colorManipulator';\nimport BoardAddCard from './BoardAddCard';\nimport BoardListHeader from './BoardListHeader';\n\nconst styles = theme => ({\n    root      : {},\n    list      : {\n        backgroundColor         : darken(theme.palette.background.default, theme.palette.type === 'light' ? 0.02 : .4),\n        transitionProperty      : 'box-shadow',\n        transitionDuration      : theme.transitions.duration.short,\n        transitionTimingFunction: theme.transitions.easing.easeInOut\n    },\n    listHeader: {\n        borderBottomWidth: 1,\n        borderBottomStyle: 'solid',\n        borderBottomColor: theme.palette.divider\n    }\n});\n\nclass BoardList extends Component {\n    handleCardAdded = () => {\n        this.contentScrollEl.scrollTop = this.contentScrollEl.scrollHeight;\n    };\n\n    render()\n    {\n        const {classes, list, index} = this.props;\n        return (\n            <Draggable draggableId={list.id} index={index} type=\"list\">\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                    >\n                        <Card\n                            className={classNames(classes.list, \"w-256 sm:w-320 mr-16 sm:mr-24 max-h-full flex flex-col\")}\n                            square={true}\n                            elevation={snapshot.isDragging ? 3 : 1}\n                        >\n\n                            <BoardListHeader\n                                list={list}\n                                className={classNames(classes.listHeader)}\n                                handleProps={provided.dragHandleProps}\n                            />\n\n                            <CardContent\n                                ref={ref => this.contentScrollEl = ref}\n                                className=\"flex flex-col flex-1 flex-auto h-full min-h-0 w-full p-0 overflow-auto\"\n                            >\n                                <Droppable\n                                    droppableId={list.id}\n                                    type=\"card\"\n                                    direction=\"vertical\"\n                                >\n                                    {(provided) => (\n                                        <div ref={provided.innerRef} className=\"flex flex-col w-full h-full p-16\">\n                                            {list.idCards.map((cardId, index) => (\n                                                <BoardCard\n                                                    key={cardId}\n                                                    cardId={cardId}\n                                                    index={index}\n                                                    list={list}\n                                                />\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                            </CardContent>\n\n                            <CardActions className=\"p-0 flex-no-shrink\">\n                                <BoardAddCard listId={list.id} onCardAdded={this.handleCardAdded}/>\n                            </CardActions>\n                        </Card>\n                    </div>\n                )}\n            </Draggable>\n        );\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(BoardList);\n","import React, {Component} from 'react';\nimport {Button, IconButton, Icon, withStyles, ClickAwayListener, Card, TextField, InputAdornment} from '@material-ui/core';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport connect from 'react-redux/es/connect/connect';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions';\nimport {darken} from '@material-ui/core/styles/colorManipulator';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n    root: {},\n    card: {\n        backgroundColor: darken(theme.palette.background.default, theme.palette.type === 'light' ? 0.02 : .4)\n    }\n});\n\nconst initialState = {\n    formOpen : false,\n    listTitle: \"\"\n};\n\nclass BoardAddList extends Component {\n    state = initialState;\n\n    handleOpenForm = () => {\n        this.setState({formOpen: true})\n    };\n\n    handleCloseForm = () => {\n        this.setState({...initialState})\n    };\n\n    handleChange = (event) => {\n        this.setState({listTitle: event.target.value});\n    };\n\n    onSubmit = (ev) => {\n        ev.preventDefault();\n        this.props.newList(this.props.board.id, this.state.listTitle);\n        this.handleCloseForm();\n    };\n\n    canBeSubmitted()\n    {\n        const {listTitle} = this.state;\n        return (\n            listTitle.length > 0\n        );\n    }\n\n    render()\n    {\n        const {classes} = this.props;\n        const {formOpen} = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Card\n                    className={classNames(classes.card, \"w-320 mr-24\")}\n                    square={true}\n                >\n                    {formOpen ? (\n                        <ClickAwayListener onClickAway={this.handleCloseForm}>\n\n                            <form className=\"p-16\" onSubmit={this.onSubmit}>\n\n                                <TextField\n                                    className=\"mb-16\"\n                                    required\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    label=\"List title\"\n                                    autoFocus\n                                    name=\"title\"\n                                    value={this.state.listTitle}\n                                    onChange={this.handleChange}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={this.handleCloseForm}>\n                                                    <Icon className=\"text-18\">close</Icon>\n                                                </IconButton>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n\n                                <div className=\"flex justify-between items-center\">\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        type=\"submit\"\n                                        disabled={!this.canBeSubmitted()}\n                                    >\n                                        Add\n                                    </Button>\n                                </div>\n                            </form>\n                        </ClickAwayListener>\n                    ) : (\n                        <Button\n                            onClick={this.handleOpenForm}\n                            classes={{\n                                root : \"normal-case font-600 w-full rounded-none h-64\",\n                                label: \"justify-start\"\n                            }}\n                        >\n                            <Icon className=\"text-32 text-red mr-8\">add_circle</Icon>\n                            Add a list\n                        </Button>\n                    )}\n                </Card>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        newList: Actions.newList\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardAddList)));\n","import {FuseUtils} from '@fuse/index';\n\nclass LabelModel {\n    /**\n     * Constructor\n     */\n    constructor(data)\n    {\n        const label = data ? data : {};\n\n        this.id = label.id || FuseUtils.generateGUID();\n        this.name = label.name || '';\n        this.class = label.class || 'bg-blue text-white';\n    }\n}\n\nexport default LabelModel;\n","import React, {Component} from 'react';\nimport {Icon, Typography, Paper, Button, Menu, MenuItem} from '@material-ui/core';\n\nclass CardAttachment extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render()\n    {\n        const {card, item, makeCover, removeCover, removeAttachment} = this.props;\n        const {anchorEl} = this.state;\n\n        switch ( item.type )\n        {\n            case 'image':\n            {\n                return (\n                    <div className=\"flex w-full sm:w-1/2 mb-16\" key={item.id}>\n                        <div className=\"flex items-center justify-center w-128 h-128 mr-16\">\n                            <Paper className=\"rounded-4 overflow-hidden\" elevation={1}>\n                                <img className=\"block max-h-full max-h-full\" src={item.src} alt=\"attachment\"/>\n                            </Paper>\n                        </div>\n                        <div className=\"flex flex-auto flex-col justify-center items-start min-w-0\">\n                            <div className=\"flex items-center w-full\">\n                                <Typography className=\"text-16 font-600 truncate flex-shrink\">{item.name}</Typography>\n                                {card.idAttachmentCover === item.id && (\n                                    <Icon className=\"text-orange-light text-20 ml-4\">star</Icon>\n                                )}\n                            </div>\n                            <Typography className=\"truncate w-full mb-12\" color=\"textSecondary\">{item.time}</Typography>\n                            <Button\n                                aria-owns={anchorEl ? 'actions-menu' : null}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleClick}\n                                variant=\"outlined\"\n                                size=\"small\"\n                            >\n                                Actions\n                                <Icon className=\"text-20\">arrow_drop_down</Icon>\n                            </Button>\n                            <Menu\n                                id=\"actions-menu\"\n                                anchorEl={anchorEl}\n                                open={Boolean(anchorEl)}\n                                onClose={this.handleClose}\n                            >\n                                {card.idAttachmentCover !== item.id ? (\n                                    <MenuItem\n                                        onClick={() => {\n                                            this.handleClose();\n                                            makeCover(item.id);\n                                        }}\n                                    >\n                                        Make Cover\n                                    </MenuItem>\n                                ) : (\n                                    <MenuItem\n                                        onClick={() => {\n                                            this.handleClose();\n                                            removeCover();\n                                        }}\n                                    >\n                                        Remove Cover\n                                    </MenuItem>\n                                )}\n                                <MenuItem\n                                    onClick={() => {\n                                        this.handleClose();\n                                        removeAttachment(item.id);\n                                    }}\n                                >\n                                    Remove Attachment\n                                </MenuItem>\n                            </Menu>\n                        </div>\n                    </div>\n                )\n            }\n            case 'link':\n            {\n                return (\n                    <div className=\"flex w-full sm:w-1/2 mb-16\" key={item.id}>\n                        <Paper className=\"min-w-128 w-128 h-128 mr-16 flex items-center justify-center rounded-4 overflow-hidden\" elevation={1}>\n                            <Typography className=\"font-600\">LINK</Typography>\n                        </Paper>\n                        <div className=\"flex flex-auto flex-col justify-center items-start min-w-0\">\n                            <Typography className=\"text-16 font-600 truncate w-full\">{item.url}</Typography>\n                            <Typography className=\"truncate w-full mb-12\" color=\"textSecondary\">{item.time}</Typography>\n                            <Button\n                                aria-owns={anchorEl ? 'actions-menu' : null}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleClick}\n                                variant=\"outlined\"\n                                size=\"small\"\n                            >\n                                Actions\n                                <Icon className=\"text-20\">arrow_drop_down</Icon>\n                            </Button>\n                            <Menu\n                                id=\"simple-menu\"\n                                anchorEl={anchorEl}\n                                open={Boolean(anchorEl)}\n                                onClose={this.handleClose}\n                            >\n                                <MenuItem\n                                    onClick={() => {\n                                        this.handleClose();\n                                        removeAttachment(item.id);\n                                    }}\n                                >\n                                    Remove Attachment\n                                </MenuItem>\n                            </Menu>\n                        </div>\n                    </div>\n                )\n            }\n            default:\n            {\n                return null;\n            }\n        }\n    }\n}\n\nexport default CardAttachment;\n","import React from 'react';\nimport {Popover, ClickAwayListener} from '@material-ui/core';\n\nconst ToolbarMenu = ({state, onClose, children}) => (\n    <Popover\n        hideBackdrop={true}\n        open={Boolean(state)}\n        anchorEl={state}\n        onClose={onClose}\n        anchorOrigin={{\n            vertical  : 'bottom',\n            horizontal: 'center'\n        }}\n        transformOrigin={{\n            vertical  : 'top',\n            horizontal: 'center'\n        }}\n        className=\"pointer-events-none\"\n        classes={{\n            paper: \"pointer-events-auto py-8\"\n        }}\n    >\n        <ClickAwayListener onClickAway={onClose}>\n            <React.Fragment>\n                {children}\n            </React.Fragment>\n        </ClickAwayListener>\n    </Popover>\n);\n\nexport default ToolbarMenu;\n","import React, {Component} from 'react';\nimport {Icon, IconButton, InputAdornment, MenuItem, TextField} from '@material-ui/core';\nimport ToolbarMenu from 'main/content/apps/scrumboard/board/dialogs/card/toolbar/ToolbarMenu';\nimport moment from 'moment';\n\nclass DueMenu extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render()\n    {\n        const {due, onRemoveDue, onDueChange} = this.props;\n        const dueDate = due ? moment(due).format(moment.HTML5_FMT.DATE) : \"\";\n\n        return (\n            <div>\n                <IconButton color=\"inherit\" onClick={this.handleMenuClick}>\n                    <Icon>today</Icon>\n                </IconButton>\n                <ToolbarMenu state={this.state.anchorEl} onClose={this.handleMenuClose}>\n                    {due ? (\n                        <MenuItem\n                            onClick={(ev) => {\n                                onRemoveDue();\n                                this.handleMenuClose(ev);\n                            }}\n                        >\n                            Remove Due Date\n                        </MenuItem>\n                    ) : (\n                        <div className=\"p-16\">\n                            <TextField\n                                label=\"Due date\"\n                                type=\"date\"\n                                name=\"card.due\"\n                                value={dueDate}\n                                onChange={(ev) => {\n                                    onDueChange(ev);\n                                    this.handleMenuClose(ev)\n                                }}\n                                placeholder=\" Choose a due date\"\n                                className=\"\"\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                variant=\"outlined\"\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <Icon color=\"action\">today</Icon>\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                        </div>\n                    )}\n                </ToolbarMenu>\n            </div>\n        );\n    };\n}\n\nexport default DueMenu;\n","import React, {Component} from 'react';\nimport {Checkbox, Icon, IconButton, ListItemIcon, ListItemText, MenuItem} from '@material-ui/core';\nimport ToolbarMenu from './ToolbarMenu';\n\nclass LabelsMenu extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render()\n    {\n        const {labels, idLabels, onToggleLabel} = this.props;\n\n        return (\n            <div>\n                <IconButton color=\"inherit\" onClick={this.handleMenuClick}>\n                    <Icon>label</Icon>\n                </IconButton>\n                <ToolbarMenu state={this.state.anchorEl} onClose={this.handleMenuClose}>\n                    <div className=\"\">\n                        {labels.map(label => {\n                            return (\n                                <MenuItem\n                                    className=\"px-8\"\n                                    key={label.id}\n                                    onClick={(ev) => {\n                                        onToggleLabel(label.id)\n                                    }}\n                                >\n                                    <Checkbox checked={idLabels.includes(label.id)}/>\n                                    <ListItemText>\n                                        {label.name}\n                                    </ListItemText>\n                                    <ListItemIcon>\n                                        <Icon>label</Icon>\n                                    </ListItemIcon>\n                                </MenuItem>\n                            );\n                        })}\n                    </div>\n                </ToolbarMenu>\n            </div>\n        );\n    };\n}\n\nexport default LabelsMenu;\n","import React, {Component} from 'react';\nimport {Avatar, Checkbox, Icon, IconButton, ListItemText, MenuItem} from '@material-ui/core';\nimport ToolbarMenu from './ToolbarMenu';\n\nclass MembersMenu extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render()\n    {\n        const {members, idMembers, onToggleMember} = this.props;\n\n        return (\n            <div>\n                <IconButton color=\"inherit\" onClick={this.handleMenuClick}>\n                    <Icon>account_circle</Icon>\n                </IconButton>\n                <ToolbarMenu state={this.state.anchorEl} onClose={this.handleMenuClose}>\n                    <div className=\"\">\n                        {members.map(member => {\n                            return (\n                                <MenuItem\n                                    className=\"px-8\"\n                                    key={member.id}\n                                    onClick={(ev) => {\n                                        onToggleMember(member.id)\n                                    }}\n                                >\n                                    <Checkbox checked={idMembers.includes(member.id)}/>\n                                    <Avatar className=\"w-32 h-32\" src={member.avatar}/>\n                                    <ListItemText>\n                                        {member.name}\n                                    </ListItemText>\n                                </MenuItem>\n                            );\n                        })}\n                    </div>\n                </ToolbarMenu>\n            </div>\n        );\n    };\n}\n\nexport default MembersMenu;\n","import {FuseUtils} from '@fuse';\n\nclass ChecklistModel {\n    /**\n     * Constructor\n     */\n    constructor(data)\n    {\n        const item = data ? data : {};\n\n        this.id = item.id || FuseUtils.generateGUID();\n        this.name = item.name || '';\n        this.checkItems = item.checkItems || [];\n    }\n}\n\nexport default ChecklistModel;\n","import React, {Component} from 'react';\nimport {Icon, IconButton, Button, TextField} from '@material-ui/core';\nimport ToolbarMenu from './ToolbarMenu';\nimport ChecklistModel from 'main/content/apps/scrumboard/model/ChecklistModel';\n\nclass CheckListMenu extends Component {\n    state = {\n        anchorEl : null,\n        name     : '',\n        canSubmit: false\n    };\n\n    handleMenuClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({\n            anchorEl: null,\n            name    : ''\n        });\n    };\n\n    onSubmit = (ev) => {\n        ev.preventDefault();\n        console.info(this.canSubmit());\n        if ( !this.canSubmit() )\n        {\n            return;\n        }\n        this.props.onAddCheckList(new ChecklistModel({name: this.state.name}));\n        this.handleMenuClose();\n    };\n\n    handleTitleChange = (ev) => {\n        this.setState({name: ev.target.value})\n    };\n\n    canSubmit = () => {\n        return this.state.name !== '';\n    };\n\n    render()\n    {\n        const {name} = this.state;\n\n        return (\n            <div>\n                <IconButton color=\"inherit\" onClick={this.handleMenuClick}>\n                    <Icon>check_box</Icon>\n                </IconButton>\n                <ToolbarMenu state={this.state.anchorEl} onClose={this.handleMenuClose}>\n                    <form onSubmit={this.onSubmit} className=\"p-16 flex flex-col items-end\">\n                        <TextField\n                            label=\"Checklist title\"\n                            name=\"name\"\n                            value={name}\n                            onChange={this.handleTitleChange}\n                            fullWidth\n                            className=\"mb-12\"\n                            variant=\"outlined\"\n                            required\n                        />\n                        <Button\n                            color=\"secondary\"\n                            type=\"submit\"\n                            disabled={!this.canSubmit()}\n                            variant=\"contained\"\n                        >\n                            Add\n                        </Button>\n                    </form>\n                </ToolbarMenu>\n            </div>\n        );\n    };\n}\n\nexport default CheckListMenu;\n","import React, {Component} from 'react';\nimport {Icon, IconButton, MenuItem} from '@material-ui/core';\nimport ToolbarMenu from './ToolbarMenu';\n\nclass OptionsMenu extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleMenuClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    render()\n    {\n        const {onRemoveCard} = this.props;\n\n        return (\n            <div>\n                <IconButton color=\"inherit\" onClick={this.handleMenuClick}>\n                    <Icon>more_horiz</Icon>\n                </IconButton>\n                <ToolbarMenu state={this.state.anchorEl} onClose={this.handleMenuClose}>\n                    <MenuItem onClick={onRemoveCard}>\n                        Remove Card\n                    </MenuItem>\n                </ToolbarMenu>\n            </div>\n        );\n    };\n}\n\nexport default OptionsMenu;\n","import {Component} from 'react';\nimport {Icon, IconButton, TextField, Checkbox, ListItem} from '@material-ui/core';\nimport React from 'react';\nimport _ from '@lodash';\n\nclass CardChecklistItem extends Component {\n    state = this.props.item;\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if ( this.state && prevState && !_.isEqual(this.state, prevState) )\n        {\n            console.info('onListItemChange');\n            this.props.onListItemChange(this.state);\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState(_.setIn(this.state, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n    };\n\n    render()\n    {\n        const {onListItemRemove} = this.props;\n        if ( !this.state )\n        {\n            return null;\n        }\n\n        return (\n            <ListItem\n                className=\"px-0\"\n                key={this.state.id}\n                dense\n            >\n                <Checkbox\n                    checked={this.state.checked}\n                    tabIndex={-1}\n                    disableRipple\n                    name=\"checked\"\n                    onChange={this.handleChange}\n                />\n                <TextField\n                    className=\"flex flex-1 mx-8\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                    variant=\"outlined\"\n                />\n                <IconButton aria-label=\"Delete\" onClick={onListItemRemove}>\n                    <Icon>delete</Icon>\n                </IconButton>\n            </ListItem>\n        );\n    }\n}\n\nexport default CardChecklistItem;\n","import {FuseUtils} from '@fuse';\n\nclass ChecklistItemModel {\n    /**\n     * Constructor\n     */\n    constructor(data)\n    {\n        const item = data ? data : {};\n\n        this.id = item.id || FuseUtils.generateGUID();\n        this.name = item.name || '';\n        this.checked = item.checked ||false;\n    }\n}\n\nexport default ChecklistItemModel;\n","import React, {Component} from 'react';\nimport {Icon, ListItem, TextField, Fab} from '@material-ui/core';\nimport ChecklistItemModel from 'main/content/apps/scrumboard/model/ChecklistItemModel';\nimport _ from '@lodash';\n\nclass CardAddChecklistItem extends Component {\n    state = {\n        name: ''\n    };\n\n    handleChange = (event) => {\n        this.setState(_.setIn(this.state, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n    };\n\n    submit = (ev) => {\n        ev.preventDefault();\n        const {name} = this.state;\n        if ( name === '' )\n        {\n            return;\n        }\n        this.props.onListItemAdd(new ChecklistItemModel({name}));\n        this.setState({name: ''})\n    };\n\n    render()\n    {\n        return (\n            <form onSubmit={this.submit}>\n                <ListItem\n                    className=\"pr-0 pl-56\"\n                    dense\n                >\n                    <TextField\n                        className=\"flex flex-1\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        variant=\"outlined\"\n                        placeholder=\"Add an item\"\n                    />\n                    <Fab\n                        className=\"ml-16\"\n                        aria-label=\"Add\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                    >\n                        <Icon>add</Icon>\n                    </Fab>\n                </ListItem>\n            </form>\n        );\n    }\n}\n\nexport default CardAddChecklistItem;\n","import React, {Component} from 'react';\nimport {Icon, Typography, Menu, MenuItem, LinearProgress, List, ListItemText, ListItemIcon, IconButton, TextField, InputAdornment, ClickAwayListener} from '@material-ui/core';\nimport CardChecklistItem from './CardChecklistItem';\nimport CardAddChecklistItem from './CardAddChecklistItem';\nimport _ from '@lodash';\n\nclass CardChecklist extends Component {\n    state = {\n        anchorEl   : null,\n        renameForm : false,\n        renameTitle: this.props.checklist.name,\n        checklist  : this.props.checklist\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if ( this.state.checklist &&\n            prevState.checklist &&\n            !_.isEqual(this.state.checklist, prevState.checklist) )\n        {\n            console.info('onCheckListChanged');\n            this.props.onCheckListChange(this.state.checklist);\n        }\n    }\n\n    handleClick = event => {\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null});\n    };\n\n    handleListItemChange = (item) => {\n        const index = this.state.checklist.checkItems.findIndex((x) => x.id === item.id);\n        this.setState(_.setIn(this.state, `checklist.checkItems[${index}]`, item));\n    };\n\n    handleListItemRemove = (id) => {\n        this.setState(_.setIn(this.state, 'checklist.checkItems', _.reject(this.state.checklist.checkItems, {id})));\n    };\n\n    checkItemsChecked = () => {\n        return _.sum(this.state.checklist.checkItems.map(x => (x.checked ? 1 : 0)));\n    };\n\n    handleListItemAdd = (item) => {\n        this.setState(_.setIn(this.state, 'checklist.checkItems', [...this.state.checklist.checkItems, item]));\n    };\n\n    renameFormToggle = (state) => {\n        this.setState({\n            renameForm : state,\n            renameTitle: this.state.checklist.name\n        })\n    };\n\n    onRenameTitleChange = (ev) => {\n        this.setState({renameTitle: ev.target.value})\n    };\n\n    renameTitleSubmit = (ev) => {\n        ev.preventDefault();\n        if ( this.state.renameTitle === '' )\n        {\n            this.renameFormToggle(false);\n            return;\n        }\n        this.setState(_.setIn(this.state, 'checklist.name', this.state.renameTitle));\n        this.renameFormToggle(false);\n    };\n\n    render()\n    {\n        const {onRemoveCheckList} = this.props;\n        const {anchorEl, checklist, renameTitle, renameForm} = this.state;\n\n        if ( !checklist )\n        {\n            return null;\n        }\n        return (\n            <div className=\"mb-24\">\n\n                <div className=\"flex items-center justify-between mt-16 mb-12\">\n                    <div className=\"flex items-center\">\n                        <Icon className=\"text-20 mr-8\">check_box</Icon>\n                        {renameForm ? (\n                            <ClickAwayListener onClickAway={() => this.renameFormToggle(false)}>\n                                <form onSubmit={this.renameTitleSubmit}>\n                                    <TextField\n                                        value={renameTitle}\n                                        onChange={this.onRenameTitleChange}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton type=\"submit\">\n                                                        <Icon>check</Icon>\n                                                    </IconButton>\n                                                </InputAdornment>\n                                            )\n                                        }}\n                                    />\n                                </form>\n                            </ClickAwayListener>\n                        ) : (\n                            <Typography\n                                className=\"text-16 font-600\"\n                                onClick={() => this.renameFormToggle(true)}\n                            >\n                                {checklist.name}\n                            </Typography>\n                        )}\n\n                    </div>\n                    <div className=\"\">\n                        <IconButton\n                            aria-owns={anchorEl ? 'actions-menu' : null}\n                            aria-haspopup=\"true\"\n                            onClick={this.handleClick}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        >\n                            <Icon className=\"text-20\">more_vert</Icon>\n                        </IconButton>\n                        <Menu\n                            id=\"actions-menu\"\n                            anchorEl={anchorEl}\n                            open={Boolean(anchorEl)}\n                            onClose={this.handleClose}\n                        >\n                            <MenuItem onClick={onRemoveCheckList}>\n                                <ListItemIcon>\n                                    <Icon>delete</Icon>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Remove Checklist\"/>\n                            </MenuItem>\n                            <MenuItem onClick={() => this.renameFormToggle(true)}>\n                                <ListItemIcon>\n                                    <Icon>edit</Icon>\n                                </ListItemIcon>\n                                <ListItemText primary=\"Rename Checklist\"/>\n                            </MenuItem>\n                        </Menu>\n                    </div>\n                </div>\n\n                <div className=\"\">\n                    <div className=\"flex items-center pl-16\">\n                        <Typography className=\"flex font-600 mr-12\">\n                            {this.checkItemsChecked() + ' / ' + checklist.checkItems.length}\n                        </Typography>\n                        <LinearProgress\n                            className=\"flex flex-1\"\n                            variant=\"determinate\"\n                            color=\"secondary\"\n                            value={100 * this.checkItemsChecked() / checklist.checkItems.length}\n                        />\n                    </div>\n                    <List className=\"\">\n                        {checklist.checkItems.map(checkItem => (\n                            <CardChecklistItem\n                                item={checkItem}\n                                key={checkItem.id}\n                                onListItemChange={this.handleListItemChange}\n                                onListItemRemove={() => this.handleListItemRemove(checkItem.id)}\n                            />\n                        ))}\n                        <CardAddChecklistItem\n                            onListItemAdd={(item) => this.handleListItemAdd(item)}\n                        />\n                    </List>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardChecklist;\n","import React from 'react';\nimport {withStyles, Avatar, ListItem, Typography} from '@material-ui/core';\nimport classNames from 'classnames';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    root         : {},\n    commentBubble: {\n        borderRadius: '5px 20px 20px 5px',\n        border      : '1px solid ' + theme.palette.divider\n    }\n});\n\nconst CardActivity = ({item, members, classes}) => {\n\n    const user = _.find(members, {id: item.idMember});\n\n    switch ( item.type )\n    {\n        case 'comment':\n        {\n            return (\n                <ListItem dense className=\"px-0\">\n                    <Avatar alt={user.name} src={user.avatar} className=\"w-32 h-32\"/>\n                    <div className={classNames(classes.commentBubble, \"flex flex-col ml-16 p-12\")}>\n                        <div className=\"flex items-center\">\n                            <Typography>{user.name}</Typography>\n                            <Typography className=\"ml-8 text-12\" color=\"textSecondary\">{item.time}</Typography>\n                        </div>\n                        <Typography>{item.message}</Typography>\n                    </div>\n                </ListItem>\n            )\n        }\n        case 'attachment':\n        {\n            return (\n                <ListItem dense className=\"px-0\">\n                    <Avatar alt={user.name} src={user.avatar} className=\"w-32 h-32\"/>\n                    <div className=\"flex items-center ml-16\">\n                        <Typography>{user.name},</Typography>\n                        <Typography className=\"ml-8\">{item.message}</Typography>\n                    </div>\n                    <Typography className=\"ml-8 text-12\" color=\"textSecondary\">{item.time}</Typography>\n                </ListItem>\n            )\n        }\n        default:\n        {\n            return null;\n        }\n    }\n};\n\nexport default withStyles(styles, {withTheme: true})(CardActivity);\n","import {FuseUtils} from '@fuse';\nimport moment from 'moment';\n\nclass CommentModel {\n    /**\n     * Constructor\n     */\n    constructor(data)\n    {\n        const item = data ? data : {};\n\n        this.id = item.id || FuseUtils.generateGUID();\n        this.type = 'comment';\n        this.idMember = item.idMember || null;\n        this.message = item.message || '';\n        this.time = item.time || moment().format(moment.HTML5_FMT.DATE);\n    }\n}\n\nexport default CommentModel;\n","import React, {Component} from 'react';\nimport {TextField, Button, Avatar} from '@material-ui/core';\nimport connect from 'react-redux/es/connect/connect';\nimport CommentModel from 'main/content/apps/scrumboard/model/CommentModel';\nimport _ from '@lodash';\n\nclass CardComment extends Component {\n    state = {\n        idMember: '36027j1930450d8bf7b10158',\n        message : ''\n    };\n\n    handleChange = (event) => {\n        this.setState(_.setIn(this.state, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n    };\n\n    submit = (ev) => {\n        ev.preventDefault();\n        if ( !this.canSubmit() )\n        {\n            return;\n        }\n        this.props.onCommentAdd(new CommentModel(this.state));\n        this.setState({message: ''})\n    };\n\n    canSubmit = () => {\n        return this.state.message !== '';\n    };\n\n    render()\n    {\n        const {members} = this.props;\n        const user = _.find(members, {id: this.state.idMember});\n\n        return (\n            <form onSubmit={this.submit} className=\"flex\">\n                <Avatar className=\"w-32 h-32\" alt={user.name} src={user.avatar}/>\n                <div className=\"flex flex-col items-start flex-1 pr-0 pl-16\">\n                    <TextField\n                        className=\"flex flex-1\"\n                        fullWidth\n                        name=\"message\"\n                        row={3}\n                        value={this.state.message}\n                        onChange={this.handleChange}\n                        variant=\"outlined\"\n                        label=\"Add comment\"\n                        placeholder=\"Write a comment...\"\n                    />\n                    <Button\n                        className=\"mt-16\"\n                        aria-label=\"save\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        size=\"small\"\n                        disabled={!this.canSubmit()}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps({auth})\n{\n    return {\n        user: auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(CardComment);\n","import React, {Component} from 'react';\nimport {withStyles, TextField, Dialog, DialogContent, DialogTitle, Icon, IconButton, Typography, Toolbar, AppBar, Avatar, InputAdornment, Tooltip, List} from '@material-ui/core';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions/index';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {FuseChipSelect} from '@fuse/index';\nimport LabelModel from 'main/content/apps/scrumboard/model/LabelModel';\nimport CardAttachment from './attachment/CardAttachment';\nimport DueMenu from './toolbar/DueMenu';\nimport LabelsMenu from './toolbar/LabelsMenu';\nimport MembersMenu from './toolbar/MembersMenu';\nimport CheckListMenu from './toolbar/CheckListMenu';\nimport OptionsMenu from './toolbar/OptionsMenu';\nimport CardChecklist from './checklist/CardChecklist';\nimport CardActivity from './activity/CardActivity';\nimport CardComment from './comment/CardComment';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport moment from 'moment';\n\nconst styles = theme => ({\n    root       : {},\n    paper      : {\n        color: theme.palette.text.primary\n    },\n    formControl: {\n        marginBottom: 24\n    }\n});\n\nclass BoardCardDialog extends Component {\n\n    state = {\n        dueMenu: null\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if ( prevProps.card &&\n            this.props.card &&\n            !_.isEqual(prevProps.card, this.props.card)\n        )\n        {\n            this.updateCard(this.props.board.id, this.props.card);\n        }\n    }\n\n    updateCard = _.debounce((boardId, card) => {\n        this.props.updateCard(boardId, card);\n    }, 600);\n\n    render()\n    {\n        const {card, classes, removeCard, closeCardDialog, board, addLabel, handleChange, chipChange, removeAttachment, removeDue, toggleLabel, toggleMember, addCheckList, checkListChange, removeCheckList, commentAdd, makeCover, removeCover, addNewChip} = this.props;\n        const list = card ? _.find(board.lists, (_list) => _list.idCards.includes(card.id)) : null;\n        const dueDate = card && card.due ? moment(card.due).format(moment.HTML5_FMT.DATE) : \"\";\n\n        return (\n            <Dialog\n                classes={{\n                    root : classes.root,\n                    paper: classNames(classes.paper, \"max-w-lg w-full m-24\")\n                }}\n                onClose={closeCardDialog}\n                open={Boolean(card)}\n            >\n\n                {card && (\n                    <DialogTitle component=\"div\" className=\"p-0\">\n                        <AppBar position=\"static\" elevation={1}>\n                            <Toolbar className=\"flex w-full overflow-x-auto px-8 sm:px-16\">\n                                <div className=\"flex flex-1\">\n\n                                    <DueMenu\n                                        onDueChange={handleChange}\n                                        onRemoveDue={removeDue}\n                                        due={card.due}\n                                    />\n\n                                    <LabelsMenu\n                                        onToggleLabel={toggleLabel}\n                                        labels={board.labels}\n                                        idLabels={card.idLabels}\n                                    />\n\n                                    <MembersMenu\n                                        onToggleMember={toggleMember}\n                                        members={board.members}\n                                        idMembers={card.idMembers}\n                                    />\n\n                                    <IconButton color=\"inherit\">\n                                        <Icon>attachment</Icon>\n                                    </IconButton>\n\n                                    <CheckListMenu\n                                        onAddCheckList={addCheckList}\n                                    />\n\n                                    <OptionsMenu\n                                        onRemoveCard={() => removeCard(board.id, card.id)}\n                                    />\n\n                                </div>\n                                <IconButton color=\"inherit\" onClick={closeCardDialog}>\n                                    <Icon>close</Icon>\n                                </IconButton>\n                            </Toolbar>\n                        </AppBar>\n                    </DialogTitle>\n                )}\n\n                {card && (\n                    <DialogContent className=\"p-16 sm:p-24\">\n\n                        <div className=\"flex flex-col sm:flex-row sm:justify-between justify-center items-center mb-24\">\n                            <div className=\"mb-16 sm:mb-0 flex items-center\">\n                                <Typography>{board.name}</Typography>\n                                <Icon className=\"text-20\" color=\"inherit\">chevron_right</Icon>\n                                <Typography>{list && list.name}</Typography>\n                            </div>\n\n                            {card.due && (\n                                <TextField\n                                    label=\"Due date\"\n                                    type=\"date\"\n                                    name=\"due\"\n                                    value={dueDate}\n                                    onChange={handleChange}\n                                    placeholder=\" Choose a due date\"\n                                    className=\"w-full sm:w-auto\"\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                    variant=\"outlined\"\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <Icon color=\"action\">today</Icon>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n                            )}\n                        </div>\n\n                        <div className=\"flex items-center mb-24\">\n                            <TextField\n                                label=\"Title\"\n                                type=\"text\"\n                                name=\"name\"\n                                value={card.name}\n                                onChange={handleChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            {card.subscribed && (\n                                                <Icon className=\"text-20\" color=\"action\">remove_red_eye</Icon>\n                                            )}\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                        </div>\n\n                        <div className=\"w-full mb-24\">\n                            <TextField\n                                label=\"Description\"\n                                name=\"description\"\n                                multiline\n                                rows=\"4\"\n                                value={card.description}\n                                onChange={handleChange}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </div>\n\n                        <div className=\"flex flex-col sm:flex-row\">\n                            {card.idLabels.length > 0 && (\n                                <div className=\"flex-1 mb-24\">\n                                    <div className=\"flex items-center mt-16 mb-12\">\n                                        <Icon className=\"text-20 mr-8\" color=\"inherit\">label</Icon>\n                                        <Typography className=\"font-600 text-16\">Labels</Typography>\n                                    </div>\n                                    <FuseChipSelect\n                                        className={card.idMembers.length > 0 && 'sm:mr-8'}\n                                        value={\n                                            card.idLabels.map(labelId => ({\n                                                value: labelId,\n                                                label: _.find(board.labels, {id: labelId}).name,\n                                                class: _.find(board.labels, {id: labelId}).class\n                                            }))\n                                        }\n                                        onChange={(value) => chipChange('idLabels', value)}\n                                        placeholder=\"Select multiple Labels\"\n                                        isMulti\n                                        textFieldProps={{\n                                            variant: \"outlined\"\n                                        }}\n                                        options={board.labels.map((label) => (\n                                            {\n                                                value: label.id,\n                                                label: label.name,\n                                                class: label.class\n                                            }\n                                        ))}\n                                        onCreateOption={(name) => {\n                                            // Create New Label\n                                            const newLabel = new LabelModel({name});\n\n                                            // Ad new Label to board(redux store and server)\n                                            addLabel(newLabel);\n\n                                            // Trigger handle chip change\n                                            addNewChip('idLabels', newLabel.id);\n\n                                            return newLabel.id;\n                                        }}\n                                    />\n                                </div>\n                            )}\n\n                            {card.idMembers.length > 0 && (\n                                <div className=\"flex-1 mb-24\">\n                                    <div className=\"flex items-center mt-16 mb-12\">\n                                        <Icon className=\"text-20 mr-8\" color=\"inherit\">supervisor_account</Icon>\n                                        <Typography className=\"font-600 text-16\">Members</Typography>\n                                    </div>\n                                    <FuseChipSelect\n                                        className={card.idLabels.length > 0 && 'sm:ml-8'}\n                                        value={\n                                            card.idMembers.map(memberId => {\n                                                const member = _.find(board.members, {id: memberId});\n                                                return {\n                                                    value: member.id,\n                                                    label: (<Tooltip title={member.name}><Avatar className=\"-ml-12 w-32 h-32\" src={member.avatar}/></Tooltip>)\n                                                }\n                                            })\n                                        }\n                                        onChange={(value) => chipChange('idMembers', value)}\n                                        placeholder=\"Select multiple Members\"\n                                        isMulti\n                                        textFieldProps={{\n                                            variant: \"outlined\"\n                                        }}\n                                        options={board.members.map((member) => (\n                                            {\n                                                value: member.id,\n                                                label: (<span className=\"flex items-center\"><Avatar className=\"w-32 h-32 mr-8\" src={member.avatar}/>{member.name}</span>)\n                                            }\n                                        ))}\n                                        variant=\"fixed\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n\n                        {card.attachments.length > 0 && (\n                            <div className=\"mb-24\">\n                                <div className=\"flex items-center mt-16 mb-12\">\n                                    <Icon className=\"text-20 mr-8\" color=\"inherit\">attachment</Icon>\n                                    <Typography className=\"font-600 text-16\">Attachments</Typography>\n                                </div>\n                                <div className=\"flex flex-col sm:flex-row flex-wrap\">\n                                    {card.attachments.map(item => (\n                                            <CardAttachment\n                                                item={item}\n                                                card={card}\n                                                makeCover={makeCover}\n                                                removeCover={removeCover}\n                                                removeAttachment={removeAttachment}\n                                                key={item.id}\n                                            />\n                                        )\n                                    )}\n                                </div>\n                            </div>\n                        )}\n\n                        {card.checklists.map(checklist => (\n                            <CardChecklist\n                                key={checklist.id}\n                                checklist={checklist}\n                                onCheckListChange={checkListChange}\n                                onRemoveCheckList={() => removeCheckList(checklist.id)}\n                            />\n                        ))}\n\n                        <div className=\"mb-24\">\n                            <div className=\"flex items-center mt-16 mb-12\">\n                                <Icon className=\"text-20 mr-8\" color=\"inherit\">comment</Icon>\n                                <Typography className=\"font-600 text-16\">Comment</Typography>\n                            </div>\n                            <div>\n                                <CardComment\n                                    members={board.members}\n                                    onCommentAdd={commentAdd}\n                                />\n                            </div>\n                        </div>\n\n                        {card.activities.length > 0 && (\n                            <div className=\"mb-24\">\n                                <div className=\"flex items-center mt-16\">\n                                    <Icon className=\"text-20 mr-8\" color=\"inherit\">list</Icon>\n                                    <Typography className=\"font-600 text-16\">Activity</Typography>\n                                </div>\n                                <List className=\"\">\n                                    {card.activities.map(item => (\n                                            <CardActivity\n                                                item={item}\n                                                key={item.id}\n                                                members={board.members}\n                                            />\n                                        )\n                                    )}\n                                </List>\n                            </div>\n                        )}\n                    </DialogContent>\n                )}\n            </Dialog>\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeCardDialog : Actions.closeCardDialog,\n        updateCard      : Actions.updateCard,\n        removeCard      : Actions.removeCard,\n        handleChange    : Actions.handleChange,\n        addLabel        : Actions.addLabel,\n        chipChange      : Actions.chipChange,\n        makeCover       : Actions.makeCover,\n        removeCover     : Actions.removeCover,\n        removeAttachment: Actions.removeAttachment,\n        removeDue       : Actions.removeDue,\n        toggleLabel     : Actions.toggleLabel,\n        toggleMember    : Actions.toggleMember,\n        addCheckList    : Actions.addCheckList,\n        checkListChange : Actions.checkListChange,\n        removeCheckList : Actions.removeCheckList,\n        addNewChip      : Actions.addNewChip,\n        commentAdd      : Actions.commentAdd\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        card : scrumboardApp.card,\n        board: scrumboardApp.board\n    }\n}\n\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(BoardCardDialog));\n","import React, {Component} from 'react';\nimport {AppBar, Toolbar, List, ListItem, ListItemIcon, Icon, ListItemText, ListItemSecondaryAction, Switch} from '@material-ui/core';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions';\nimport connect from 'react-redux/es/connect/connect';\nimport {withRouter} from 'react-router-dom';\n\nclass BoardSettingsSidebar extends Component {\n    render()\n    {\n        const {board, changeBoardSettings, deleteBoard, copyBoard} = this.props;\n\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Toolbar className=\"flex w-full justify-center\">\n                        Settings\n                    </Toolbar>\n                </AppBar>\n\n                <List className=\"py-16\" dense>\n\n                    <ListItem\n                        button\n                        onClick={() => changeBoardSettings({cardCoverImages: !board.settings.cardCoverImages})}\n                    >\n                        <ListItemIcon>\n                            <Icon>photo</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Card Cover Images\"/>\n                        <ListItemSecondaryAction>\n                            <Switch\n                                onChange={() => changeBoardSettings({cardCoverImages: !board.settings.cardCoverImages})}\n                                checked={board.settings.cardCoverImages}\n                            />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n\n                    <ListItem\n                        button\n                        onClick={() => changeBoardSettings({subscribed: !board.settings.subscribed})}\n                    >\n                        <ListItemIcon>\n                            <Icon>remove_red_eye</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Subscribe\"/>\n                        <ListItemSecondaryAction>\n                            <Switch\n                                onChange={() => changeBoardSettings({subscribed: !board.settings.subscribed})}\n                                checked={board.settings.subscribed}\n                            />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n\n                    <ListItem button onClick={() => copyBoard(board)}>\n                        <ListItemIcon>\n                            <Icon>file_copy</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Copy Board\"/>\n                    </ListItem>\n\n                    <ListItem button onClick={() => deleteBoard(board.id)}>\n                        <ListItemIcon>\n                            <Icon>delete</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Delete Board\"/>\n                    </ListItem>\n                </List>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeBoardSettings: Actions.changeBoardSettings,\n        deleteBoard        : Actions.deleteBoard,\n        copyBoard          : Actions.copyBoard\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BoardSettingsSidebar));\n","import React, {Component} from 'react';\nimport {Button, Icon, IconButton, AppBar, Toolbar, Drawer, Hidden} from '@material-ui/core';\nimport {Link, withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'main/content/apps/scrumboard/store/actions';\nimport connect from 'react-redux/es/connect/connect';\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\nimport BoardTitle from './BoardTitle';\nimport BoardList from './BoardList';\nimport BoardAddList from './BoardAddList';\nimport BoardCardDialog from './dialogs/card/BoardCardDialog';\nimport BoardSettingsSidebar from './sidebars/settings/BoardSettingsSidebar';\nimport withReducer from 'store/withReducer';\nimport reducer from './../store/reducers';\n\nclass Board extends Component {\n\n    state = {\n        settingsDrawerOpen: false\n    };\n\n    componentDidMount()\n    {\n        this.props.getBoard(this.props.match.params.boardId);\n    }\n\n    componentWillUnmount()\n    {\n        this.props.resetBoard();\n    }\n\n    onDragEnd = (result) => {\n        const {source, destination} = result;\n\n        // dropped nowhere\n        if ( !destination )\n        {\n            return;\n        }\n\n        // did not move anywhere - can bail early\n        if (\n            source.droppableId === destination.droppableId &&\n            source.index === destination.index\n        )\n        {\n            return;\n        }\n\n        // reordering list\n        if ( result.type === 'list' )\n        {\n            this.props.reorderList(result);\n        }\n\n        // reordering card\n        if ( result.type === 'card' )\n        {\n            this.props.reorderCard(result);\n        }\n    };\n\n    toggleSettingsDrawer = (state) => {\n        state = (state === undefined) ? !this.state.settingsDrawerOpen : state;\n\n        this.setState({\n            settingsDrawerOpen: state\n        });\n    };\n\n    render()\n    {\n        const {board} = this.props;\n        if ( !board )\n        {\n            return '';\n        }\n        return (\n            <div\n                className=\"flex flex-1 flex-col w-full h-full relative\"\n                ref={(root) => {\n                    this.root = root;\n                }}\n            >\n                <AppBar position=\"static\" color=\"primary\">\n                    <Toolbar className=\"flex items-center justify-between px-4 sm:px-24 h-64 sm:h-96\">\n                        <Hidden xsDown>\n                            <Button to=\"/apps/scrumboard/boards/\" component={Link} variant=\"contained\">\n                                <Icon className=\"mr-8\">assessment</Icon>\n                                Boards\n                            </Button>\n                        </Hidden>\n\n                        <Hidden smUp>\n                            <IconButton color=\"inherit\" to=\"/apps/scrumboard/boards/\" component={Link}>\n                                <Icon>assessment</Icon>\n                            </IconButton>\n                        </Hidden>\n\n                        <div className=\"flex flex-1 justify-center items-center\">\n                            <BoardTitle/>\n                        </div>\n\n                        <IconButton color=\"inherit\" onClick={() => this.toggleSettingsDrawer(true)}>\n                            <Icon>settings</Icon>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n\n                <div className=\"flex flex-1 p-16 md:p-24 overflow-x-auto overflow-y-hidden\">\n\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable\n                            droppableId=\"list\"\n                            type=\"list\"\n                            direction=\"horizontal\"\n                            ignoreContainerClipping={800}\n                        >\n                            {(provided) => (\n                                <div ref={provided.innerRef} className=\"flex\">\n                                    {board.lists.map((list, index) => (\n                                        <BoardList\n                                            key={list.id}\n                                            list={list}\n                                            index={index}\n                                        />\n                                    ))}\n                                    {provided.placeholder}\n\n                                    <BoardAddList/>\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </div>\n\n                <Drawer\n                    anchor=\"right\"\n                    className=\"absolute overflow-hidden\"\n                    classes={{\n                        paper: \"absolute w-320\"\n                    }}\n                    BackdropProps={{\n                        classes: {\n                            root: \"absolute\"\n                        }\n                    }}\n                    container={this.root}\n                    ModalProps={{\n                        keepMounted: true\n                    }}\n                    open={this.state.settingsDrawerOpen}\n                    onClose={() => this.toggleSettingsDrawer(false)}\n                >\n                    <BoardSettingsSidebar/>\n                </Drawer>\n\n                <BoardCardDialog/>\n\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getBoard   : Actions.getBoard,\n        resetBoard : Actions.resetBoard,\n        reorderList: Actions.reorderList,\n        reorderCard: Actions.reorderCard\n    }, dispatch);\n}\n\nfunction mapStateToProps({scrumboardApp})\n{\n    return {\n        board: scrumboardApp.board\n    }\n}\n\nexport default withReducer('scrumboardApp', reducer)(withRouter(connect(mapStateToProps, mapDispatchToProps)(Board)));\n"],"sourceRoot":""}