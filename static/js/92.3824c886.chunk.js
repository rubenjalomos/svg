(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{1725:function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},1726:function(e,t,n){"use strict";var a=n(1725);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n(0)),l=a(n(1729)),i=a(n(65));var r=function(e,t){var n=function(t){return o.default.createElement(i.default,t,e)};return n.displayName="".concat(t,"Icon"),(n=(0,l.default)(n)).muiName="SvgIcon",n};t.default=r},1727:function(e,t,n){"use strict";var a=n(1725);t.__esModule=!0,t.default=void 0;var o=a(n(1732)),l=function(e){return(0,o.default)("displayName",e)};t.default=l},1728:function(e,t,n){"use strict";var a=n(1725);t.__esModule=!0,t.default=void 0;var o=a(n(1733)),l=function(e,t){return t+"("+(0,o.default)(e)+")"};t.default=l},1729:function(e,t,n){"use strict";var a=n(1725);t.__esModule=!0,t.default=void 0;var o=a(n(1730)),l=a(n(1734)),i=(a(n(1727)),a(n(1728)),function(e){return(0,o.default)(function(e,t){return!(0,l.default)(e,t)})(e)});t.default=i},1730:function(e,t,n){"use strict";var a=n(1725);t.__esModule=!0,t.default=void 0;var o=a(n(1731)),l=n(0),i=(a(n(1727)),a(n(1728)),function(e){return function(t){var n=(0,l.createFactory)(t);return function(t){function a(){return t.apply(this,arguments)||this}(0,o.default)(a,t);var l=a.prototype;return l.shouldComponentUpdate=function(t){return e(this.props,t)},l.render=function(){return n(this.props)},a}(l.Component)}});t.default=i},1731:function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},1732:function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var a=function(e,t){return function(n){return n[e]=t,n}};t.default=a},1733:function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var a=function(e){return"string"===typeof e?e:e?e.displayName||e.name||"Component":void 0};t.default=a},1734:function(e,t,n){"use strict";var a=n(1725);t.__esModule=!0,t.default=void 0;var o=a(n(765)).default;t.default=o},1750:function(e,t,n){"use strict";var a=n(1725);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n(0)),l=(0,a(n(1726)).default)(o.default.createElement(o.default.Fragment,null,o.default.createElement("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}),o.default.createElement("path",{fill:"none",d:"M0 0h24v24H0z"})),"Add");t.default=l},1774:function(e,t,n){"use strict";var a=n(1725);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n(0)),l=(0,a(n(1726)).default)(o.default.createElement(o.default.Fragment,null,o.default.createElement("path",{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),o.default.createElement("path",{fill:"none",d:"M0 0h24v24H0z"})),"Close");t.default=l},1822:function(e,t,n){"use strict";var a=n(4);Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.styles=void 0;var o=a(n(20)),l=a(n(8)),i=a(n(9)),r=a(n(0)),s=(a(n(2)),a(n(5))),c=a(n(16)),u=a(n(335)),m=function(e){return{root:{width:36,height:36,fontSize:e.typography.pxToRem(18),marginRight:4},alignItemsFlexStart:{marginTop:4},icon:{width:20,height:20,fontSize:e.typography.pxToRem(20)}}};function d(e){var t=e.children,n=e.classes,a=e.className,c=(0,i.default)(e,["children","classes","className"]);return r.default.createElement(u.default.Consumer,null,function(e){var i;return r.default.cloneElement(t,(0,l.default)({className:(0,s.default)((i={},(0,o.default)(i,n.root,e.dense),(0,o.default)(i,n.alignItemsFlexStart,"flex-start"===e.alignItems),i),a,t.props.className),childrenClassName:(0,s.default)((0,o.default)({},n.icon,e.dense),t.props.childrenClassName)},c))})}t.styles=m,d.propTypes={},d.muiName="ListItemAvatar";var p=(0,c.default)(m,{name:"MuiListItemAvatar"})(d);t.default=p},2182:function(e,t,n){"use strict";n.r(t);var a=n(234),o=n(10),l=n(11),i=n(13),r=n(12),s=n(14),c=n(0),u=n.n(c),m=n(15),d=n(233),p=n.n(d),h=n(476),f=n.n(h),g=n(315),b=n.n(g),v=n(316),C=n.n(v),y=n(772),D=n.n(y),E=n(471),x=n.n(E),k=n(484),T=n.n(k),O=n(482),S=n.n(O),w=n(2183),A=n.n(w),j=n(1750),I=n.n(j),L=n(93),B=n.n(L),N=n(795),P=n.n(N),M=["username@gmail.com","user02@gmail.com"],R={avatar:{backgroundColor:P.a[100],color:P.a[600]}},W=function(e){function t(){var e,n;Object(o.a)(this,t);for(var a=arguments.length,l=new Array(a),s=0;s<a;s++)l[s]=arguments[s];return(n=Object(i.a)(this,(e=Object(r.a)(t)).call.apply(e,[this].concat(l)))).handleClose=function(){n.props.onClose(n.props.selectedValue)},n.handleListItemClick=function(e){n.props.onClose(e)},n}return Object(s.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.classes,o=(t.onClose,t.selectedValue,Object(a.a)(t,["classes","onClose","selectedValue"]));return u.a.createElement(S.a,Object.assign({onClose:this.handleClose,"aria-labelledby":"simple-dialog-title"},o),u.a.createElement(T.a,{id:"simple-dialog-title"},"Set backup account"),u.a.createElement("div",null,u.a.createElement(b.a,null,M.map(function(t){return u.a.createElement(C.a,{button:!0,onClick:function(){return e.handleListItemClick(t)},key:t},u.a.createElement(D.a,null,u.a.createElement(f.a,{className:n.avatar},u.a.createElement(A.a,null))),u.a.createElement(x.a,{primary:t}))}),u.a.createElement(C.a,{button:!0,onClick:function(){return e.handleListItemClick("addAccount")}},u.a.createElement(D.a,null,u.a.createElement(f.a,null,u.a.createElement(I.a,null))),u.a.createElement(x.a,{primary:"add account"})))))}}]),t}(u.a.Component),q=Object(m.withStyles)(R)(W),F=function(e){function t(){var e,n;Object(o.a)(this,t);for(var a=arguments.length,l=new Array(a),s=0;s<a;s++)l[s]=arguments[s];return(n=Object(i.a)(this,(e=Object(r.a)(t)).call.apply(e,[this].concat(l)))).state={open:!1,selectedValue:M[1]},n.handleClickOpen=function(){n.setState({open:!0})},n.handleClose=function(e){n.setState({selectedValue:e,open:!1})},n}return Object(s.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return u.a.createElement("div",null,u.a.createElement(B.a,{variant:"subtitle1"},"Selected: ",this.state.selectedValue),u.a.createElement("br",null),u.a.createElement(p.a,{onClick:this.handleClickOpen},"Open simple dialog"),u.a.createElement(q,{selectedValue:this.state.selectedValue,open:this.state.open,onClose:this.handleClose}))}}]),t}(u.a.Component);t.default=F},2183:function(e,t,n){"use strict";var a=n(1725);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n(0)),l=(0,a(n(1726)).default)(o.default.createElement(o.default.Fragment,null,o.default.createElement("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),o.default.createElement("path",{fill:"none",d:"M0 0h24v24H0z"})),"Person");t.default=l},2184:function(e,t){e.exports="/* eslint-disable react/no-multi-comp */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst styles = {\n    avatar: {\n        backgroundColor: blue[100],\n        color          : blue[600]\n    }\n};\n\nclass SimpleDialog extends React.Component {\n    handleClose = () => {\n        this.props.onClose(this.props.selectedValue);\n    };\n\n    handleListItemClick = value => {\n        this.props.onClose(value);\n    };\n\n    render()\n    {\n        const {classes, onClose, selectedValue, ...other} = this.props;\n\n        return (\n            <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n                <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n                <div>\n                    <List>\n                        {emails.map(email => (\n                            <ListItem button onClick={() => this.handleListItemClick(email)} key={email}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <PersonIcon/>\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={email}/>\n                            </ListItem>\n                        ))}\n                        <ListItem button onClick={() => this.handleListItemClick('addAccount')}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <AddIcon/>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"add account\"/>\n                        </ListItem>\n                    </List>\n                </div>\n            </Dialog>\n        );\n    }\n}\n\nSimpleDialog.propTypes = {\n    classes      : PropTypes.object.isRequired,\n    onClose      : PropTypes.func,\n    selectedValue: PropTypes.string\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n    state = {\n        open         : false,\n        selectedValue: emails[1]\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    };\n\n    handleClose = value => {\n        this.setState({\n            selectedValue: value,\n            open         : false\n        });\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Typography variant=\"subtitle1\">Selected: {this.state.selectedValue}</Typography>\n                <br/>\n                <Button onClick={this.handleClickOpen}>Open simple dialog</Button>\n                <SimpleDialogWrapped\n                    selectedValue={this.state.selectedValue}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SimpleDialogDemo;\n"},2185:function(e,t,n){"use strict";n.r(t);var a=n(10),o=n(11),l=n(13),i=n(12),r=n(14),s=n(0),c=n.n(s),u=n(233),m=n.n(u),d=n(482),p=n.n(d),h=n(486),f=n.n(h),g=n(487),b=n.n(g),v=n(496),C=n.n(v),y=n(484),D=n.n(y),E=function(e){function t(){var e,n;Object(a.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={open:!1},n.handleClickOpen=function(){n.setState({open:!0})},n.handleClose=function(){n.setState({open:!1})},n}return Object(r.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return c.a.createElement("div",null,c.a.createElement(m.a,{onClick:this.handleClickOpen},"Open alert dialog"),c.a.createElement(p.a,{open:this.state.open,onClose:this.handleClose,"aria-labelledby":"alert-dialog-title","aria-describedby":"alert-dialog-description"},c.a.createElement(D.a,{id:"alert-dialog-title"},"Use Google's location service?"),c.a.createElement(b.a,null,c.a.createElement(C.a,{id:"alert-dialog-description"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),c.a.createElement(f.a,null,c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Disagree"),c.a.createElement(m.a,{onClick:this.handleClose,color:"primary",autoFocus:!0},"Agree"))))}}]),t}(c.a.Component);t.default=E},2186:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass AlertDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open alert dialog</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Let Google help apps determine location. This means sending anonymous location data to\n                            Google, even when no apps are running.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Disagree\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AlertDialog;\n"},2187:function(e,t,n){"use strict";n.r(t);var a=n(10),o=n(11),l=n(13),i=n(12),r=n(14),s=n(0),c=n.n(s),u=n(233),m=n.n(u),d=n(482),p=n.n(d),h=n(486),f=n.n(h),g=n(487),b=n.n(g),v=n(496),C=n.n(v),y=n(484),D=n.n(y),E=n(238),x=n.n(E);function k(e){return c.a.createElement(x.a,Object.assign({direction:"up"},e))}var T=function(e){function t(){var e,n;Object(a.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={open:!1},n.handleClickOpen=function(){n.setState({open:!0})},n.handleClose=function(){n.setState({open:!1})},n}return Object(r.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return c.a.createElement("div",null,c.a.createElement(m.a,{onClick:this.handleClickOpen},"Slide in alert dialog"),c.a.createElement(p.a,{open:this.state.open,TransitionComponent:k,keepMounted:!0,onClose:this.handleClose,"aria-labelledby":"alert-dialog-slide-title","aria-describedby":"alert-dialog-slide-description"},c.a.createElement(D.a,{id:"alert-dialog-slide-title"},"Use Google's location service?"),c.a.createElement(b.a,null,c.a.createElement(C.a,{id:"alert-dialog-slide-description"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),c.a.createElement(f.a,null,c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Disagree"),c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Agree"))))}}]),t}(c.a.Component);t.default=T},2188:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props)\n{\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass AlertDialogSlide extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Slide in alert dialog</Button>\n                <Dialog\n                    open={this.state.open}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Use Google's location service?\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Let Google help apps determine location. This means sending anonymous location data to\n                            Google, even when no apps are running.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Disagree\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AlertDialogSlide;\n"},2189:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return k});var a=n(10),o=n(11),l=n(13),i=n(12),r=n(14),s=n(0),c=n.n(s),u=n(233),m=n.n(u),d=n(473),p=n.n(d),h=n(482),f=n.n(h),g=n(486),b=n.n(g),v=n(487),C=n.n(v),y=n(496),D=n.n(y),E=n(484),x=n.n(E),k=function(e){function t(){var e,n;Object(a.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={open:!1},n.handleClickOpen=function(){n.setState({open:!0})},n.handleClose=function(){n.setState({open:!1})},n}return Object(r.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return c.a.createElement("div",null,c.a.createElement(m.a,{onClick:this.handleClickOpen},"Open form dialog"),c.a.createElement(f.a,{open:this.state.open,onClose:this.handleClose,"aria-labelledby":"form-dialog-title"},c.a.createElement(x.a,{id:"form-dialog-title"},"Subscribe"),c.a.createElement(C.a,null,c.a.createElement(D.a,null,"To subscribe to this website, please enter your email address here. We will send updates occasionally."),c.a.createElement(p.a,{autoFocus:!0,margin:"dense",id:"name",label:"Email Address",type:"email",fullWidth:!0})),c.a.createElement(b.a,null,c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Cancel"),c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Subscribe"))))}}]),t}(c.a.Component)},2190:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class FormDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open form dialog</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            To subscribe to this website, please enter your email address here. We will send\n                            updates occasionally.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Email Address\"\n                            type=\"email\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Subscribe\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n"},2191:function(e,t,n){"use strict";n.r(t);var a=n(10),o=n(11),l=n(13),i=n(12),r=n(14),s=n(0),c=n.n(s),u=n(15),m=n(233),d=n.n(m),p=n(482),h=n.n(p),f=n(471),g=n.n(f),b=n(316),v=n.n(b),C=n(315),y=n.n(C),D=n(474),E=n.n(D),x=n(472),k=n.n(x),T=n(318),O=n.n(T),S=n(202),w=n.n(S),A=n(93),j=n.n(A),I=n(1774),L=n.n(I),B=n(238),N=n.n(B);function P(e){return c.a.createElement(N.a,Object.assign({direction:"up"},e))}var M=function(e){function t(){var e,n;Object(a.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={open:!1},n.handleClickOpen=function(){n.setState({open:!0})},n.handleClose=function(){n.setState({open:!1})},n}return Object(r.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("div",null,c.a.createElement(d.a,{onClick:this.handleClickOpen},"Open full-screen dialog"),c.a.createElement(h.a,{fullScreen:!0,open:this.state.open,onClose:this.handleClose,TransitionComponent:P},c.a.createElement(k.a,{className:e.appBar},c.a.createElement(O.a,null,c.a.createElement(w.a,{color:"inherit",onClick:this.handleClose,"aria-label":"Close"},c.a.createElement(L.a,null)),c.a.createElement(j.a,{variant:"h6",color:"inherit",className:e.flex},"Sound"),c.a.createElement(d.a,{color:"inherit",onClick:this.handleClose},"save"))),c.a.createElement(y.a,null,c.a.createElement(v.a,{button:!0},c.a.createElement(g.a,{primary:"Phone ringtone",secondary:"Titania"})),c.a.createElement(E.a,null),c.a.createElement(v.a,{button:!0},c.a.createElement(g.a,{primary:"Default notification ringtone",secondary:"Tethys"})))))}}]),t}(c.a.Component);t.default=Object(u.withStyles)({appBar:{position:"relative"},flex:{flex:1}})(M)},2192:function(e,t){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nconst styles = {\n    appBar: {\n        position: 'relative'\n    },\n    flex  : {\n        flex: 1\n    }\n};\n\nfunction Transition(props)\n{\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass FullScreenDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open full-screen dialog</Button>\n                <Dialog\n                    fullScreen\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    TransitionComponent={Transition}\n                >\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                                <CloseIcon/>\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                Sound\n                            </Typography>\n                            <Button color=\"inherit\" onClick={this.handleClose}>\n                                save\n                            </Button>\n                        </Toolbar>\n                    </AppBar>\n                    <List>\n                        <ListItem button>\n                            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\"/>\n                        </ListItem>\n                        <Divider/>\n                        <ListItem button>\n                            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\n                        </ListItem>\n                    </List>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nFullScreenDialog.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FullScreenDialog);\n"},2193:function(e,t,n){"use strict";n.r(t);var a=n(10),o=n(11),l=n(13),i=n(12),r=n(14),s=n(0),c=n.n(s),u=n(15),m=n(233),d=n.n(m),p=n(482),h=n.n(p),f=n(486),g=n.n(f),b=n(487),v=n.n(b),C=n(496),y=n.n(C),D=n(484),E=n.n(D),x=n(319),k=n.n(x),T=n(479),O=n.n(T),S=n(320),w=n.n(S),A=n(317),j=n.n(A),I=n(236),L=n.n(I),B=n(489),N=n.n(B),P=function(e){function t(){var e,n;Object(a.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={open:!1,fullWidth:!0,maxWidth:"sm"},n.handleClickOpen=function(){n.setState({open:!0})},n.handleClose=function(){n.setState({open:!1})},n.handleMaxWidthChange=function(e){n.setState({maxWidth:e.target.value})},n.handleFullWidthChange=function(e){n.setState({fullWidth:e.target.checked})},n}return Object(r.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement(c.a.Fragment,null,c.a.createElement(d.a,{onClick:this.handleClickOpen},"Open max-width dialog"),c.a.createElement(h.a,{fullWidth:this.state.fullWidth,maxWidth:this.state.maxWidth,open:this.state.open,onClose:this.handleClose,"aria-labelledby":"max-width-dialog-title"},c.a.createElement(E.a,{id:"max-width-dialog-title"},"Optional sizes"),c.a.createElement(v.a,null,c.a.createElement(y.a,null,"You can set my maximum width and whether to adapt or not."),c.a.createElement("form",{className:e.form,noValidate:!0},c.a.createElement(k.a,{className:e.formControl},c.a.createElement(w.a,{htmlFor:"max-width"},"maxWidth"),c.a.createElement(L.a,{value:this.state.maxWidth,onChange:this.handleMaxWidthChange,inputProps:{name:"max-width",id:"max-width"}},c.a.createElement(j.a,{value:!1},"false"),c.a.createElement(j.a,{value:"xs"},"xs"),c.a.createElement(j.a,{value:"sm"},"sm"),c.a.createElement(j.a,{value:"md"},"md"),c.a.createElement(j.a,{value:"lg"},"lg"),c.a.createElement(j.a,{value:"xl"},"xl"))),c.a.createElement(O.a,{className:e.formControlLabel,control:c.a.createElement(N.a,{checked:this.state.fullWidth,onChange:this.handleFullWidthChange,value:"fullWidth"}),label:"Full width"}))),c.a.createElement(g.a,null,c.a.createElement(d.a,{onClick:this.handleClose,color:"primary"},"Close"))))}}]),t}(c.a.Component);t.default=Object(u.withStyles)(function(e){return{form:{display:"flex",flexDirection:"column",margin:"auto",width:"fit-content"},formControl:{marginTop:2*e.spacing.unit,minWidth:120},formControlLabel:{marginTop:e.spacing.unit}}})(P)},2194:function(e,t){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n    form            : {\n        display      : 'flex',\n        flexDirection: 'column',\n        margin       : 'auto',\n        width        : 'fit-content'\n    },\n    formControl     : {\n        marginTop: theme.spacing.unit * 2,\n        minWidth : 120\n    },\n    formControlLabel: {\n        marginTop: theme.spacing.unit\n    }\n});\n\nclass FullScreenDialog extends React.Component {\n    state = {\n        open     : false,\n        fullWidth: true,\n        maxWidth : 'sm'\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    handleMaxWidthChange = event => {\n        this.setState({maxWidth: event.target.value});\n    };\n\n    handleFullWidthChange = event => {\n        this.setState({fullWidth: event.target.checked});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <React.Fragment>\n                <Button onClick={this.handleClickOpen}>Open max-width dialog</Button>\n                <Dialog\n                    fullWidth={this.state.fullWidth}\n                    maxWidth={this.state.maxWidth}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            You can set my maximum width and whether to adapt or not.\n                        </DialogContentText>\n                        <form className={classes.form} noValidate>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n                                <Select\n                                    value={this.state.maxWidth}\n                                    onChange={this.handleMaxWidthChange}\n                                    inputProps={{\n                                        name: 'max-width',\n                                        id  : 'max-width'\n                                    }}\n                                >\n                                    <MenuItem value={false}>false</MenuItem>\n                                    <MenuItem value=\"xs\">xs</MenuItem>\n                                    <MenuItem value=\"sm\">sm</MenuItem>\n                                    <MenuItem value=\"md\">md</MenuItem>\n                                    <MenuItem value=\"lg\">lg</MenuItem>\n                                    <MenuItem value=\"xl\">xl</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControlLabel\n                                className={classes.formControlLabel}\n                                control={\n                                    <Switch\n                                        checked={this.state.fullWidth}\n                                        onChange={this.handleFullWidthChange}\n                                        value=\"fullWidth\"\n                                    />\n                                }\n                                label=\"Full width\"\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nFullScreenDialog.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FullScreenDialog);\n"},2195:function(e,t,n){"use strict";n.r(t);var a=n(10),o=n(11),l=n(13),i=n(12),r=n(14),s=n(0),c=n.n(s),u=n(233),m=n.n(u),d=n(482),p=n.n(d),h=n(486),f=n.n(h),g=n(487),b=n.n(g),v=n(496),C=n.n(v),y=n(484),D=n.n(y),E=n(788),x=n.n(E),k=function(e){function t(){var e,n;Object(a.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={open:!1},n.handleClickOpen=function(){n.setState({open:!0})},n.handleClose=function(){n.setState({open:!1})},n}return Object(r.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this.props.fullScreen;return c.a.createElement("div",null,c.a.createElement(m.a,{onClick:this.handleClickOpen},"Open responsive dialog"),c.a.createElement(p.a,{fullScreen:e,open:this.state.open,onClose:this.handleClose,"aria-labelledby":"responsive-dialog-title"},c.a.createElement(D.a,{id:"responsive-dialog-title"},"Use Google's location service?"),c.a.createElement(b.a,null,c.a.createElement(C.a,null,"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),c.a.createElement(f.a,null,c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Disagree"),c.a.createElement(m.a,{onClick:this.handleClose,color:"primary",autoFocus:!0},"Agree"))))}}]),t}(c.a.Component);t.default=x()()(k)},2196:function(e,t,n){"use strict";var a=n(334),o=n(4);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=o(n(8)),i=o(n(0)),r=(o(n(2)),a(n(339))),s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(t){var n=e.breakpoint,a=void 0===n?"sm":n;function o(e){return i.default.createElement(t,(0,l.default)({fullScreen:(0,r.isWidthDown)(a,e.width)},e))}return o.propTypes={},(0,r.default)()(o)}};t.default=s},2197:function(e,t){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nclass ResponsiveDialog extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        const {fullScreen} = this.props;\n\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open responsive dialog</Button>\n                <Dialog\n                    fullScreen={fullScreen}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"responsive-dialog-title\"\n                >\n                    <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Let Google help apps determine location. This means sending anonymous location data to\n                            Google, even when no apps are running.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Disagree\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                            Agree\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nResponsiveDialog.propTypes = {\n    fullScreen: PropTypes.bool.isRequired\n};\n\nexport default withMobileDialog()(ResponsiveDialog);\n"},2198:function(e,t,n){"use strict";n.r(t);var a=n(234),o=n(10),l=n(11),i=n(13),r=n(12),s=n(14),c=n(0),u=n.n(c),m=n(15),d=n(233),p=n.n(d),h=n(315),f=n.n(h),g=n(316),b=n.n(g),v=n(471),C=n.n(v),y=n(484),D=n.n(y),E=n(487),x=n.n(E),k=n(486),T=n.n(k),O=n(482),S=n.n(O),w=n(511),A=n.n(w),j=n(503),I=n.n(j),L=n(479),B=n.n(L),N=["None","Atria","Callisto","Dione","Ganymede","Hangouts Call","Luna","Oberon","Phobos","Pyxis","Sedna","Titania","Triton","Umbriel"],P=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(i.a)(this,Object(r.a)(t).call(this))).handleEntering=function(){n.radioGroupRef.focus()},n.handleCancel=function(){n.props.onClose(n.props.value)},n.handleOk=function(){n.props.onClose(n.state.value)},n.handleChange=function(e,t){n.setState({value:t})},n.state={value:e.value},n}return Object(s.a)(t,e),Object(l.a)(t,[{key:"componentWillReceiveProps",value:function(e){e.value!==this.props.value&&this.setState({value:e.value})}},{key:"render",value:function(){var e=this,t=this.props,n=(t.value,Object(a.a)(t,["value"]));return u.a.createElement(S.a,Object.assign({disableBackdropClick:!0,disableEscapeKeyDown:!0,maxWidth:"xs",onEntering:this.handleEntering,"aria-labelledby":"confirmation-dialog-title"},n),u.a.createElement(D.a,{id:"confirmation-dialog-title"},"Phone Ringtone"),u.a.createElement(x.a,null,u.a.createElement(A.a,{ref:function(t){e.radioGroupRef=t},"aria-label":"Ringtone",name:"ringtone",value:this.state.value,onChange:this.handleChange},N.map(function(e){return u.a.createElement(B.a,{value:e,key:e,control:u.a.createElement(I.a,null),label:e})}))),u.a.createElement(T.a,null,u.a.createElement(p.a,{onClick:this.handleCancel,color:"primary"},"Cancel"),u.a.createElement(p.a,{onClick:this.handleOk,color:"primary"},"Ok")))}}]),t}(u.a.Component),M=function(e){function t(){var e,n;Object(o.a)(this,t);for(var a=arguments.length,l=new Array(a),s=0;s<a;s++)l[s]=arguments[s];return(n=Object(i.a)(this,(e=Object(r.a)(t)).call.apply(e,[this].concat(l)))).state={open:!1,value:"Dione"},n.handleClickListItem=function(){n.setState({open:!0})},n.handleClose=function(e){n.setState({value:e,open:!1})},n}return Object(s.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.props.classes;return u.a.createElement("div",{className:e.root},u.a.createElement(f.a,null,u.a.createElement(b.a,{button:!0,divider:!0,disabled:!0},u.a.createElement(C.a,{primary:"Interruptions"})),u.a.createElement(b.a,{button:!0,divider:!0,"aria-haspopup":"true","aria-controls":"ringtone-menu","aria-label":"Phone ringtone",onClick:this.handleClickListItem},u.a.createElement(C.a,{primary:"Phone ringtone",secondary:this.state.value})),u.a.createElement(b.a,{button:!0,divider:!0,disabled:!0},u.a.createElement(C.a,{primary:"Default notification ringtone",secondary:"Tethys"})),u.a.createElement(P,{classes:{paper:e.paper},open:this.state.open,onClose:this.handleClose,value:this.state.value})))}}]),t}(u.a.Component);t.default=Object(m.withStyles)(function(e){return{root:{width:"100%",maxWidth:360,backgroundColor:e.palette.background.paper},paper:{width:"80%",maxHeight:435}}})(M)},2199:function(e,t){e.exports="/* eslint-disable react/no-multi-comp */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst options = [\n    'None',\n    'Atria',\n    'Callisto',\n    'Dione',\n    'Ganymede',\n    'Hangouts Call',\n    'Luna',\n    'Oberon',\n    'Phobos',\n    'Pyxis',\n    'Sedna',\n    'Titania',\n    'Triton',\n    'Umbriel'\n];\n\nclass ConfirmationDialogRaw extends React.Component {\n    constructor(props)\n    {\n        super();\n        this.state = {\n            value: props.value\n        };\n    }\n\n    // TODO\n    componentWillReceiveProps(nextProps)\n    {\n        if ( nextProps.value !== this.props.value )\n        {\n            this.setState({value: nextProps.value});\n        }\n    }\n\n    handleEntering = () => {\n        this.radioGroupRef.focus();\n    };\n\n    handleCancel = () => {\n        this.props.onClose(this.props.value);\n    };\n\n    handleOk = () => {\n        this.props.onClose(this.state.value);\n    };\n\n    handleChange = (event, value) => {\n        this.setState({value});\n    };\n\n    render()\n    {\n        const {value, ...other} = this.props;\n\n        return (\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                maxWidth=\"xs\"\n                onEntering={this.handleEntering}\n                aria-labelledby=\"confirmation-dialog-title\"\n                {...other}\n            >\n                <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n                <DialogContent>\n                    <RadioGroup\n                        ref={ref => {\n                            this.radioGroupRef = ref;\n                        }}\n                        aria-label=\"Ringtone\"\n                        name=\"ringtone\"\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    >\n                        {options.map(option => (\n                            <FormControlLabel value={option} key={option} control={<Radio/>} label={option}/>\n                        ))}\n                    </RadioGroup>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={this.handleOk} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nConfirmationDialogRaw.propTypes = {\n    onClose: PropTypes.func,\n    value  : PropTypes.string\n};\n\nconst styles = theme => ({\n    root : {\n        width          : '100%',\n        maxWidth       : 360,\n        backgroundColor: theme.palette.background.paper\n    },\n    paper: {\n        width    : '80%',\n        maxHeight: 435\n    }\n});\n\nclass ConfirmationDialog extends React.Component {\n    state = {\n        open : false,\n        value: 'Dione'\n    };\n\n    handleClickListItem = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = value => {\n        this.setState({\n            value,\n            open: false\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <List>\n                    <ListItem button divider disabled>\n                        <ListItemText primary=\"Interruptions\"/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        divider\n                        aria-haspopup=\"true\"\n                        aria-controls=\"ringtone-menu\"\n                        aria-label=\"Phone ringtone\"\n                        onClick={this.handleClickListItem}\n                    >\n                        <ListItemText primary=\"Phone ringtone\" secondary={this.state.value}/>\n                    </ListItem>\n                    <ListItem button divider disabled>\n                        <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\n                    </ListItem>\n                    <ConfirmationDialogRaw\n                        classes={{\n                            paper: classes.paper\n                        }}\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        value={this.state.value}\n                    />\n                </List>\n            </div>\n        );\n    }\n}\n\nConfirmationDialog.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ConfirmationDialog);\n"},2200:function(e,t,n){"use strict";n.r(t);var a=n(10),o=n(11),l=n(13),i=n(12),r=n(14),s=n(0),c=n.n(s),u=n(233),m=n.n(u),d=n(482),p=n.n(d),h=n(486),f=n.n(h),g=n(487),b=n.n(g),v=n(496),C=n.n(v),y=n(484),D=n.n(y),E=function(e){function t(){var e,n;Object(a.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(l.a)(this,(e=Object(i.a)(t)).call.apply(e,[this].concat(r)))).state={open:!1,scroll:"paper"},n.handleClickOpen=function(e){return function(){n.setState({open:!0,scroll:e})}},n.handleClose=function(){n.setState({open:!1})},n}return Object(r.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return c.a.createElement("div",null,c.a.createElement(m.a,{onClick:this.handleClickOpen("paper")},"scroll=paper"),c.a.createElement(m.a,{onClick:this.handleClickOpen("body")},"scroll=body"),c.a.createElement(p.a,{open:this.state.open,onClose:this.handleClose,scroll:this.state.scroll,"aria-labelledby":"scroll-dialog-title"},c.a.createElement(D.a,{id:"scroll-dialog-title"},"Subscribe"),c.a.createElement(b.a,null,c.a.createElement(C.a,null,"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.")),c.a.createElement(f.a,null,c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Cancel"),c.a.createElement(m.a,{onClick:this.handleClose,color:"primary"},"Subscribe"))))}}]),t}(c.a.Component);t.default=E},2201:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass ScrollDialog extends React.Component {\n    state = {\n        open  : false,\n        scroll: 'paper'\n    };\n\n    handleClickOpen = scroll => () => {\n        this.setState({\n            open: true,\n            scroll\n        });\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen('paper')}>scroll=paper</Button>\n                <Button onClick={this.handleClickOpen('body')}>scroll=body</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    scroll={this.state.scroll}\n                    aria-labelledby=\"scroll-dialog-title\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                            facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\n                            at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus\n                            sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum\n                            nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur\n                            et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras\n                            mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. Cras mattis\n                            consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                            lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla\n                            sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n                            Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Subscribe\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default ScrollDialog;\n"},2620:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),l=n(3),i=n(1),r=n(15);t.default=Object(r.withStyles)(function(e){return{layoutRoot:{"& .description":{marginBottom:16}}}},{withTheme:!0})(function(e){var t=e.classes;return o.a.createElement(l.s,{classes:{root:t.layoutRoot},header:o.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},o.a.createElement(i.vb,{variant:"h6"},"Dialogs"),o.a.createElement(i.c,{className:"normal-case",variant:"contained",component:"a",href:"https://material-ui-next.com/demos/dialogs",target:"_blank"},o.a.createElement(i.H,{className:"mr-4"},"link"),"Reference")),content:o.a.createElement("div",{className:"p-24 max-w-2xl mx-auto"},o.a.createElement(i.vb,{className:"text-44 mt-32 mb-8",component:"h1"},"Dialogs"),o.a.createElement(i.vb,{className:"description"},"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"A ",o.a.createElement("a",{href:"https://material.io/design/components/dialogs.html"},"Dialog")," is a type of ",o.a.createElement("a",{href:"/utils/modal/"},"modal")," window that appears in front of app content to provide critical information or ask for a decision. Dialogs disable all app functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Dialogs are purposefully interruptive, so they should be used sparingly."),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Simple Dialogs"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Simple dialogs can provide additional details or actions about a list item. For example, they can display avatars, icons, clarifying subtext, or orthogonal actions (such as adding an account)."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Touch mechanics:"),o.a.createElement("ul",null,o.a.createElement("li",null,"Choosing an option immediately commits the option and closes the menu"),o.a.createElement("li",null,"Touching outside of the dialog, or pressing Back, cancels the action and closes the dialog")),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2182).default,raw:n(2184)})),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Alerts"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Most alerts don't need titles. They summarize a decision in a sentence or two by either:"),o.a.createElement("ul",null,o.a.createElement("li",null,'Asking a question (e.g. "Delete this conversation?")'),o.a.createElement("li",null,"Making a statement related to the action buttons")),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Use title bar alerts only for high-risk situations, such as the potential loss of connectivity. Users should be able to understand the choices based on the title and button text alone."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"If a title is required:"),o.a.createElement("ul",null,o.a.createElement("li",null,'Use a clear question or statement with an explanation in the content area, such as "Erase USB storage?".'),o.a.createElement("li",null,"Avoid apologies, ambiguity, or questions, such as \u201cWarning!\u201d or \u201cAre you sure?\u201d")),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2185).default,raw:n(2186)})),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"You can also swap out the transition, the next example uses ",o.a.createElement("code",null,"Slide"),"."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2187).default,raw:n(2188)})),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Form dialogs"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Form dialogs allow users to fill out form fields within a dialog. For example, if your site prompts for potential subscribers to fill in their email address, they can fill out the email field and touch 'Submit'"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2189).default,raw:n(2190)})),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Full-screen dialogs"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2191).default,raw:n(2192)})),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Optional sizes"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"You can set a dialog maximum width by using the ",o.a.createElement("code",null,"maxWidth")," enumerable in combination with the ",o.a.createElement("code",null,"fullWidth")," boolean. When the ",o.a.createElement("code",null,"fullWidth")," property is true, the dialog will adapt based on the ",o.a.createElement("code",null,"maxWidth")," value."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2193).default,raw:n(2194)})),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Responsive full-screen"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"You may make a dialog responsively full screen the dialog using ",o.a.createElement("code",null,"withMobileDialog"),". By default, ",o.a.createElement("code",null,"withMobileDialog()(Dialog)")," responsively full screens ",o.a.createElement("em",null,"at or below")," the ",o.a.createElement("code",null,"sm")," ",o.a.createElement("a",{href:"/layout/basics/"},"screen size"),". You can choose your own breakpoint for example ",o.a.createElement("code",null,"xs")," by passing the ",o.a.createElement("code",null,"breakpoint")," argument: ",o.a.createElement("code",null,"withMobileDialog(","{breakpoint: 'xs'}",")(Dialog)"),"."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2195).default,raw:n(2197)})),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Confirmation dialogs"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Confirmation dialogs require users to explicitly confirm their choice before an option is committed. For example, users can listen to multiple ringtones but only make a final selection upon touching \u201cOK.\u201d"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Touching \u201cCancel\u201d in a confirmation dialog, or pressing Back, cancels the action, discards any changes, and closes the dialog."),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2198).default,raw:n(2199)})),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Accessibility"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Be sure to add ",o.a.createElement("code",null,'aria-labelledby="id..."'),", referencing the modal title, to the ",o.a.createElement("code",null,"Dialog"),". Additionally, you may give a description of your modal dialog with the ",o.a.createElement("code",null,'aria-describedby="id..."')," property on the ",o.a.createElement("code",null,"Dialog"),"."),o.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Scrolling long content"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"When dialogs become too long for the user\u2019s viewport or device, they scroll."),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement("code",null,"scroll=paper")," the content of the dialog scrolls within the paper element."),o.a.createElement("li",null,o.a.createElement("code",null,"scroll=body")," the content of the dialog scrolls within the body element.")),o.a.createElement(i.vb,{className:"mb-16",component:"div"},"Try the demo below to see what we mean:"),o.a.createElement(i.vb,{className:"mb-16",component:"div"},o.a.createElement(l.k,{className:"my-24",iframe:!1,component:n(2200).default,raw:n(2201)})))})})},772:function(e,t,n){"use strict";var a=n(4);Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return o.default}});var o=a(n(1822))},788:function(e,t,n){"use strict";var a=n(4);Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return o.default}});var o=a(n(2196))}}]);
//# sourceMappingURL=92.3824c886.chunk.js.map