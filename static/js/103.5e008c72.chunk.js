(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{2359:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(10),o=t(11),r=t(13),m=t(12),i=t(14),s=t(0),c=t.n(s),u=t(44),p=t.n(u),h=t(15),v=t(203),d=t.n(v),g=t(331),E=t.n(g),C=t(330),f=t.n(C),y=t(320),b=t.n(y),I=t(317),T=t.n(I),N=t(322),M=t.n(N),F=t(319),S=t.n(F),x=t(236),w=t.n(x),O=function(e){function n(){var e,t;Object(l.a)(this,n);for(var o=arguments.length,i=new Array(o),s=0;s<o;s++)i[s]=arguments[s];return(t=Object(r.a)(this,(e=Object(m.a)(n)).call.apply(e,[this].concat(i)))).state={age:"",name:"hai",labelWidth:0},t.handleChange=function(e){t.setState(Object(a.a)({},e.target.name,e.target.value))},t}return Object(i.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){this.setState({labelWidth:p.a.findDOMNode(this.InputLabelRef).offsetWidth})}},{key:"render",value:function(){var e=this,n=this.props.classes;return c.a.createElement("form",{className:n.root,autoComplete:"off"},c.a.createElement(S.a,{className:n.formControl},c.a.createElement(b.a,{htmlFor:"age-simple"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,inputProps:{name:"age",id:"age-simple"}},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty"))),c.a.createElement(S.a,{className:n.formControl},c.a.createElement(b.a,{htmlFor:"age-helper"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,input:c.a.createElement(d.a,{name:"age",id:"age-helper"})},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty")),c.a.createElement(M.a,null,"Some important helper text")),c.a.createElement(S.a,{className:n.formControl},c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,displayEmpty:!0,name:"age",className:n.selectEmpty},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty")),c.a.createElement(M.a,null,"Without label")),c.a.createElement(S.a,{className:n.formControl},c.a.createElement(b.a,{shrink:!0,htmlFor:"age-label-placeholder"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,input:c.a.createElement(d.a,{name:"age",id:"age-label-placeholder"}),displayEmpty:!0,name:"age",className:n.selectEmpty},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty")),c.a.createElement(M.a,null,"Label + placeholder")),c.a.createElement(S.a,{className:n.formControl,disabled:!0},c.a.createElement(b.a,{htmlFor:"name-disabled"},"Name"),c.a.createElement(w.a,{value:this.state.name,onChange:this.handleChange,input:c.a.createElement(d.a,{name:"name",id:"name-disabled"})},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:"hai"},"Hai"),c.a.createElement(T.a,{value:"olivier"},"Olivier"),c.a.createElement(T.a,{value:"kevin"},"Kevin")),c.a.createElement(M.a,null,"Disabled")),c.a.createElement(S.a,{className:n.formControl,error:!0},c.a.createElement(b.a,{htmlFor:"name-error"},"Name"),c.a.createElement(w.a,{value:this.state.name,onChange:this.handleChange,name:"name",renderValue:function(e){return"\u26a0\ufe0f  - ".concat(e)},input:c.a.createElement(d.a,{id:"name-error"})},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:"hai"},"Hai"),c.a.createElement(T.a,{value:"olivier"},"Olivier"),c.a.createElement(T.a,{value:"kevin"},"Kevin")),c.a.createElement(M.a,null,"Error")),c.a.createElement(S.a,{className:n.formControl},c.a.createElement(b.a,{htmlFor:"name-readonly"},"Name"),c.a.createElement(w.a,{value:this.state.name,onChange:this.handleChange,input:c.a.createElement(d.a,{name:"name",id:"name-readonly",readOnly:!0})},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:"hai"},"Hai"),c.a.createElement(T.a,{value:"olivier"},"Olivier"),c.a.createElement(T.a,{value:"kevin"},"Kevin")),c.a.createElement(M.a,null,"Read only")),c.a.createElement(S.a,{className:n.formControl},c.a.createElement(b.a,{htmlFor:"age-auto-width"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,input:c.a.createElement(d.a,{name:"age",id:"age-auto-width"}),autoWidth:!0},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty")),c.a.createElement(M.a,null,"Auto width")),c.a.createElement(S.a,{className:n.formControl},c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,name:"age",displayEmpty:!0,className:n.selectEmpty},c.a.createElement(T.a,{value:"",disabled:!0},"Placeholder"),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty")),c.a.createElement(M.a,null,"Placeholder")),c.a.createElement(S.a,{required:!0,className:n.formControl},c.a.createElement(b.a,{htmlFor:"age-required"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,name:"age",inputProps:{id:"age-required"},className:n.selectEmpty},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty")),c.a.createElement(M.a,null,"Required")),c.a.createElement(S.a,{variant:"outlined",className:n.formControl},c.a.createElement(b.a,{ref:function(n){e.InputLabelRef=n},htmlFor:"outlined-age-simple"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,input:c.a.createElement(E.a,{labelWidth:this.state.labelWidth,name:"age",id:"outlined-age-simple"})},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty"))),c.a.createElement(S.a,{variant:"filled",className:n.formControl},c.a.createElement(b.a,{htmlFor:"filled-age-simple"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange,input:c.a.createElement(f.a,{name:"age",id:"filled-age-simple"})},c.a.createElement(T.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(T.a,{value:10},"Ten"),c.a.createElement(T.a,{value:20},"Twenty"),c.a.createElement(T.a,{value:30},"Thirty"))))}}]),n}(c.a.Component);n.default=Object(h.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit,minWidth:120},selectEmpty:{marginTop:2*e.spacing.unit}}})(O)},2360:function(e,n){e.exports='import React from \'react\';\nimport ReactDOM from \'react-dom\';\nimport PropTypes from \'prop-types\';\nimport {withStyles} from \'@material-ui/core/styles\';\nimport Input from \'@material-ui/core/Input\';\nimport OutlinedInput from \'@material-ui/core/OutlinedInput\';\nimport FilledInput from \'@material-ui/core/FilledInput\';\nimport InputLabel from \'@material-ui/core/InputLabel\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport Select from \'@material-ui/core/Select\';\n\nconst styles = theme => ({\n    root       : {\n        display : \'flex\',\n        flexWrap: \'wrap\'\n    },\n    formControl: {\n        margin  : theme.spacing.unit,\n        minWidth: 120\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2\n    }\n});\n\nclass SimpleSelect extends React.Component {\n    state = {\n        age       : \'\',\n        name      : \'hai\',\n        labelWidth: 0\n    };\n\n    componentDidMount()\n    {\n        this.setState({\n            labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth\n        });\n    }\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <form className={classes.root} autoComplete="off">\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor="age-simple">Age</InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        inputProps={{\n                            name: \'age\',\n                            id  : \'age-simple\'\n                        }}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor="age-helper">Age</InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        input={<Input name="age" id="age-helper"/>}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                    <FormHelperText>Some important helper text</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        displayEmpty\n                        name="age"\n                        className={classes.selectEmpty}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                    <FormHelperText>Without label</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel shrink htmlFor="age-label-placeholder">\n                        Age\n                    </InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        input={<Input name="age" id="age-label-placeholder"/>}\n                        displayEmpty\n                        name="age"\n                        className={classes.selectEmpty}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                    <FormHelperText>Label + placeholder</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl} disabled>\n                    <InputLabel htmlFor="name-disabled">Name</InputLabel>\n                    <Select\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        input={<Input name="name" id="name-disabled"/>}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value="hai">Hai</MenuItem>\n                        <MenuItem value="olivier">Olivier</MenuItem>\n                        <MenuItem value="kevin">Kevin</MenuItem>\n                    </Select>\n                    <FormHelperText>Disabled</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl} error>\n                    <InputLabel htmlFor="name-error">Name</InputLabel>\n                    <Select\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        name="name"\n                        renderValue={value => `\u26a0\ufe0f  - ${value}`}\n                        input={<Input id="name-error"/>}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value="hai">Hai</MenuItem>\n                        <MenuItem value="olivier">Olivier</MenuItem>\n                        <MenuItem value="kevin">Kevin</MenuItem>\n                    </Select>\n                    <FormHelperText>Error</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor="name-readonly">Name</InputLabel>\n                    <Select\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        input={<Input name="name" id="name-readonly" readOnly/>}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value="hai">Hai</MenuItem>\n                        <MenuItem value="olivier">Olivier</MenuItem>\n                        <MenuItem value="kevin">Kevin</MenuItem>\n                    </Select>\n                    <FormHelperText>Read only</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor="age-auto-width">Age</InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        input={<Input name="age" id="age-auto-width"/>}\n                        autoWidth\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                    <FormHelperText>Auto width</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        name="age"\n                        displayEmpty\n                        className={classes.selectEmpty}\n                    >\n                        <MenuItem value="" disabled>\n                            Placeholder\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                    <FormHelperText>Placeholder</FormHelperText>\n                </FormControl>\n                <FormControl required className={classes.formControl}>\n                    <InputLabel htmlFor="age-required">Age</InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        name="age"\n                        inputProps={{\n                            id: \'age-required\'\n                        }}\n                        className={classes.selectEmpty}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                    <FormHelperText>Required</FormHelperText>\n                </FormControl>\n                <FormControl variant="outlined" className={classes.formControl}>\n                    <InputLabel\n                        ref={ref => {\n                            this.InputLabelRef = ref;\n                        }}\n                        htmlFor="outlined-age-simple"\n                    >\n                        Age\n                    </InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        input={\n                            <OutlinedInput\n                                labelWidth={this.state.labelWidth}\n                                name="age"\n                                id="outlined-age-simple"\n                            />\n                        }\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl variant="filled" className={classes.formControl}>\n                    <InputLabel htmlFor="filled-age-simple">Age</InputLabel>\n                    <Select\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        input={<FilledInput name="age" id="filled-age-simple"/>}\n                    >\n                        <MenuItem value="">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                </FormControl>\n            </form>\n        );\n    }\n}\n\nSimpleSelect.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimpleSelect);\n'},2361:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(10),o=t(11),r=t(13),m=t(12),i=t(14),s=t(0),c=t.n(s),u=t(44),p=t.n(u),h=t(15),v=t(203),d=t.n(v),g=t(331),E=t.n(g),C=t(330),f=t.n(C),y=t(320),b=t.n(y),I=t(322),T=t.n(I),N=t(319),M=t.n(N),F=t(236),S=t.n(F),x=t(791),w=t.n(x),O=function(e){function n(){var e,t;Object(l.a)(this,n);for(var o=arguments.length,i=new Array(o),s=0;s<o;s++)i[s]=arguments[s];return(t=Object(r.a)(this,(e=Object(m.a)(n)).call.apply(e,[this].concat(i)))).state={age:"",name:"hai",labelWidth:0},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t}return Object(i.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){this.setState({labelWidth:p.a.findDOMNode(this.InputLabelRef).offsetWidth})}},{key:"render",value:function(){var e=this,n=this.props.classes;return c.a.createElement("div",{className:n.root},c.a.createElement(M.a,{className:n.formControl},c.a.createElement(b.a,{htmlFor:"age-native-simple"},"Age"),c.a.createElement(S.a,{native:!0,value:this.state.age,onChange:this.handleChange("age"),inputProps:{name:"age",id:"age-native-simple"}},c.a.createElement("option",{value:""}),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty"))),c.a.createElement(M.a,{className:n.formControl},c.a.createElement(b.a,{htmlFor:"age-native-helper"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange("age"),input:c.a.createElement(d.a,{name:"age",id:"age-native-helper"})},c.a.createElement("option",{value:""}),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty")),c.a.createElement(T.a,null,"Some important helper text")),c.a.createElement(M.a,{className:n.formControl},c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange("age"),name:"age",className:n.selectEmpty},c.a.createElement("option",{value:""},"None"),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty")),c.a.createElement(T.a,null,"Without label")),c.a.createElement(M.a,{className:n.formControl},c.a.createElement(b.a,{shrink:!0,htmlFor:"age-native-label-placeholder"},"Age"),c.a.createElement(w.a,{value:this.state.age,onChange:this.handleChange("age"),input:c.a.createElement(d.a,{name:"age",id:"age-native-label-placeholder"})},c.a.createElement("option",{value:""},"None"),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty")),c.a.createElement(T.a,null,"Label + placeholder")),c.a.createElement(M.a,{className:n.formControl,disabled:!0},c.a.createElement(b.a,{htmlFor:"name-native-disabled"},"Name"),c.a.createElement(w.a,{value:this.state.name,onChange:this.handleChange("name"),input:c.a.createElement(d.a,{name:"name",id:"name-native-disabled"})},c.a.createElement("option",{value:""}),c.a.createElement("optgroup",{label:"Author"},c.a.createElement("option",{value:"hai"},"Hai")),c.a.createElement("optgroup",{label:"Contributors"},c.a.createElement("option",{value:"olivier"},"Olivier"),c.a.createElement("option",{value:"kevin"},"Kevin"))),c.a.createElement(T.a,null,"Disabled")),c.a.createElement(M.a,{className:n.formControl,error:!0},c.a.createElement(b.a,{htmlFor:"name-native-error"},"Name"),c.a.createElement(w.a,{value:this.state.name,onChange:this.handleChange("name"),name:"name",input:c.a.createElement(d.a,{id:"name-native-error"})},c.a.createElement("option",{value:""}),c.a.createElement("optgroup",{label:"Author"},c.a.createElement("option",{value:"hai"},"Hai")),c.a.createElement("optgroup",{label:"Contributors"},c.a.createElement("option",{value:"olivier"},"Olivier"),c.a.createElement("option",{value:"kevin"},"Kevin"))),c.a.createElement(T.a,null,"Error")),c.a.createElement(M.a,{className:n.formControl},c.a.createElement(b.a,{htmlFor:"uncontrolled-native"},"Name"),c.a.createElement(w.a,{defaultValue:30,input:c.a.createElement(d.a,{name:"name",id:"uncontrolled-native"})},c.a.createElement("option",{value:""}),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty")),c.a.createElement(T.a,null,"Uncontrolled")),c.a.createElement(M.a,{className:n.formControl},c.a.createElement(w.a,{className:n.selectEmpty,value:this.state.age,name:"age",onChange:this.handleChange("age")},c.a.createElement("option",{value:"",disabled:!0},"Placeholder"),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty")),c.a.createElement(T.a,null,"Placeholder")),c.a.createElement(M.a,{required:!0,className:n.formControl},c.a.createElement(b.a,{htmlFor:"age-native-required"},"Age"),c.a.createElement(S.a,{native:!0,value:this.state.age,onChange:this.handleChange("age"),name:"age",inputProps:{id:"age-native-required"}},c.a.createElement("option",{value:""}),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty")),c.a.createElement(T.a,null,"Required")),c.a.createElement(M.a,{variant:"outlined",className:n.formControl},c.a.createElement(b.a,{ref:function(n){e.InputLabelRef=n},htmlFor:"outlined-age-native-simple"},"Age"),c.a.createElement(S.a,{native:!0,value:this.state.age,onChange:this.handleChange("age"),input:c.a.createElement(E.a,{name:"age",labelWidth:this.state.labelWidth,id:"outlined-age-native-simple"})},c.a.createElement("option",{value:""}),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty"))),c.a.createElement(M.a,{variant:"filled",className:n.formControl},c.a.createElement(b.a,{htmlFor:"filled-age-native-simple"},"Age"),c.a.createElement(S.a,{native:!0,value:this.state.age,onChange:this.handleChange("age"),input:c.a.createElement(f.a,{name:"age",id:"filled-age-native-simple"})},c.a.createElement("option",{value:""}),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty"))))}}]),n}(c.a.Component);n.default=Object(h.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit,minWidth:120},selectEmpty:{marginTop:2*e.spacing.unit}}})(O)},2362:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport ReactDOM from \'react-dom\';\nimport {withStyles} from \'@material-ui/core/styles\';\nimport Input from \'@material-ui/core/Input\';\nimport OutlinedInput from \'@material-ui/core/OutlinedInput\';\nimport FilledInput from \'@material-ui/core/FilledInput\';\nimport InputLabel from \'@material-ui/core/InputLabel\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport Select from \'@material-ui/core/Select\';\nimport NativeSelect from \'@material-ui/core/NativeSelect\';\n\nconst styles = theme => ({\n    root       : {\n        display : \'flex\',\n        flexWrap: \'wrap\'\n    },\n    formControl: {\n        margin  : theme.spacing.unit,\n        minWidth: 120\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2\n    }\n});\n\nclass NativeSelects extends React.Component {\n    state = {\n        age       : \'\',\n        name      : \'hai\',\n        labelWidth: 0\n    };\n\n    componentDidMount()\n    {\n        this.setState({\n            labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth\n        });\n    }\n\n    handleChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor="age-native-simple">Age</InputLabel>\n                    <Select\n                        native\n                        value={this.state.age}\n                        onChange={this.handleChange(\'age\')}\n                        inputProps={{\n                            name: \'age\',\n                            id  : \'age-native-simple\'\n                        }}\n                    >\n                        <option value=""/>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor="age-native-helper">Age</InputLabel>\n                    <NativeSelect\n                        value={this.state.age}\n                        onChange={this.handleChange(\'age\')}\n                        input={<Input name="age" id="age-native-helper"/>}\n                    >\n                        <option value=""/>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </NativeSelect>\n                    <FormHelperText>Some important helper text</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <NativeSelect\n                        value={this.state.age}\n                        onChange={this.handleChange(\'age\')}\n                        name="age"\n                        className={classes.selectEmpty}\n                    >\n                        <option value="">None</option>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </NativeSelect>\n                    <FormHelperText>Without label</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel shrink htmlFor="age-native-label-placeholder">\n                        Age\n                    </InputLabel>\n                    <NativeSelect\n                        value={this.state.age}\n                        onChange={this.handleChange(\'age\')}\n                        input={<Input name="age" id="age-native-label-placeholder"/>}\n                    >\n                        <option value="">None</option>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </NativeSelect>\n                    <FormHelperText>Label + placeholder</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl} disabled>\n                    <InputLabel htmlFor="name-native-disabled">Name</InputLabel>\n                    <NativeSelect\n                        value={this.state.name}\n                        onChange={this.handleChange(\'name\')}\n                        input={<Input name="name" id="name-native-disabled"/>}\n                    >\n                        <option value=""/>\n                        <optgroup label="Author">\n                            <option value="hai">Hai</option>\n                        </optgroup>\n                        <optgroup label="Contributors">\n                            <option value="olivier">Olivier</option>\n                            <option value="kevin">Kevin</option>\n                        </optgroup>\n                    </NativeSelect>\n                    <FormHelperText>Disabled</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl} error>\n                    <InputLabel htmlFor="name-native-error">Name</InputLabel>\n                    <NativeSelect\n                        value={this.state.name}\n                        onChange={this.handleChange(\'name\')}\n                        name="name"\n                        input={<Input id="name-native-error"/>}\n                    >\n                        <option value=""/>\n                        <optgroup label="Author">\n                            <option value="hai">Hai</option>\n                        </optgroup>\n                        <optgroup label="Contributors">\n                            <option value="olivier">Olivier</option>\n                            <option value="kevin">Kevin</option>\n                        </optgroup>\n                    </NativeSelect>\n                    <FormHelperText>Error</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor="uncontrolled-native">Name</InputLabel>\n                    <NativeSelect defaultValue={30} input={<Input name="name" id="uncontrolled-native"/>}>\n                        <option value=""/>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </NativeSelect>\n                    <FormHelperText>Uncontrolled</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <NativeSelect\n                        className={classes.selectEmpty}\n                        value={this.state.age}\n                        name="age"\n                        onChange={this.handleChange(\'age\')}\n                    >\n                        <option value="" disabled>\n                            Placeholder\n                        </option>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </NativeSelect>\n                    <FormHelperText>Placeholder</FormHelperText>\n                </FormControl>\n                <FormControl required className={classes.formControl}>\n                    <InputLabel htmlFor="age-native-required">Age</InputLabel>\n                    <Select\n                        native\n                        value={this.state.age}\n                        onChange={this.handleChange(\'age\')}\n                        name="age"\n                        inputProps={{\n                            id: \'age-native-required\'\n                        }}\n                    >\n                        <option value=""/>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </Select>\n                    <FormHelperText>Required</FormHelperText>\n                </FormControl>\n                <FormControl variant="outlined" className={classes.formControl}>\n                    <InputLabel\n                        ref={ref => {\n                            this.InputLabelRef = ref;\n                        }}\n                        htmlFor="outlined-age-native-simple"\n                    >\n                        Age\n                    </InputLabel>\n                    <Select\n                        native\n                        value={this.state.age}\n                        onChange={this.handleChange(\'age\')}\n                        input={\n                            <OutlinedInput\n                                name="age"\n                                labelWidth={this.state.labelWidth}\n                                id="outlined-age-native-simple"\n                            />\n                        }\n                    >\n                        <option value=""/>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </Select>\n                </FormControl>\n                <FormControl variant="filled" className={classes.formControl}>\n                    <InputLabel htmlFor="filled-age-native-simple">Age</InputLabel>\n                    <Select\n                        native\n                        value={this.state.age}\n                        onChange={this.handleChange(\'age\')}\n                        input={<FilledInput name="age" id="filled-age-native-simple"/>}\n                    >\n                        <option value=""/>\n                        <option value={10}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nNativeSelects.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NativeSelects);\n'},2363:function(e,n,t){"use strict";t.r(n);var a=t(10),l=t(11),o=t(13),r=t(12),m=t(14),i=t(0),s=t.n(i),c=t(5),u=t.n(c),p=t(15),h=t(203),v=t.n(h),d=t(320),g=t.n(d),E=t(317),C=t.n(E),f=t(319),y=t.n(f),b=t(471),I=t.n(b),T=t(236),N=t.n(T),M=t(485),F=t.n(M),S=t(483),x=t.n(S),w={PaperProps:{style:{maxHeight:224,width:250}}},O=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];function L(e,n){return{fontWeight:-1===n.state.name.indexOf(e)?n.props.theme.typography.fontWeightRegular:n.props.theme.typography.fontWeightMedium}}var k=function(e){function n(){var e,t;Object(a.a)(this,n);for(var l=arguments.length,m=new Array(l),i=0;i<l;i++)m[i]=arguments[i];return(t=Object(o.a)(this,(e=Object(r.a)(n)).call.apply(e,[this].concat(m)))).state={name:[]},t.handleChange=function(e){t.setState({name:e.target.value})},t}return Object(m.a)(n,e),Object(l.a)(n,[{key:"render",value:function(){var e=this,n=this.props.classes;return s.a.createElement("div",{className:n.root},s.a.createElement(y.a,{className:n.formControl},s.a.createElement(g.a,{htmlFor:"select-multiple"},"Name"),s.a.createElement(N.a,{multiple:!0,value:this.state.name,onChange:this.handleChange,input:s.a.createElement(v.a,{id:"select-multiple"}),MenuProps:w},O.map(function(n){return s.a.createElement(C.a,{key:n,value:n,style:L(n,e)},n)}))),s.a.createElement(y.a,{className:n.formControl},s.a.createElement(g.a,{htmlFor:"select-multiple-checkbox"},"Tag"),s.a.createElement(N.a,{multiple:!0,value:this.state.name,onChange:this.handleChange,input:s.a.createElement(v.a,{id:"select-multiple-checkbox"}),renderValue:function(e){return e.join(", ")},MenuProps:w},O.map(function(n){return s.a.createElement(C.a,{key:n,value:n},s.a.createElement(F.a,{checked:e.state.name.indexOf(n)>-1}),s.a.createElement(I.a,{primary:n}))}))),s.a.createElement(y.a,{className:n.formControl},s.a.createElement(g.a,{htmlFor:"select-multiple-chip"},"Chip"),s.a.createElement(N.a,{multiple:!0,value:this.state.name,onChange:this.handleChange,input:s.a.createElement(v.a,{id:"select-multiple-chip"}),renderValue:function(e){return s.a.createElement("div",{className:n.chips},e.map(function(e){return s.a.createElement(x.a,{key:e,label:e,className:n.chip})}))},MenuProps:w},O.map(function(n){return s.a.createElement(C.a,{key:n,value:n,style:L(n,e)},n)}))),s.a.createElement(y.a,{className:u()(n.formControl,n.noLabel)},s.a.createElement(N.a,{multiple:!0,displayEmpty:!0,value:this.state.name,onChange:this.handleChange,input:s.a.createElement(v.a,{id:"select-multiple-placeholder"}),renderValue:function(e){return 0===e.length?s.a.createElement("em",null,"Placeholder"):e.join(", ")},MenuProps:w},s.a.createElement(C.a,{disabled:!0,value:""},s.a.createElement("em",null,"Placeholder")),O.map(function(n){return s.a.createElement(C.a,{key:n,value:n,style:L(n,e)},n)}))))}}]),n}(s.a.Component);n.default=Object(p.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit,minWidth:120,maxWidth:300},chips:{display:"flex",flexWrap:"wrap"},chip:{margin:e.spacing.unit/4},noLabel:{marginTop:3*e.spacing.unit}}},{withTheme:!0})(k)},2364:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n    root       : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        margin  : theme.spacing.unit,\n        minWidth: 120,\n        maxWidth: 300\n    },\n    chips      : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    chip       : {\n        margin: theme.spacing.unit / 4\n    },\n    noLabel    : {\n        marginTop: theme.spacing.unit * 3\n    }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width    : 250\n        }\n    }\n};\n\nconst names = [\n    'Oliver Hansen',\n    'Van Henry',\n    'April Tucker',\n    'Ralph Hubbard',\n    'Omar Alexander',\n    'Carlos Abbott',\n    'Miriam Wagner',\n    'Bradley Wilkerson',\n    'Virginia Andrews',\n    'Kelly Snyder'\n];\n\nfunction getStyles(name, that)\n{\n    return {\n        fontWeight:\n            that.state.name.indexOf(name) === -1\n                ? that.props.theme.typography.fontWeightRegular\n                : that.props.theme.typography.fontWeightMedium\n    };\n}\n\nclass MultipleSelect extends React.Component {\n    state = {\n        name: []\n    };\n\n    handleChange = event => {\n        this.setState({name: event.target.value});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\n                    <Select\n                        multiple\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        input={<Input id=\"select-multiple\"/>}\n                        MenuProps={MenuProps}\n                    >\n                        {names.map(name => (\n                            <MenuItem key={name} value={name} style={getStyles(name, this)}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\n                    <Select\n                        multiple\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        input={<Input id=\"select-multiple-checkbox\"/>}\n                        renderValue={selected => selected.join(', ')}\n                        MenuProps={MenuProps}\n                    >\n                        {names.map(name => (\n                            <MenuItem key={name} value={name}>\n                                <Checkbox checked={this.state.name.indexOf(name) > -1}/>\n                                <ListItemText primary={name}/>\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\n                    <Select\n                        multiple\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        input={<Input id=\"select-multiple-chip\"/>}\n                        renderValue={selected => (\n                            <div className={classes.chips}>\n                                {selected.map(value => (\n                                    <Chip key={value} label={value} className={classes.chip}/>\n                                ))}\n                            </div>\n                        )}\n                        MenuProps={MenuProps}\n                    >\n                        {names.map(name => (\n                            <MenuItem key={name} value={name} style={getStyles(name, this)}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl className={classNames(classes.formControl, classes.noLabel)}>\n                    <Select\n                        multiple\n                        displayEmpty\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        input={<Input id=\"select-multiple-placeholder\"/>}\n                        renderValue={selected => {\n                            if ( selected.length === 0 )\n                            {\n                                return <em>Placeholder</em>;\n                            }\n\n                            return selected.join(', ');\n                        }}\n                        MenuProps={MenuProps}\n                    >\n                        <MenuItem disabled value=\"\">\n                            <em>Placeholder</em>\n                        </MenuItem>\n                        {names.map(name => (\n                            <MenuItem key={name} value={name} style={getStyles(name, this)}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nMultipleSelect.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, {withTheme: true})(MultipleSelect);\n"},2365:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(10),o=t(11),r=t(13),m=t(12),i=t(14),s=t(0),c=t.n(s),u=t(15),p=t(320),h=t.n(p),v=t(317),d=t.n(v),g=t(319),E=t.n(g),C=t(236),f=t.n(C),y=t(233),b=t.n(y),I=function(e){function n(){var e,t;Object(l.a)(this,n);for(var o=arguments.length,i=new Array(o),s=0;s<o;s++)i[s]=arguments[s];return(t=Object(r.a)(this,(e=Object(m.a)(n)).call.apply(e,[this].concat(i)))).state={age:"",open:!1},t.handleChange=function(e){t.setState(Object(a.a)({},e.target.name,e.target.value))},t.handleClose=function(){t.setState({open:!1})},t.handleOpen=function(){t.setState({open:!0})},t}return Object(i.a)(n,e),Object(o.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("form",{autoComplete:"off"},c.a.createElement(b.a,{className:e.button,onClick:this.handleOpen},"Open the select"),c.a.createElement(E.a,{className:e.formControl},c.a.createElement(h.a,{htmlFor:"demo-controlled-open-select"},"Age"),c.a.createElement(f.a,{open:this.state.open,onClose:this.handleClose,onOpen:this.handleOpen,value:this.state.age,onChange:this.handleChange,inputProps:{name:"age",id:"demo-controlled-open-select"}},c.a.createElement(d.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(d.a,{value:10},"Ten"),c.a.createElement(d.a,{value:20},"Twenty"),c.a.createElement(d.a,{value:30},"Thirty"))))}}]),n}(c.a.Component);n.default=Object(u.withStyles)(function(e){return{button:{display:"block",marginTop:2*e.spacing.unit},formControl:{margin:e.spacing.unit,minWidth:120}}})(I)},2366:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    button     : {\n        display  : 'block',\n        marginTop: theme.spacing.unit * 2\n    },\n    formControl: {\n        margin  : theme.spacing.unit,\n        minWidth: 120\n    }\n});\n\nclass ControlledOpenSelect extends React.Component {\n    state = {\n        age : '',\n        open: false\n    };\n\n    handleChange = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    handleOpen = () => {\n        this.setState({open: true});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <form autoComplete=\"off\">\n                <Button className={classes.button} onClick={this.handleOpen}>\n                    Open the select\n                </Button>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"demo-controlled-open-select\">Age</InputLabel>\n                    <Select\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        onOpen={this.handleOpen}\n                        value={this.state.age}\n                        onChange={this.handleChange}\n                        inputProps={{\n                            name: 'age',\n                            id  : 'demo-controlled-open-select'\n                        }}\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={10}>Ten</MenuItem>\n                        <MenuItem value={20}>Twenty</MenuItem>\n                        <MenuItem value={30}>Thirty</MenuItem>\n                    </Select>\n                </FormControl>\n            </form>\n        );\n    }\n}\n\nControlledOpenSelect.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ControlledOpenSelect);\n"},2367:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(10),o=t(11),r=t(13),m=t(12),i=t(14),s=t(0),c=t.n(s),u=t(233),p=t.n(u),h=t(15),v=t(482),d=t.n(v),g=t(486),E=t.n(g),C=t(487),f=t.n(C),y=t(484),b=t.n(y),I=t(320),T=t.n(I),N=t(203),M=t.n(N),F=t(317),S=t.n(F),x=t(319),w=t.n(x),O=t(236),L=t.n(O),k=function(e){function n(){var e,t;Object(l.a)(this,n);for(var o=arguments.length,i=new Array(o),s=0;s<o;s++)i[s]=arguments[s];return(t=Object(r.a)(this,(e=Object(m.a)(n)).call.apply(e,[this].concat(i)))).state={open:!1,age:""},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,Number(n.target.value)))}},t.handleClickOpen=function(){t.setState({open:!0})},t.handleClose=function(){t.setState({open:!1})},t}return Object(i.a)(n,e),Object(o.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("div",null,c.a.createElement(p.a,{onClick:this.handleClickOpen},"Open select dialog"),c.a.createElement(d.a,{disableBackdropClick:!0,disableEscapeKeyDown:!0,open:this.state.open,onClose:this.handleClose},c.a.createElement(b.a,null,"Fill the form"),c.a.createElement(f.a,null,c.a.createElement("form",{className:e.container},c.a.createElement(w.a,{className:e.formControl},c.a.createElement(T.a,{htmlFor:"age-native-simple"},"Age"),c.a.createElement(L.a,{native:!0,value:this.state.age,onChange:this.handleChange("age"),input:c.a.createElement(M.a,{id:"age-native-simple"})},c.a.createElement("option",{value:""}),c.a.createElement("option",{value:10},"Ten"),c.a.createElement("option",{value:20},"Twenty"),c.a.createElement("option",{value:30},"Thirty"))),c.a.createElement(w.a,{className:e.formControl},c.a.createElement(T.a,{htmlFor:"age-simple"},"Age"),c.a.createElement(L.a,{value:this.state.age,onChange:this.handleChange("age"),input:c.a.createElement(M.a,{id:"age-simple"})},c.a.createElement(S.a,{value:""},c.a.createElement("em",null,"None")),c.a.createElement(S.a,{value:10},"Ten"),c.a.createElement(S.a,{value:20},"Twenty"),c.a.createElement(S.a,{value:30},"Thirty"))))),c.a.createElement(E.a,null,c.a.createElement(p.a,{onClick:this.handleClose,color:"primary"},"Cancel"),c.a.createElement(p.a,{onClick:this.handleClose,color:"primary"},"Ok"))))}}]),n}(c.a.Component);n.default=Object(h.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit,minWidth:120}}})(k)},2368:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n    container  : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        margin  : theme.spacing.unit,\n        minWidth: 120\n    }\n});\n\nclass DialogSelect extends React.Component {\n    state = {\n        open: false,\n        age : ''\n    };\n\n    handleChange = name => event => {\n        this.setState({[name]: Number(event.target.value)});\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>Open select dialog</Button>\n                <Dialog\n                    disableBackdropClick\n                    disableEscapeKeyDown\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>Fill the form</DialogTitle>\n                    <DialogContent>\n                        <form className={classes.container}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n                                <Select\n                                    native\n                                    value={this.state.age}\n                                    onChange={this.handleChange('age')}\n                                    input={<Input id=\"age-native-simple\"/>}\n                                >\n                                    <option value=\"\"/>\n                                    <option value={10}>Ten</option>\n                                    <option value={20}>Twenty</option>\n                                    <option value={30}>Thirty</option>\n                                </Select>\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\n                                <Select\n                                    value={this.state.age}\n                                    onChange={this.handleChange('age')}\n                                    input={<Input id=\"age-simple\"/>}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    <MenuItem value={10}>Ten</MenuItem>\n                                    <MenuItem value={20}>Twenty</MenuItem>\n                                    <MenuItem value={30}>Thirty</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nDialogSelect.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DialogSelect);\n"},2631:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),o=t(3),r=t(1),m=t(15);n.default=Object(m.withStyles)(function(e){return{layoutRoot:{"& .description":{marginBottom:16}}}},{withTheme:!0})(function(e){var n=e.classes;return l.a.createElement(o.s,{classes:{root:n.layoutRoot},header:l.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},l.a.createElement(r.vb,{variant:"h6"},"Selects"),l.a.createElement(r.c,{className:"normal-case",variant:"contained",component:"a",href:"https://material-ui-next.com/demos/selects",target:"_blank"},l.a.createElement(r.H,{className:"mr-4"},"link"),"Reference")),content:l.a.createElement("div",{className:"p-24 max-w-2xl mx-auto"},l.a.createElement(r.vb,{className:"text-44 mt-32 mb-8",component:"h1"},"Selects"),l.a.createElement(r.vb,{className:"description"},"Select components are used for collecting user provided information from a list of options."),l.a.createElement(r.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Simple Select"),l.a.createElement(r.vb,{className:"mb-16",component:"div"},"Menus are positioned over their emitting elements such that the currently selected menu item appears on top of the emitting element."),l.a.createElement(r.vb,{className:"mb-16",component:"div"},l.a.createElement(o.k,{className:"my-24",iframe:!1,component:t(2359).default,raw:t(2360)})),l.a.createElement(r.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Native Select"),l.a.createElement(r.vb,{className:"mb-16",component:"div"},"As the user experience can be improved on mobile using the native select of the platform, we allow such pattern."),l.a.createElement(r.vb,{className:"mb-16",component:"div"},l.a.createElement(o.k,{className:"my-24",iframe:!1,component:t(2361).default,raw:t(2362)})),l.a.createElement(r.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Multiple Select"),l.a.createElement(r.vb,{className:"mb-16",component:"div"},"The ",l.a.createElement("code",null,"Select")," component can handle multiple selections. It's enabled with the ",l.a.createElement("code",null,"multiple")," property."),l.a.createElement(r.vb,{className:"mb-16",component:"div"},"Like with the single selection, you can pull out the new value by accessing ",l.a.createElement("code",null,"event.target.value")," in the ",l.a.createElement("code",null,"onChange")," callback. It's always an array."),l.a.createElement(r.vb,{className:"mb-16",component:"div"},l.a.createElement(o.k,{className:"my-24",iframe:!1,component:t(2363).default,raw:t(2364)})),l.a.createElement(r.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Controlled open Select"),l.a.createElement(r.vb,{className:"mb-16",component:"div"},l.a.createElement(o.k,{className:"my-24",iframe:!1,component:t(2365).default,raw:t(2366)})),l.a.createElement(r.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"With a Dialog"),l.a.createElement(r.vb,{className:"mb-16",component:"div"},"While it's discouraged by the Material Design specification, you can use a select inside a dialog."),l.a.createElement(r.vb,{className:"mb-16",component:"div"},l.a.createElement(o.k,{className:"my-24",iframe:!1,component:t(2367).default,raw:t(2368)})),l.a.createElement(r.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Text Fields"),l.a.createElement(r.vb,{className:"mb-16",component:"div"},"The ",l.a.createElement("code",null,"TextField")," wrapper component is a complete form control including a label, input and help text. You can find an example with the select mode ",l.a.createElement("a",{href:"/demos/text-fields/#textfield"},"in this section"),"."))})})},791:function(e,n,t){"use strict";var a=t(4);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(799))}}]);
//# sourceMappingURL=103.5e008c72.chunk.js.map