{"version":3,"sources":["main/content/apps/todo/TodoChip.js","main/content/apps/todo/store/actions/filters.actions.js","main/content/apps/todo/store/actions/folders.actions.js","main/content/apps/todo/store/actions/labels.actions.js","main/content/apps/todo/store/actions/todos.actions.js","main/content/apps/todo/TodoListItem.js","main/content/apps/todo/TodoList.js","main/content/apps/todo/TodoToolbar.js","main/content/apps/todo/TodoHeader.js","main/content/apps/todo/TodoSidebarHeader.js","main/content/apps/todo/TodoSidebarContent.js","main/content/apps/todo/TodoDialog.js","main/content/apps/todo/store/reducers/todos.reducer.js","main/content/apps/todo/store/reducers/folders.reducer.js","main/content/apps/todo/store/reducers/labels.reducer.js","main/content/apps/todo/store/reducers/filters.reducer.js","main/content/apps/todo/store/reducers/index.js","main/content/apps/todo/TodoApp.js"],"names":["withStyles","theme","root","display","alignItems","height","borderRadius","padding","fontSize","backgroundColor","color","width","marginRight","withTheme","_ref","classes","title","className","react_default","a","createElement","classNames","style","GET_FILTERS","GET_FOLDERS","GET_LABELS","GET_TODOS","UPDATE_TODOS","TOGGLE_STARRED","TOGGLE_COMPLETED","TOGGLE_IMPORTANT","UPDATE_TODO","ADD_TODO","REMOVE_TODO","SET_SEARCH_TEXT","OPEN_NEW_TODO_DIALOG","CLOSE_NEW_TODO_DIALOG","OPEN_EDIT_TODO_DIALOG","CLOSE_EDIT_TODO_DIALOG","TOGGLE_ORDER_DESCENDING","CHANGE_ORDER","getData","match","dispatch","Promise","all","request","axios","get","then","response","type","payload","data","getFilters","getFolders","getLabels","getTodos","params","routeParams","updateTodos","getState","todoApp","todos","toggleCompleted","todo","newTodo","Object","objectSpread","completed","updateTodo","toggleStarred","starred","toggleImportant","important","post","openNewTodoDialog","closeNewTodoDialog","openEditTodoDialog","closeEditTodoDialog","addTodo","removeTodo","todoId","setSearchText","event","searchText","target","value","toLowerCase","toggleOrderDescending","changeOrder","orderBy","TodoListItem","_this$props","this","props","labels","index_es","onClick","ev","preventDefault","dense","button","todoItem","tabIndex","disableRipple","checked","onChange","stopPropagation","variant","todoTitle","todoNotes","_","truncate","notes","replace","length","map","label","todo_TodoChip","find","id","key","red","amber","Component","todoList","borderBottom","palette","divider","&.completed","background","& $todoTitle, & $todoNotes","textDecoration","withRouter","connect","bindActionCreators","Actions","TodoList","getFilteredArray","entities","arr","keys","FuseUtils","filterArrayByString","orderDescending","_fuse","delay","enter","animation","todo_TodoListItem","TodoToolbar","handleOrderChange","_this","displayEmpty","name","transform","TodoHeader","pageLayout","styles","FuseSelectedTheme","elevation","lgUp","toggleLeftSidebar","aria-label","placeholder","disableUnderline","fullWidth","inputProps","TodoSidebarHeader","state","selectedAccount","onAccountChange","setState","accounts","creapond","withinpixels","_this2","logo","logoIcon","logoText","select","accountSelect","SelectProps","MenuProps","accountSelectMenu","margin","listWrapper","listItem","paddingLeft","paddingRight","&.active","secondary","main","contrastText","pointerEvents","& .list-item-icon","listSubheader","_ref2","folders","filters","folder","component","NavLink","to","handle","activeClassName","icon","primary","disableTypography","disableSticky","filter","newTodoState","startDate","Date","dueDate","deleted","TodoDialog","form","labelMenuEl","handleChange","set","closeTodoDialog","todoDialog","handleLabelMenuOpen","currentTarget","handleLabelMenuClose","handleToggleImportant","handleToggleStarred","handleToggleLabel","includes","labelId","toConsumableArray","concat","prevProps","prevState","snapshot","open","isEqual","generateGUID","_this$state","moment","format","HTML5_FMT","DATETIME_LOCAL_SECONDS","assign","onClose","maxWidth","position","aria-owns","aria-haspopup","anchorEl","Boolean","avatar","colorDefault","onDelete","formControl","required","autoFocus","multiline","rows","InputLabelProps","shrink","max","min","disabled","canBeSubmitted","marginTop","marginBottom","initialState","todosReducer","arguments","undefined","action","keyBy","defineProperty","foldersReducer","labelsReducer","filtersReducer","reducer","combineReducers","TodoApp","location","Fragment","header","todo_TodoHeader","contentToolbar","todo_TodoToolbar","content","todo_TodoList","leftSidebarHeader","todo_TodoSidebarHeader","leftSidebarContent","todo_TodoSidebarContent","onRef","instance","innerScroll","todo_TodoDialog","withReducer"],"mappings":"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","file":"static/js/2.d2d39d68.chunk.js","sourcesContent":["import React from 'react';\nimport {withStyles} from '@material-ui/core';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n    root : {\n        display        : 'flex',\n        alignItems     : 'center',\n        height         : 21,\n        borderRadius   : 2,\n        padding        : '0 6px',\n        fontSize       : 11,\n        backgroundColor: 'rgba(0,0,0,.08);'\n    },\n    color: {\n        width       : 8,\n        height      : 8,\n        marginRight : 4,\n        borderRadius: '50%'\n    }\n});\n\nfunction TodoChip({classes, title, color, className})\n{\n    return (\n        <div className={classNames(classes.root, className)}>\n            <div className={classes.color} style={{backgroundColor: color}}/>\n            <div>{title}</div>\n        </div>\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(TodoChip);\n","import axios from 'axios/index';\n\nexport const GET_FILTERS = '[TODO APP] GET FILTERS';\n\nexport function getFilters()\n{\n    const request = axios.get('/api/todo-app/filters');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_FILTERS,\n                payload: response.data\n            })\n        );\n}\n","import axios from 'axios/index';\n\nexport const GET_FOLDERS = '[TODO APP] GET FOLDERS';\n\nexport function getFolders()\n{\n    const request = axios.get('/api/todo-app/folders');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_FOLDERS,\n                payload: response.data\n            })\n        );\n}","import axios from 'axios/index';\n\nexport const GET_LABELS = '[TODO APP] GET LABELS';\n\nexport function getLabels()\n{\n    const request = axios.get('/api/todo-app/labels');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_LABELS,\n                payload: response.data\n            })\n        );\n}\n\n","import axios from 'axios/index';\nimport {getFilters} from './filters.actions';\nimport {getFolders} from './folders.actions';\nimport {getLabels} from './labels.actions';\n\nexport const GET_TODOS = '[TODO APP] GET TODOS';\nexport const UPDATE_TODOS = '[TODO APP] UPDATE TODOS';\nexport const TOGGLE_STARRED = '[TODO APP] TOGGLE STARRED';\nexport const TOGGLE_COMPLETED = '[TODO APP] TOGGLE COMPLETED';\nexport const TOGGLE_IMPORTANT = '[TODO APP] TOGGLE IMPORTANT';\nexport const UPDATE_TODO = '[TODO APP] UPDATE TODO';\nexport const ADD_TODO = '[TODO APP] ADD TODO';\nexport const REMOVE_TODO = '[TODO APP] REMOVE TODO';\nexport const SET_SEARCH_TEXT = '[TODO APP] SET SEARCH TEXT';\nexport const OPEN_NEW_TODO_DIALOG = '[TODO APP] OPEN NEW TODO DIALOG';\nexport const CLOSE_NEW_TODO_DIALOG = '[TODO APP] CLOSE NEW TODO DIALOG';\nexport const OPEN_EDIT_TODO_DIALOG = '[TODO APP] OPEN EDIT TODO DIALOG';\nexport const CLOSE_EDIT_TODO_DIALOG = '[TODO APP] CLOSE EDIT TODO DIALOG';\nexport const TOGGLE_ORDER_DESCENDING = '[TODO APP] TOGGLE ORDER DESCENDING';\nexport const CHANGE_ORDER = '[TODO APP] CHANGE ORDER';\n\nexport function getData(match)\n{\n    return (dispatch) => {\n        Promise.all([\n            dispatch(getFilters()),\n            dispatch(getFolders()),\n            dispatch(getLabels())\n        ]).then(\n            () => dispatch(getTodos(match)));\n    }\n}\n\nexport function getTodos(match)\n{\n    const request = axios.get('/api/todo-app/todos', {\n        params: match.params\n    });\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type       : GET_TODOS,\n                routeParams: match.params,\n                payload    : response.data\n            })\n        );\n}\n\nexport function updateTodos()\n{\n    return (dispatch, getState) => {\n\n        const {routeParams} = getState().todoApp.todos;\n\n        const request = axios.get('/api/todo-app/todos', {\n            params: routeParams\n        });\n\n        return request.then((response) =>\n            dispatch({\n                type   : UPDATE_TODOS,\n                payload: response.data\n            })\n        );\n    }\n}\n\nexport function toggleCompleted(todo)\n{\n    const newTodo = {\n        ...todo,\n        completed: !todo.completed\n    };\n    return (dispatch) => (\n        Promise.all([\n            dispatch({type: TOGGLE_COMPLETED})\n        ]).then(() => dispatch(updateTodo(newTodo)))\n    )\n}\n\nexport function toggleStarred(todo)\n{\n    const newTodo = {\n        ...todo,\n        starred: !todo.starred\n    };\n    return (dispatch) => (\n        Promise.all([\n            dispatch({type: TOGGLE_STARRED})\n        ]).then(() => dispatch(updateTodo(newTodo)))\n    )\n}\n\nexport function toggleImportant(todo)\n{\n    const newTodo = {\n        ...todo,\n        important: !todo.important\n    };\n\n    return (dispatch) => (\n        Promise.all([\n            dispatch({type: TOGGLE_IMPORTANT})\n        ]).then(() => dispatch(updateTodo(newTodo)))\n    )\n}\n\nexport function updateTodo(todo)\n{\n    const request = axios.post('/api/todo-app/update-todo', todo);\n\n    return (dispatch) =>\n        request.then((response) => {\n                Promise.all([\n                    dispatch({\n                        type   : UPDATE_TODO,\n                        payload: response.data\n                    })\n                ]).then(() => dispatch(updateTodos()))\n            }\n        );\n}\n\nexport function openNewTodoDialog()\n{\n    return {\n        type: OPEN_NEW_TODO_DIALOG\n    }\n}\n\nexport function closeNewTodoDialog()\n{\n    return {\n        type: CLOSE_NEW_TODO_DIALOG\n    }\n}\n\nexport function openEditTodoDialog(data)\n{\n    return {\n        type: OPEN_EDIT_TODO_DIALOG,\n        data\n    }\n}\n\nexport function closeEditTodoDialog()\n{\n    return {\n        type: CLOSE_EDIT_TODO_DIALOG\n    }\n}\n\nexport function addTodo(todo)\n{\n    const request = axios.post('/api/todo-app/new-todo', todo);\n\n    return (dispatch) =>\n        request.then((response) => (\n                Promise.all([\n                    dispatch({\n                        type: ADD_TODO\n                    })\n                ]).then(() => dispatch(updateTodos()))\n            )\n        );\n}\n\nexport function removeTodo(todoId)\n{\n    const request = axios.post('/api/todo-app/remove-todo', todoId);\n\n    return (dispatch) =>\n        request.then((response) => (\n                Promise.all([\n                    dispatch({\n                        type: REMOVE_TODO\n                    })\n                ]).then(() => dispatch(updateTodos()))\n            )\n        );\n}\n\nexport function setSearchText(event)\n{\n    return {\n        type      : SET_SEARCH_TEXT,\n        searchText: event.target.value.toLowerCase()\n    }\n}\n\nexport function toggleOrderDescending()\n{\n    return {\n        type: TOGGLE_ORDER_DESCENDING\n    }\n}\n\nexport function changeOrder(orderBy)\n{\n    return {\n        type: CHANGE_ORDER,\n        orderBy\n    }\n}","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {withRouter} from 'react-router-dom';\nimport {IconButton, Icon, Typography, Checkbox, ListItem} from '@material-ui/core';\nimport TodoChip from './TodoChip';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as Actions from './store/actions';\nimport classNames from 'classnames';\nimport _ from '@lodash';\nimport red from '@material-ui/core/colors/red';\nimport amber from '@material-ui/core/colors/amber';\n\nconst styles = theme => ({\n    todoList : {\n        padding: 0\n    },\n    todoItem : {\n        borderBottom : '1px solid  ' + theme.palette.divider,\n        '&.completed': {\n            background                  : 'rgba(0,0,0,0.03)',\n            '& $todoTitle, & $todoNotes': {\n                textDecoration: 'line-through'\n            }\n        }\n    },\n    todoTitle: {},\n    todoNotes: {},\n    labels   : {}\n});\n\nclass TodoListItem extends Component {\n\n    render()\n    {\n        const {todo, labels, classes, openEditTodoDialog, toggleImportant, toggleStarred, toggleCompleted} = this.props;\n\n        return (\n            <ListItem\n                onClick={(ev) => {\n                    ev.preventDefault();\n                    openEditTodoDialog(todo);\n                }}\n                dense\n                button\n                className={classNames(classes.todoItem, {\"completed\": todo.completed}, \"py-16  px-0 sm:px-8\")}\n            >\n\n                <Checkbox\n                    tabIndex={-1}\n                    disableRipple\n                    checked={todo.completed}\n                    onChange={() => toggleCompleted(todo)}\n                    onClick={(ev) => ev.stopPropagation()}\n                />\n\n                <div className=\"flex flex-1 flex-col relative overflow-hidden pl-8\">\n\n                    <Typography\n                        variant=\"subtitle1\"\n                        className={classNames(classes.todoTitle, \"truncate\")}\n                        color={todo.completed ? \"textSecondary\" : \"default\"}\n                    >\n                        {todo.title}\n                    </Typography>\n\n                    <Typography\n                        color=\"textSecondary\"\n                        className={classNames(classes.todoNotes, \"truncate\")}\n                    >\n                        {_.truncate(todo.notes.replace(/<(?:.|\\n)*?>/gm, ''), {'length': 180})}\n                    </Typography>\n\n                    <div className={classNames(classes.labels, \"flex mt-8\")}>\n                        {todo.labels.map(label => (\n                            <TodoChip\n                                className=\"mr-4\"\n                                title={_.find(labels, {id: label}).title}\n                                color={_.find(labels, {id: label}).color}\n                                key={label}\n                            />\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"px-8\">\n                    <IconButton onClick={(ev) => {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        toggleImportant(todo)\n                    }}>\n                        {todo.important ? (\n                            <Icon style={{color: red[500]}}>error</Icon>\n                        ) : (\n                            <Icon>error_outline</Icon>\n                        )}\n                    </IconButton>\n                    <IconButton onClick={(ev) => {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        toggleStarred(todo)\n                    }}>\n                        {todo.starred ? (\n                            <Icon style={{color: amber[500]}}>star</Icon>\n                        ) : (\n                            <Icon>star_outline</Icon>\n                        )}\n                    </IconButton>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        toggleCompleted   : Actions.toggleCompleted,\n        toggleImportant   : Actions.toggleImportant,\n        toggleStarred     : Actions.toggleStarred,\n        openEditTodoDialog: Actions.openEditTodoDialog\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        labels: todoApp.labels\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TodoListItem)));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {withStyles, List, Typography} from '@material-ui/core';\nimport {FuseUtils, FuseAnimate, FuseAnimateGroup} from '@fuse';\nimport TodoListItem from './TodoListItem';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    todoList: {\n        padding: 0\n    },\n    todoItem: {},\n    labels  : {}\n});\n\nclass TodoList extends Component {\n\n    getFilteredArray = (entities, searchText) => {\n        const arr = Object.keys(entities).map((id) => entities[id]);\n        if ( searchText.length === 0 )\n        {\n            return arr;\n        }\n        return FuseUtils.filterArrayByString(arr, searchText);\n    };\n\n    render()\n    {\n        const {todos, classes, searchText, orderBy, orderDescending} = this.props;\n\n        const arr = _.orderBy(this.getFilteredArray(todos, searchText), [orderBy], [orderDescending ? 'desc' : 'asc']);\n\n        if ( arr.length === 0 )\n        {\n            return (\n                <FuseAnimate delay={100}>\n                    <div className=\"flex flex-1 items-center justify-center h-full\">\n                        <Typography color=\"textSecondary\" variant=\"h5\">\n                            There are no todos!\n                        </Typography>\n                    </div>\n                </FuseAnimate>\n            );\n        }\n\n        return (\n            <List className={classes.todoList}>\n                <FuseAnimateGroup\n                    enter={{\n                        animation: \"transition.slideUpBigIn\"\n                    }}\n                >\n                    {\n                        arr.map((todo) => (\n                                <TodoListItem todo={todo} key={todo.id}/>\n                            )\n                        )\n                    }\n                </FuseAnimateGroup>\n            </List>\n        );\n    }\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        todos          : todoApp.todos.entities,\n        searchText     : todoApp.todos.searchText,\n        orderBy        : todoApp.todos.orderBy,\n        orderDescending: todoApp.todos.orderDescending\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps)(TodoList)));\n","import React, {Component} from 'react';\nimport {withStyles, Icon, IconButton, MenuItem, FormControl, Select} from '@material-ui/core';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as Actions from './store/actions';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex'\n    }\n});\n\nclass TodoToolbar extends Component {\n\n    handleOrderChange = (ev) => {\n        this.props.changeOrder(ev.target.value);\n    };\n\n    render()\n    {\n        const {classes, orderBy, orderDescending, toggleOrderDescending} = this.props;\n\n        return (\n            <div className={classNames(classes.root, \"flex justify-between w-full\")}>\n                <div className=\"flex\"/>\n                <div className=\"flex items-center\">\n                    <FormControl className=\"\">\n                        <Select\n                            value={orderBy}\n                            onChange={this.handleOrderChange}\n                            displayEmpty\n                            name=\"filter\"\n                            className=\"\"\n                        >\n                            <MenuItem value=\"\">\n                                <em>Order by</em>\n                            </MenuItem>\n                            <MenuItem value=\"startDate\">Start Date</MenuItem>\n                            <MenuItem value=\"dueDate\">Due Date</MenuItem>\n                            <MenuItem value=\"title\">Title</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <IconButton onClick={toggleOrderDescending}>\n                        <Icon style={{transform: orderDescending ? 'scaleY(-1)' : 'scaleY(1)'}}>\n                            sort\n                        </Icon>\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeOrder          : Actions.changeOrder,\n        toggleOrderDescending: Actions.toggleOrderDescending\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        orderBy        : todoApp.todos.orderBy,\n        orderDescending: todoApp.todos.orderDescending\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TodoToolbar)));\n","import React, {Component} from 'react';\nimport {Hidden, Icon, IconButton, Input, MuiThemeProvider, Paper} from '@material-ui/core';\nimport * as Actions from './store/actions';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {FuseSelectedTheme} from '@fuse';\n\nclass TodoHeader extends Component {\n\n    render()\n    {\n        const {setSearchText, searchText, pageLayout} = this.props;\n        return (\n            <MuiThemeProvider theme={FuseSelectedTheme}>\n                <div className=\"flex flex-1\">\n                    <Paper className=\"flex items-center w-full h-48 sm:h-56 p-16 pl-4 md:pl-16 rounded-8 \" elevation={1}>\n                        <Hidden lgUp>\n                            <IconButton\n                                onClick={(ev) => pageLayout().toggleLeftSidebar()}\n                                aria-label=\"open left sidebar\"\n                            >\n                                <Icon>menu</Icon>\n                            </IconButton>\n                        </Hidden>\n\n                        <Icon color=\"action\">search</Icon>\n\n                        <Input\n                            placeholder=\"Search\"\n                            className=\"pl-16\"\n                            disableUnderline\n                            fullWidth\n                            value={searchText}\n                            inputProps={{\n                                'aria-label': 'Search'\n                            }}\n                            onChange={setSearchText}\n                        />\n                    </Paper>\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        setSearchText: Actions.setSearchText\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        searchText: todoApp.todos.searchText\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHeader);\n","import React, {Component} from 'react';\nimport {withStyles, Icon, MenuItem, TextField} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {FuseAnimate} from '@fuse';\n\nconst styles = theme => ({\n    root             : {},\n    logo             : {},\n    logoIcon         : {\n        fontSize: '32px!important'\n    },\n    logoText         : {\n        fontSize: 24\n    },\n    accountSelect    : {},\n    accountSelectMenu: {}\n});\n\nclass TodoSidebarHeader extends Component {\n\n    state = {\n        selectedAccount: 'creapond'\n    };\n\n    onAccountChange = (ev) => {\n        this.setState({selectedAccount: ev.target.value});\n    };\n\n    accounts = {\n        'creapond'    : 'johndoe@creapond.com',\n        'withinpixels': 'johndoe@withinpixels.com'\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classNames(classes.root, \"flex flex-col justify-center h-full p-24\")}>\n\n                <div className={classNames(classes.logo, \"flex items-center flex-1\")}>\n                    <FuseAnimate animation=\"transition.expandIn\" delay={300}>\n                        <Icon className={classNames(classes.logoIcon, \"mr-16\")}>check_box</Icon>\n                    </FuseAnimate>\n                    <FuseAnimate animation=\"transition.slideLeftIn\" delay={300}>\n                        <span className={classes.logoText}>To-Do</span>\n                    </FuseAnimate>\n                </div>\n\n                <FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n                    <TextField\n                        id=\"account-selection\"\n                        select\n                        label={this.state.selectedAccount}\n                        className={classes.accountSelect}\n                        value={this.state.selectedAccount}\n                        onChange={this.onAccountChange}\n                        SelectProps={{\n                            MenuProps: {\n                                className: classes.accountSelectMenu\n                            }\n                        }}\n                        placeholder=\"Select Account\"\n                        margin=\"normal\"\n                    >\n                        {Object.keys(this.accounts).map((key, value) => (\n                            <MenuItem key={key} value={key}>\n                                {this.accounts[key]}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FuseAnimate>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(TodoSidebarHeader);\n","import {withStyles, Icon, List, ListItem, ListItemText, ListSubheader, Button} from '@material-ui/core';\nimport {NavLink, withRouter} from 'react-router-dom';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {FuseAnimate} from '@fuse';\nimport * as Actions from './store/actions';\n\nconst styles = theme => ({\n    listWrapper  : {},\n    listItem     : {\n        color              : 'inherit!important',\n        textDecoration     : 'none!important',\n        height             : 40,\n        width              : 'calc(100% - 16px)',\n        borderRadius       : '0 20px 20px 0',\n        paddingLeft        : 24,\n        paddingRight       : 12,\n        '&.active'         : {\n            backgroundColor    : theme.palette.secondary.main,\n            color              : theme.palette.secondary.contrastText + '!important',\n            pointerEvents      : 'none',\n            '& .list-item-icon': {\n                color: 'inherit'\n            }\n        },\n        '& .list-item-icon': {\n            fontSize: 16,\n            width   : 16,\n            height  : 16\n        }\n    },\n    listSubheader: {\n        paddingRight: 24,\n        paddingLeft : 24\n    }\n});\n\nfunction TodoSidebarContent({classes, folders, filters, labels, openNewTodoDialog})\n{\n\n    return (\n        <FuseAnimate animation=\"transition.slideUpIn\" delay={400}>\n            <div>\n                <div className=\"p-24\">\n                    <Button\n                        onClick={() => {\n                            openNewTodoDialog();\n                        }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\"w-full\"\n                    >\n                        ADD TASK\n                    </Button>\n                </div>\n\n                <div className={classes.listWrapper}>\n\n                    <List>\n                        {folders.length > 0 && folders.map((folder) => (\n                            <ListItem\n                                button\n                                component={NavLink}\n                                to={'/apps/todo/' + folder.handle} key={folder.id}\n                                activeClassName=\"active\"\n                                className={classes.listItem}\n                            >\n                                <Icon className=\"list-item-icon\" color=\"action\">{folder.icon}</Icon>\n                                <ListItemText primary={folder.title} disableTypography={true}/>\n                            </ListItem>\n                        ))}\n                    </List>\n\n                    <List>\n                        <ListSubheader className={classes.listSubheader} disableSticky>FILTERS</ListSubheader>\n\n                        {filters.length > 0 && filters.map((filter) => (\n                            <ListItem\n                                button\n                                component={NavLink}\n                                to={'/apps/todo/filter/' + filter.handle}\n                                activeClassName=\"active\"\n                                className={classes.listItem}\n                                key={filter.id}\n                            >\n                                <Icon className=\"list-item-icon\" color=\"action\">{filter.icon}</Icon>\n                                <ListItemText primary={filter.title} disableTypography={true}/>\n                            </ListItem>\n                        ))}\n                    </List>\n\n                    <List>\n\n                        <ListSubheader className={classes.listSubheader} disableSticky>LABELS</ListSubheader>\n\n                        {labels.length > 0 && labels.map((label) => (\n                            <ListItem\n                                button\n                                component={NavLink}\n                                to={'/apps/todo/label/' + label.handle}\n                                key={label.id}\n                                className={classes.listItem}\n                            >\n                                <Icon className=\"list-item-icon\" style={{color: label.color}}\n                                      color=\"action\">label</Icon>\n                                <ListItemText primary={label.title} disableTypography={true}/>\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </div>\n        </FuseAnimate>\n    );\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        openNewTodoDialog: Actions.openNewTodoDialog\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        folders: todoApp.folders,\n        labels : todoApp.labels,\n        filters: todoApp.filters\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(TodoSidebarContent)));\n","import React, {Component} from 'react';\nimport {\n    withStyles,\n    TextField,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    FormControl,\n    Chip,\n    Icon,\n    IconButton,\n    Typography,\n    Toolbar,\n    AppBar,\n    Avatar,\n    Checkbox,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n    ListItemText,\n    Divider\n} from '@material-ui/core';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from './store/actions';\nimport {connect} from 'react-redux';\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\nimport moment from 'moment/moment';\nimport classNames from 'classnames';\nimport {FuseUtils} from '@fuse';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    root       : {},\n    formControl: {\n        marginTop   : 8,\n        marginBottom: 16\n    }\n});\n\nconst newTodoState = {\n    'id'       : '',\n    'title'    : '',\n    'notes'    : '',\n    'startDate': new Date(),\n    'dueDate'  : new Date(),\n    'completed': false,\n    'starred'  : false,\n    'important': false,\n    'deleted'  : false,\n    'labels'   : []\n};\n\nclass TodoDialog extends Component {\n    state = {\n        form       : {...newTodoState},\n        labelMenuEl: null\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        /**\n         * After Dialog Open\n         */\n        if ( !prevProps.todoDialog.props.open && this.props.todoDialog.props.open )\n        {\n            /**\n             * Dialog type: 'edit'\n             * Update State\n             */\n            if ( this.props.todoDialog.type === 'edit' &&\n                this.props.todoDialog.data &&\n                !_.isEqual(this.props.todoDialog.data, prevState) )\n            {\n                this.setState({form: {...this.props.todoDialog.data}});\n            }\n\n            /**\n             * Dialog type: 'new'\n             * Update State\n             */\n            if ( this.props.todoDialog.type === 'new' &&\n                !_.isEqual(newTodoState, prevState) )\n            {\n                this.setState({\n                    form: {\n                        ...newTodoState,\n                        id: FuseUtils.generateGUID()\n                    }\n                });\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        const form = _.set({...this.state.form}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value);\n        this.setState({form});\n    };\n\n    closeTodoDialog = () => {\n        this.props.todoDialog.type === 'edit' ? this.props.closeEditTodoDialog() : this.props.closeNewTodoDialog();\n    };\n\n    handleLabelMenuOpen = (event) => {\n        this.setState({labelMenuEl: event.currentTarget});\n    };\n\n    handleLabelMenuClose = (event) => {\n        this.setState({labelMenuEl: null});\n    };\n\n    handleToggleImportant = () => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                important: !this.state.form.important\n            }\n        });\n    };\n\n    handleToggleStarred = () => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                starred: !this.state.form.starred\n            }\n        });\n    };\n\n    handleToggleLabel = (event, id) => {\n        event.stopPropagation();\n        this.setState({\n            form: _.set({\n                ...this.state.form,\n                labels: this.state.form.labels.includes(id) ? this.state.form.labels.filter(labelId => labelId !== id) : [...this.state.form.labels, id]\n            })\n        });\n    };\n\n    toggleCompleted = () => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                completed: !this.state.form.completed\n            }\n        })\n    };\n\n    canBeSubmitted()\n    {\n        const {title} = this.state.form;\n        return (\n            title.length > 0\n        );\n    }\n\n    render()\n    {\n        const {classes, todoDialog, addTodo, updateTodo, removeTodo, labels} = this.props;\n        const {form, labelMenuEl} = this.state;\n        let startDate, dueDate;\n\n        if ( form )\n        {\n            startDate = moment(form.startDate).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n            dueDate = moment(form.dueDate).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS);\n        }\n\n        return (\n            <Dialog className={classes.root} {...todoDialog.props} onClose={this.closeTodoDialog} fullWidth maxWidth=\"sm\">\n\n                <AppBar position=\"static\" elevation={1}>\n                    <Toolbar className=\"flex w-full\">\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                            {todoDialog.type === 'new' ? 'New Todo' : 'Edit Todo'}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <DialogContent classes={{root: \"p-0\"}}>\n\n                    <div className=\"mb-16\">\n                        <div className=\"flex items-center justify-between p-12\">\n\n                            <div className=\"flex\">\n                                <Checkbox\n                                    tabIndex={-1}\n                                    checked={form.completed}\n                                    onChange={this.toggleCompleted}\n                                    onClick={(ev) => ev.stopPropagation()}\n                                />\n                            </div>\n\n                            <div className=\"flex items-center justify-start\" aria-label=\"Toggle star\">\n                                <IconButton onClick={this.handleToggleImportant}>\n                                    {form.important ? (\n                                        <Icon style={{color: red[500]}}>error</Icon>\n                                    ) : (\n                                        <Icon>error_outline</Icon>\n                                    )}\n                                </IconButton>\n\n                                <IconButton onClick={this.handleToggleStarred}>\n                                    {form.starred ? (\n                                        <Icon style={{color: amber[500]}}>star</Icon>\n                                    ) : (\n                                        <Icon>star_outline</Icon>\n                                    )}\n                                </IconButton>\n                                <div>\n                                    <IconButton\n                                        aria-owns={labelMenuEl ? 'label-menu' : null}\n                                        aria-haspopup=\"true\"\n                                        onClick={this.handleLabelMenuOpen}\n                                    >\n                                        <Icon>label</Icon>\n                                    </IconButton>\n                                    <Menu\n                                        id=\"label-menu\"\n                                        anchorEl={labelMenuEl}\n                                        open={Boolean(labelMenuEl)}\n                                        onClose={this.handleLabelMenuClose}\n                                    >\n                                        {labels.length > 0 && labels.map((label) => (\n                                            <MenuItem onClick={(ev) => this.handleToggleLabel(ev, label.id)} key={label.id}>\n                                                <ListItemIcon>\n                                                    <Icon className=\"mr-0\" color=\"action\">\n                                                        {form.labels.includes(label.id) ? 'check_box' : 'check_box_outline_blank'}\n                                                    </Icon>\n                                                </ListItemIcon>\n                                                <ListItemText primary={label.title} disableTypography={true}/>\n                                                <ListItemIcon>\n                                                    <Icon className=\"mr-0\" style={{color: label.color}} color=\"action\">\n                                                        label\n                                                    </Icon>\n                                                </ListItemIcon>\n                                            </MenuItem>\n                                        ))}\n                                    </Menu>\n                                </div>\n                            </div>\n                        </div>\n                        <Divider className=\"mx-24\"/>\n                    </div>\n\n                    {form.labels.length > 0 && (\n                        <div className=\"flex flex-wrap  px-16 sm:px-24 mb-16\">\n                            {form.labels.map(label => (\n                                <Chip\n                                    avatar={(\n                                        <Avatar\n                                            classes={{colorDefault: \"bg-transparent\"}}>\n                                            <Icon\n                                                className=\"text-20\"\n                                                style={{color: _.find(labels, {id: label}).color}}\n                                            >\n                                                label\n                                            </Icon>\n                                        </Avatar>\n                                    )}\n                                    label={_.find(labels, {id: label}).title}\n                                    onDelete={(ev) => this.handleToggleLabel(ev, label)}\n                                    className=\"mr-8 my-8\"\n                                    classes={{label: \"pl-4\"}}\n                                    key={label}\n                                />\n                            ))}\n                        </div>\n                    )}\n\n                    <div className=\"px-16 sm:px-24\">\n                        <FormControl className={classes.formControl} required fullWidth>\n                            <TextField\n                                label=\"Title\"\n                                autoFocus\n                                name=\"title\"\n                                value={form.title}\n                                onChange={this.handleChange}\n                                required\n                                variant=\"outlined\"\n                            />\n                        </FormControl>\n\n                        <FormControl className={classes.formControl} required fullWidth>\n                            <TextField\n                                label=\"Notes\"\n                                name=\"notes\"\n                                multiline\n                                rows=\"6\"\n                                value={form.notes}\n                                onChange={this.handleChange}\n                                variant=\"outlined\"\n                            />\n                        </FormControl>\n                        <div className=\"flex\">\n                            <TextField\n                                name=\"startDate\"\n                                label=\"Start Date\"\n                                type=\"datetime-local\"\n                                className={classNames(classes.formControl, \"mr-8\")}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                inputProps={{\n                                    max: dueDate\n                                }}\n                                value={startDate}\n                                onChange={this.handleChange}\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                type=\"datetime-local\"\n                                className={classNames(classes.formControl, \"ml-8\")}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                inputProps={{\n                                    min: startDate\n                                }}\n                                value={dueDate}\n                                onChange={this.handleChange}\n                                variant=\"outlined\"\n                            />\n                        </div>\n                    </div>\n\n                </DialogContent>\n\n                {todoDialog.type === 'new' ? (\n                    <DialogActions className=\"justify-between pl-8 sm:pl-16\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                addTodo(this.state.form);\n                                this.closeTodoDialog();\n                            }}\n                            disabled={!this.canBeSubmitted()}\n                        >\n                            Add\n                        </Button>\n                    </DialogActions>\n                ) : (\n                    <DialogActions className=\"justify-between pl-8 sm:pl-16\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                updateTodo(this.state.form);\n                                this.closeTodoDialog();\n                            }}\n                            disabled={!this.canBeSubmitted()}\n                        >\n                            Save\n                        </Button>\n                        <IconButton\n                            className=\"min-w-auto\"\n                            onClick={() => {\n                                removeTodo(this.state.form.id);\n                                this.closeTodoDialog();\n                            }}\n                        >\n                            <Icon>delete</Icon>\n                        </IconButton>\n                    </DialogActions>\n                )}\n            </Dialog>\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeEditTodoDialog: Actions.closeEditTodoDialog,\n        closeNewTodoDialog : Actions.closeNewTodoDialog,\n        addTodo            : Actions.addTodo,\n        updateTodo         : Actions.updateTodo,\n        removeTodo         : Actions.removeTodo\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {\n        todoDialog: todoApp.todos.todoDialog,\n        labels    : todoApp.labels\n    }\n}\n\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(TodoDialog));\n","import * as Actions from '../actions';\nimport _ from '@lodash';\n\nconst initialState = {\n    entities       : [],\n    searchText     : '',\n    orderBy        : '',\n    orderDescending: false,\n    routeParams    : {},\n    todoDialog     : {\n        type : 'new',\n        props: {\n            open: false\n        },\n        data : null\n    }\n};\n\nconst todosReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_TODOS:\n        {\n            return {\n                ...state,\n                entities   : _.keyBy(action.payload, 'id'),\n                searchText : '',\n                routeParams: action.routeParams\n            };\n        }\n        case Actions.UPDATE_TODOS:\n        {\n            return {\n                ...state,\n                entities: _.keyBy(action.payload, 'id')\n            };\n        }\n        case Actions.OPEN_NEW_TODO_DIALOG:\n        {\n            return {\n                ...state,\n                todoDialog: {\n                    type : 'new',\n                    props: {\n                        open: true\n                    },\n                    data : null\n                }\n            };\n        }\n        case Actions.CLOSE_NEW_TODO_DIALOG:\n        {\n            return {\n                ...state,\n                todoDialog: {\n                    type : 'new',\n                    props: {\n                        open: false\n                    },\n                    data : null\n                }\n            };\n        }\n        case Actions.OPEN_EDIT_TODO_DIALOG:\n        {\n            return {\n                ...state,\n                todoDialog: {\n                    type : 'edit',\n                    props: {\n                        open: true\n                    },\n                    data : action.data\n                }\n            };\n        }\n        case Actions.CLOSE_EDIT_TODO_DIALOG:\n        {\n            return {\n                ...state,\n                todoDialog: {\n                    type : 'edit',\n                    props: {\n                        open: false\n                    },\n                    data : null\n                }\n            };\n        }\n        case Actions.UPDATE_TODO:\n        {\n            const todo = action.payload;\n\n            return {\n                ...state,\n                entities: {\n                    ...state.entities,\n                    [todo.id]: {...todo}\n                }\n            };\n        }\n        case Actions.SET_SEARCH_TEXT:\n        {\n            return {\n                ...state,\n                searchText: action.searchText\n            };\n        }\n        case Actions.TOGGLE_ORDER_DESCENDING:\n        {\n            return {\n                ...state,\n                orderDescending: !state.orderDescending\n            };\n        }\n        case Actions.CHANGE_ORDER:\n        {\n            return {\n                ...state,\n                orderBy: action.orderBy\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default todosReducer;\n","import * as Actions from '../actions';\n\nconst foldersReducer = function (state = [], action) {\n    switch ( action.type )\n    {\n        case Actions.GET_FOLDERS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default foldersReducer;","import * as Actions from '../actions';\n\nconst labelsReducer = function (state = [], action) {\n    switch ( action.type )\n    {\n        case Actions.GET_LABELS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default labelsReducer;","import * as Actions from '../actions';\n\nconst filtersReducer = function (state = [], action) {\n    switch ( action.type )\n    {\n        case Actions.GET_FILTERS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default filtersReducer;","import {combineReducers} from 'redux';\nimport todos from './todos.reducer';\nimport folders from './folders.reducer';\nimport labels from './labels.reducer';\nimport filters from './filters.reducer';\n\nconst reducer = combineReducers({\n    todos,\n    folders,\n    labels,\n    filters\n});\n\nexport default reducer;\n","import React, {Component} from 'react';\nimport TodoList from './TodoList';\nimport * as Actions from './store/actions';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom'\nimport {FusePageCarded} from '@fuse';\nimport TodoToolbar from './TodoToolbar';\nimport TodoHeader from './TodoHeader';\nimport TodoSidebarHeader from './TodoSidebarHeader';\nimport TodoSidebarContent from './TodoSidebarContent';\nimport TodoDialog from './TodoDialog';\nimport _ from '@lodash';\nimport withReducer from 'store/withReducer';\nimport reducer from './store/reducers';\n\nclass TodoApp extends Component {\n\n    componentDidMount()\n    {\n        this.props.getData(this.props.match);\n    }\n\n    componentDidUpdate(prevProps, prevState)\n    {\n        if ( !_.isEqual(this.props.location, prevProps.location) )\n        {\n            this.props.getTodos(this.props.match);\n        }\n    }\n\n    render()\n    {\n        return (\n            <React.Fragment>\n                <FusePageCarded\n                    classes={{\n                        root  : \"w-full\",\n                        header: \"items-center min-h-72 h-72 sm:h-136 sm:min-h-136\"\n                    }}\n                    header={\n                        <TodoHeader pageLayout={() => this.pageLayout}/>\n                    }\n                    contentToolbar={\n                        <TodoToolbar/>\n                    }\n                    content={\n                        <TodoList/>\n                    }\n                    leftSidebarHeader={\n                        <TodoSidebarHeader/>\n                    }\n                    leftSidebarContent={\n                        <TodoSidebarContent/>\n                    }\n                    onRef={instance => {\n                        this.pageLayout = instance;\n                    }}\n                    innerScroll\n                />\n                <TodoDialog/>\n            </React.Fragment>\n        )\n    };\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getData : Actions.getData,\n        getTodos: Actions.getTodos\n    }, dispatch);\n}\n\nfunction mapStateToProps({todoApp})\n{\n    return {}\n}\n\nexport default withReducer('todoApp', reducer)(withRouter(connect(mapStateToProps, mapDispatchToProps)(TodoApp)));\n"],"sourceRoot":""}