{"version":3,"sources":["../node_modules/path-to-regexp/index.js","main/content/apps/mail/store/actions/mails.actions.js","main/content/apps/mail/store/actions/mail.actions.js","main/content/apps/mail/store/actions/folders.actions.js","main/content/apps/mail/store/actions/labels.actions.js","main/content/apps/mail/store/actions/filters.actions.js","main/content/apps/mail/MailChip.js","main/content/apps/mail/mails/MailListItem.js","main/content/apps/mail/mails/MailList.js","main/content/apps/mail/mail/MailDetails.js","main/content/apps/mail/mails/MailsToolbar.js","main/content/apps/mail/mail/MailToolbar.js","main/content/apps/mail/MailAppHeader.js","main/content/apps/mail/MailAppSidebarHeader.js","main/content/apps/mail/MailCompose.js","main/content/apps/mail/MailAppSidebarContent.js","main/content/apps/mail/store/reducers/mails.reducer.js","main/content/apps/mail/store/reducers/mail.reducer.js","main/content/apps/mail/store/reducers/folders.reducer.js","main/content/apps/mail/store/reducers/labels.reducer.js","main/content/apps/mail/store/reducers/filters.reducer.js","main/content/apps/mail/store/reducers/index.js","main/content/apps/mail/MailApp.js"],"names":["module","exports","pathToRegexp","parse","compile","str","options","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","DEFAULT_DELIMITERS","PATH_REGEXP","RegExp","join","res","tokens","key","index","path","defaultDelimiter","delimiter","delimiters","pathEscaped","exec","m","escaped","offset","slice","length","prev","next","name","capture","group","modifier","k","indexOf","push","partial","undefined","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","matches","Array","i","data","encode","encodeURIComponent","token","segment","value","isArray","TypeError","j","test","String","replace","flags","sensitive","keys","strict","start","end","endsWith","concat","map","route","isEndDelimited","groups","source","match","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","GET_MAILS","UPDATE_MAILS","SELECT_ALL_MAILS","DESELECT_ALL_MAILS","TOGGLE_IN_SELECTED_MAILS","SELECT_MAILS_BY_PARAMETER","SET_FOLDER_ON_SELECTED_MAILS","TOGGLE_LABEL_ON_SELECTED_MAILS","SET_SEARCH_TEXT","getMails","routeParams","request","axios","get","params","dispatch","then","response","type","payload","updateMails","getState","mailApp","mails","selectAllMails","deselectAllMails","selectMailsByParameter","parameter","toggleInSelectedMails","mailId","setSearchText","event","searchText","target","toLowerCase","setFolderOnSelectedMails","id","selectedMailIds","post","folderId","toggleLabelOnSelectedMails","labelId","GET_MAIL","UPDATE_MAIL","TOGGLE_STAR","TOGGLE_IMPORTANT","getMail","toggleStar","mail","newMail","Object","objectSpread","starred","updateMail","toggleImportant","important","GET_FOLDERS","getFolders","GET_LABELS","getLabels","GET_FILTERS","getFilters","withStyles","theme","root","display","alignItems","height","borderRadius","padding","fontSize","backgroundColor","color","width","marginRight","withTheme","_ref","classes","title","className","react_default","a","createElement","classNames","style","require","MailListItem","_this$props","this","props","labels","history","toPath","checked","find","index_es","dense","button","onClick","mailItem","read","tabIndex","disableRipple","onChange","ev","stopPropagation","from","avatar","alt","src","variant","time","subject","_","truncate","message","label","mail_MailChip","Component","mailList","borderBottom","palette","divider","&.unread","background","&.selected","&::after","content","position","left","primary","main","withRouter","connect","bindActionCreators","Actions","MailList","getFilteredArray","entities","arr","FuseUtils","filterArrayByString","prevProps","prevState","isEqual","location","_fuse","delay","enter","animation","mails_MailListItem","MailDetails","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","showDetails","_this2","component","to","setState","email","dangerouslySetInnerHTML","__html","attachments","attachment","fileName","preview","preventDefault","size","MailToolbar","selectMenu","foldersMenu","labelsMenu","handleMenuOpen","menu","defineProperty","currentTarget","handleMenuClose","handleChange","folders","_this$state","mailListActions","indeterminate","selectMenuButton","aria-label","aria-owns","aria-haspopup","anchorEl","open","Boolean","onClose","Fragment","toolbarSeparator","folder","borderRight","margin","breakpoints","down","&.mail-selected","deselectMailButton","filters","matchParams","deselectUrl","MailAppHeader","pageLayout","core_styles","FuseSelectedTheme","elevation","lgUp","toggleLeftSidebar","placeholder","disableUnderline","fullWidth","inputProps","MailAppSidebarHeader","selectedAccount","onAccountChange","accounts","creapond","withinpixels","logo","logoIcon","logoText","select","accountSelect","SelectProps","MenuProps","accountSelectMenu","MailCompose","composeDialog","cc","bcc","openComposeDialog","closeComposeDialog","set","Attachment","attachmentFilename","attachmentSize","composeButton","aria-labelledby","formControl","disabled","autoFocus","required","multiline","rows","attachmentList","marginTop","marginBottom","paddingTop","border","paddingLeft","justifyContent","fontWeight","marginLeft","listWrapper","listItem","textDecoration","paddingRight","&.active","secondary","contrastText","pointerEvents","& .list-item-icon","listSubheader","_ref2","mail_MailCompose","disableSticky","NavLink","handle","activeClassName","icon","disableTypography","filter","initialState","mailsReducer","arguments","action","keyBy","toConsumableArray","mailReducer","foldersReducer","labelsReducer","filtersReducer","reducer","combineReducers","MailApp","header","mail_MailAppHeader","contentToolbar","mail_MailToolbar","MailsToolbar","mail_MailDetails","mails_MailList","leftSidebarHeader","mail_MailAppSidebarHeader","leftSidebarContent","mail_MailAppSidebarContent","onRef","instance","innerScroll","withReducer"],"mappings":"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","file":"static/js/1.8d7b4ef4.chunk.js","sourcesContent":["/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n/**\n * Default configs.\n */\n\nvar DEFAULT_DELIMITER = '/';\nvar DEFAULT_DELIMITERS = './';\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n// \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n'(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || DEFAULT_DELIMITER;\n  var delimiters = options && options.delimiters || DEFAULT_DELIMITERS;\n  var pathEscaped = false;\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      pathEscaped = true;\n      continue;\n    }\n\n    var prev = '';\n    var next = str[index];\n    var name = res[2];\n    var capture = res[3];\n    var group = res[4];\n    var modifier = res[5];\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1;\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k];\n        path = path.slice(0, k);\n      }\n    } // Push the current path onto the tokens.\n\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n      pathEscaped = false;\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = prev || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Push any remaining characters.\n\n\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index));\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (data, options) {\n    var path = '';\n    var encode = options && options.encode || encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var segment;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue;\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token);\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"');\n        }\n\n        path += token.prefix + segment;\n        continue;\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix;\n        continue;\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'));\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1');\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options && options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path; // Use a negative lookahead to match only capturing groups.\n\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      });\n    }\n  }\n\n  return path;\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options));\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  options = options || {};\n  var strict = options.strict;\n  var start = options.start !== false;\n  var end = options.end !== false;\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS;\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\n  var route = start ? '^' : '';\n  var isEndDelimited = tokens.length === 0; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\n    } else {\n      var capture = token.repeat ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*' : token.pattern;\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?';\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?';\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')';\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?';\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';\n  }\n\n  return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys);\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path, keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path, keys, options);\n}","import axios from 'axios/index';\n\nexport const GET_MAILS = '[MAIL APP] GET MAILS';\nexport const GET_MAIL = '[MAIL APP] GET MAIL';\nexport const UPDATE_MAILS = '[MAIL APP] UPDATE MAILS';\nexport const SELECT_ALL_MAILS = '[MAILS] SELECT ALL MAILS';\nexport const DESELECT_ALL_MAILS = '[MAILS] DESELECT ALL MAILS';\nexport const TOGGLE_IN_SELECTED_MAILS = '[MAILS] TOGGLE IN SELECTED MAILS';\nexport const SELECT_MAILS_BY_PARAMETER = '[MAILS] SELECT MAILS BY PARAMETER';\nexport const SET_FOLDER_ON_SELECTED_MAILS = '[MAILS] SET FOLDER ON SELECTED MAILS';\nexport const TOGGLE_LABEL_ON_SELECTED_MAILS = '[MAILS] TOGGLE LABEL ON SELECTED MAILS';\nexport const SET_SEARCH_TEXT = '[MAILS] SET SEARCH TEXT';\n\nexport function getMails(routeParams)\n{\n    const request = axios.get('/api/mail-app/mails', {\n        params: routeParams\n    });\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type       : GET_MAILS,\n                routeParams: routeParams,\n                payload    : response.data\n            })\n        );\n}\n\nexport function updateMails()\n{\n    return (dispatch, getState) => {\n\n        const {routeParams} = getState().mailApp.mails;\n\n        const request = axios.get('/api/mail-app/mails', {\n            params: routeParams\n        });\n\n        return request.then((response) =>\n            dispatch({\n                type   : UPDATE_MAILS,\n                payload: response.data\n            })\n        );\n    }\n}\n\nexport function selectAllMails()\n{\n    return {\n        type: SELECT_ALL_MAILS\n    }\n}\n\nexport function deselectAllMails()\n{\n    return {\n        type: DESELECT_ALL_MAILS\n    }\n}\n\nexport function selectMailsByParameter(parameter, value)\n{\n    return {\n        type   : SELECT_MAILS_BY_PARAMETER,\n        payload: {\n            parameter,\n            value\n        }\n    }\n}\n\nexport function toggleInSelectedMails(mailId)\n{\n    return {\n        type: TOGGLE_IN_SELECTED_MAILS,\n        mailId\n    }\n}\n\nexport function setSearchText(event)\n{\n    return {\n        type      : SET_SEARCH_TEXT,\n        searchText: event.target.value.toLowerCase()\n    }\n}\n\nexport function setFolderOnSelectedMails(id)\n{\n    return (dispatch, getState) => {\n        const selectedMailIds = getState().mailApp.mails.selectedMailIds;\n\n        const request = axios.post('/api/mail-app/set-folder', {\n            selectedMailIds,\n            folderId: id\n        });\n\n        return request.then((response) => {\n                dispatch({\n                    type: SET_FOLDER_ON_SELECTED_MAILS\n                });\n                return dispatch(updateMails())\n            }\n        );\n    }\n}\n\nexport function toggleLabelOnSelectedMails(id)\n{\n    return (dispatch, getState) => {\n        const selectedMailIds = getState().mailApp.mails.selectedMailIds;\n\n        const request = axios.post('/api/mail-app/toggle-label', {\n            selectedMailIds,\n            labelId: id\n        });\n\n        return request.then((response) => {\n                dispatch({\n                    type: TOGGLE_LABEL_ON_SELECTED_MAILS\n                });\n                return dispatch(updateMails())\n            }\n        );\n    }\n}\n","import axios from 'axios/index';\n\nexport const GET_MAIL = '[MAIL APP] GET MAIL';\nexport const UPDATE_MAIL = '[MAIL APP] UPDATE MAIL';\nexport const TOGGLE_STAR = '[MAIL APP] TOGGLE STAR MAIL';\nexport const TOGGLE_IMPORTANT = '[MAIL APP] TOGGLE IMPORTANT MAIL';\n\nexport function getMail(routeParams)\n{\n    const request = axios.get('/api/mail-app/mail', {\n        params: routeParams\n    });\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type       : GET_MAIL,\n                routeParams: routeParams,\n                payload    : response.data\n            })\n        );\n}\n\nexport function toggleStar(mail)\n{\n    const newMail = {\n        ...mail,\n        starred: !mail.starred\n    };\n    return (dispatch) => {\n        dispatch({type: TOGGLE_STAR});\n        return dispatch(updateMail(newMail));\n    }\n}\n\nexport function toggleImportant(mail)\n{\n    const newMail = {\n        ...mail,\n        important: !mail.important\n    };\n\n    return (dispatch) => {\n        dispatch({type: TOGGLE_IMPORTANT});\n        return dispatch(updateMail(newMail));\n    }\n}\n\n\nexport function updateMail(mail)\n{\n    const request = axios.post('/api/mail-app/update-mail', mail);\n\n    return (dispatch) =>\n        request.then((response) => {\n                return dispatch({\n                    type   : UPDATE_MAIL,\n                    payload: response.data\n                })\n            }\n        );\n}\n","import axios from 'axios/index';\n\nexport const GET_FOLDERS = '[MAIL APP] GET FOLDERS';\n\nexport function getFolders()\n{\n    const request = axios.get('/api/mail-app/folders');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_FOLDERS,\n                payload: response.data\n            })\n        );\n}","import axios from 'axios/index';\n\nexport const GET_LABELS = '[MAIL APP] GET LABELS';\n\nexport function getLabels()\n{\n    const request = axios.get('/api/mail-app/labels');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_LABELS,\n                payload: response.data\n            })\n        );\n}\n\n","import axios from 'axios/index';\n\nexport const GET_FILTERS = '[MAIL APP] GET FILTERS';\n\nexport function getFilters()\n{\n    const request = axios.get('/api/mail-app/filters');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_FILTERS,\n                payload: response.data\n            })\n        );\n}\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n    root : {\n        display        : 'flex',\n        alignItems     : 'center',\n        height         : 21,\n        borderRadius   : 2,\n        padding        : '0 6px',\n        fontSize       : 11,\n        backgroundColor: 'rgba(0,0,0,.08);'\n    },\n    color: {\n        width       : 8,\n        height      : 8,\n        marginRight : 4,\n        borderRadius: '50%'\n    }\n});\n\nfunction MailChip({classes, title, color, className})\n{\n    return (\n        <div className={classNames(classes.root, className)}>\n            <div className={classes.color} style={{backgroundColor: color}}/>\n            <div>{title}</div>\n        </div>\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(MailChip);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {withRouter} from 'react-router-dom';\nimport {Avatar, Typography, Checkbox, ListItem} from '@material-ui/core';\nimport MailChip from '../MailChip';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as Actions from '../store/actions/index';\nimport classNames from 'classnames';\nimport _ from '@lodash';\n\nconst pathToRegexp = require('path-to-regexp');\n\nconst styles = theme => ({\n    mailList: {\n        padding: 0\n    },\n    mailItem: {\n        borderBottom: '1px solid  ' + theme.palette.divider,\n\n        '&.unread'  : {\n            background: 'rgba(0,0,0,0.03)'\n        },\n        '&.selected': {\n            '&::after': {\n                content        : '\"\"',\n                position       : 'absolute',\n                left           : 0,\n                display        : 'block',\n                height         : '100%',\n                width          : 3,\n                backgroundColor: theme.palette.primary.main\n            }\n        }\n    },\n    avatar  : {\n        backgroundColor: theme.palette.primary[500]\n    },\n    labels  : {}\n});\n\nclass MailListItem extends Component {\n\n    render()\n    {\n        const {mail, labels, classes, match, history, selectedMailIds, toggleInSelectedMails} = this.props;\n        const toPath = pathToRegexp.compile(match.path);\n\n        const checked = selectedMailIds.length > 0 && selectedMailIds.find(id => id === mail.id) !== undefined;\n\n        return (\n            <ListItem\n                dense\n                button\n                onClick={() => history.push(toPath(\n                    {\n                        ...match.params,\n                        mailId: mail.id\n                    }\n                ))}\n                className={classNames(classes.mailItem, checked && \"selected\", !mail.read && \"unread\", \"py-16 pl-0 pr-8 sm:pl-8 sm:pr-24\")}>\n\n                <Checkbox\n                    tabIndex={-1}\n                    disableRipple\n                    checked={checked}\n                    onChange={() => toggleInSelectedMails(mail.id)}\n                    onClick={(ev) => ev.stopPropagation()}\n                />\n\n                <div className=\"flex flex-1 flex-col relative overflow-hidden\">\n\n                    <div className=\"flex items-center justify-between px-16 pb-8\">\n                        <div className=\"flex items-center\">\n                            {mail.from.avatar ? (\n                                <Avatar className=\"mr-8\" alt={mail.from.name} src={mail.from.avatar}/>\n                            ) : (\n                                <Avatar className={classNames(classes.avatar, \"mr-8\")}>\n                                    {mail.from.name[0]}\n                                </Avatar>\n                            )}\n                            <Typography variant=\"subtitle1\">{mail.from.name}</Typography>\n                        </div>\n                        <Typography variant=\"subtitle1\">{mail.time}</Typography>\n                    </div>\n\n                    <div className=\"flex flex-col px-16 py-0\">\n                        <Typography className=\"truncate\">{mail.subject}</Typography>\n                        <Typography color=\"textSecondary\" className=\"truncate\">{_.truncate(mail.message.replace(/<(?:.|\\n)*?>/gm, ''), {'length': 180})}</Typography>\n                    </div>\n\n                    <div className={classNames(classes.labels, \"flex justify-end\")}>\n                        {labels && mail.labels.map(label => (\n                            <MailChip className=\"mr-4\" title={_.find(labels, {id: label}).title} color={_.find(labels, {id: label}).color} key={label}/>\n                        ))}\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        toggleInSelectedMails: Actions.toggleInSelectedMails\n    }, dispatch);\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        selectedMailIds: mailApp.mails.selectedMailIds,\n        labels         : mailApp.labels\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(MailListItem)));\n","import React, {Component} from 'react';\nimport {FuseUtils, FuseAnimate, FuseAnimateGroup} from '@fuse';\nimport {withStyles} from '@material-ui/core/styles';\nimport * as Actions from '../store/actions';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {List, Typography} from '@material-ui/core';\nimport MailListItem from './MailListItem';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    mailList: {\n        padding: 0\n    },\n    mailItem: {},\n    avatar  : {\n        backgroundColor: theme.palette.primary[500]\n    },\n    labels  : {}\n});\n\nclass MailList extends Component {\n\n    componentDidMount()\n    {\n        this.props.getMails(this.props.match.params);\n    }\n\n    componentDidUpdate(prevProps, prevState)\n    {\n        if ( !_.isEqual(this.props.location, prevProps.location) )\n        {\n            this.props.getMails(this.props.match.params);\n        }\n    }\n\n    getFilteredArray = (entities, searchText) => {\n        const arr = Object.keys(entities).map((id) => entities[id]);\n        if ( searchText.length === 0 )\n        {\n            return arr;\n        }\n        return FuseUtils.filterArrayByString(arr, searchText);\n    };\n\n    render()\n    {\n        const {mails, classes, searchText} = this.props;\n\n        const arr = this.getFilteredArray(mails, searchText);\n\n        if ( arr.length === 0 )\n        {\n            return (\n                <FuseAnimate delay={100}>\n                    <div className=\"flex flex-1 items-center justify-center h-full\">\n                        <Typography color=\"textSecondary\" variant=\"h5\">\n                            There are no messages!\n                        </Typography>\n                    </div>\n                </FuseAnimate>\n            );\n        }\n\n        return (\n            <List className={classes.mailList}>\n                <FuseAnimateGroup\n                    enter={{\n                        animation: \"transition.slideUpBigIn\"\n                    }}\n                >\n                    {\n                        arr.map((mail) => (\n                                <MailListItem mail={mail} key={mail.id}/>\n                            )\n                        )\n                    }\n                </FuseAnimateGroup>\n            </List>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getMails: Actions.getMails\n    }, dispatch);\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        mails     : mailApp.mails.entities,\n        searchText: mailApp.mails.searchText\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(MailList)));\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport {Avatar, Divider, Icon, IconButton, Typography} from '@material-ui/core';\nimport * as Actions from '../store/actions/index';\nimport MailChip from '../MailChip';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {FuseAnimate} from '@fuse';\nimport {withRouter} from 'react-router-dom';\nimport classNames from 'classnames';\nimport _ from '@lodash';\n\nconst styles = theme => ({});\n\nclass MailDetails extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {showDetails: false};\n    }\n\n    componentDidMount()\n    {\n        this.props.getMail(this.props.match.params);\n    }\n\n    render()\n    {\n        const {classes, mail, labels} = this.props;\n\n        if ( !mail )\n        {\n            return '';\n        }\n\n        return (\n            <div className=\"p-16 sm:p-24\">\n                <div className=\"flex items-center justify-between overflow-hidden\">\n\n                    <div className=\"flex flex-col\">\n                        <FuseAnimate delay={100}>\n                            <Typography variant=\"subtitle1\" className=\"flex\">{mail.subject}</Typography>\n                        </FuseAnimate>\n\n                        {labels && mail.labels.length > 0 && (\n                            <div className=\"flex flex-wrap mt-8\">\n                                {mail.labels.map(label => (\n                                    <MailChip className=\"mt-4 mr-4\" title={_.find(labels, {id: label}).title} color={_.find(labels, {id: label}).color} key={label}/>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n\n                </div>\n\n                <Divider className=\"my-16\"/>\n\n                <FuseAnimate animation=\"transition.slideUpIn\" delay={200}>\n                    <div>\n\n                        <div className=\"flex items-start justify-between\">\n\n                            <div className=\"flex items-center justify-start\">\n                                {mail.from.avatar ?\n                                    (\n                                        <Avatar className=\"mr-8\" alt={mail.from.name} src={mail.from.avatar}/>\n                                    )\n                                    :\n                                    (\n                                        <Avatar className={classNames(classes.avatar, \"mr-8\")}>\n                                            {mail.from.name[0]}\n                                        </Avatar>\n                                    )\n                                }\n\n                                <div className=\"flex flex-col\">\n                                    <span>{mail.from.name}</span>\n                                    <Typography component=\"div\" color=\"textSecondary\" variant=\"body1\" className=\"flex items-center justify-start\">\n                                        <div>to</div>\n                                        <div className=\"ml-4\">{mail.to[0].name}</div>\n                                    </Typography>\n                                </div>\n                            </div>\n                            <IconButton>\n                                <Icon>more_vert</Icon>\n                            </IconButton>\n                        </div>\n\n                        <div className=\"my-16\">\n                            <Typography\n                                color=\"primary\"\n                                className=\"cursor-pointer underline mb-8\"\n                                onClick={() => {\n                                    this.setState({showDetails: !this.state.showDetails});\n                                }}\n                            >\n                                {this.state.showDetails ?\n                                    (\n                                        <span>Hide Details</span>\n                                    )\n                                    :\n                                    (\n                                        <span>Show Details</span>\n                                    )\n                                }\n                            </Typography>\n\n                            {this.state.showDetails && (\n                                <div className=\"flex\">\n                                    <Typography variant=\"body2\" className=\"flex flex-col\">\n                                        <span>From:</span>\n                                        <span>To:</span>\n                                        <span>Date:</span>\n                                    </Typography>\n\n                                    <Typography variant=\"body2\" color=\"textSecondary\" className=\"pl-4 flex flex-col\">\n                                        <span>{mail.from.email}</span>\n                                        <span>{mail.to[0].email}</span>\n                                        <span>{mail.time}</span>\n                                    </Typography>\n                                </div>\n                            )}\n                        </div>\n\n                        <Typography variant=\"body2\" dangerouslySetInnerHTML={{__html: mail.message}}/>\n\n                        <Divider className=\"my-16\"/>\n\n                        {mail.attachments && (\n                            <div>\n                                <Typography variant=\"subtitle1\" className=\"mb-16\">\n                                    <span>Attachments</span>\n                                    <span className=\"ml-4\">({mail.attachments.length})</span>\n                                </Typography>\n\n                                <div className=\"flex flex-wrap\">\n                                    {mail.attachments.map(attachment => (\n                                        <div className=\"w-192 pr-16 pb-16\" key={attachment.fileName}>\n                                            <img className=\"w-full rounded-4\" src={attachment.preview} alt={attachment.fileName}/>\n                                            <div className=\"flex flex-col\">\n                                                <Typography color=\"primary\" className=\"underline cursor-pointer\" onClick={event => event.preventDefault()}>View</Typography>\n                                                <Typography color=\"primary\" className=\"underline cursor-pointer\" onClick={event => event.preventDefault()}>Download</Typography>\n                                                <Typography>({attachment.size})</Typography>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </FuseAnimate>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getMail: Actions.getMail\n    }, dispatch);\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        mail  : mailApp.mail,\n        labels: mailApp.labels\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(MailDetails)));\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport {Checkbox, Icon, IconButton, Menu, MenuItem} from '@material-ui/core';\nimport * as Actions from '../store/actions/index';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport {withRouter} from 'react-router-dom';\n\nconst styles = theme => ({\n    root              : {\n        display: 'flex'\n    },\n    selectMenuButton  : {\n        width: 24\n    },\n    toolbarSeparator  : {\n        height     : 48,\n        width      : 1,\n        borderRight: '1px solid ' + theme.palette.divider,\n        margin     : '0 12px'\n    },\n    mailListActions   : {\n        [theme.breakpoints.down('sm')]: {\n            '&.mail-selected': {\n                display: 'none'\n            }\n        }\n    },\n    deselectMailButton: {\n        display                       : 'none',\n        [theme.breakpoints.down('sm')]: {\n            '&.mail-selected': {\n                display: 'block'\n            }\n        }\n    }\n});\n\nclass MailToolbar extends Component {\n    state = {\n        selectMenu : null,\n        foldersMenu: null,\n        labelsMenu : null\n    };\n\n    handleMenuOpen = (event, menu) => {\n        this.setState({[menu]: event.currentTarget});\n    };\n\n    handleMenuClose = (event, menu) => {\n        this.setState({[menu]: null});\n    };\n\n    handleChange = () => event => {\n        event.target.checked ? this.props.selectAllMails() : this.props.deselectAllMails();\n    };\n\n    render()\n    {\n        const {classes, mails, selectAllMails, deselectAllMails, selectMailsByParameter, setFolderOnSelectedMails, toggleLabelOnSelectedMails, folders, labels, selectedMailIds} = this.props;\n        const {foldersMenu, selectMenu, labelsMenu} = this.state;\n\n        return (\n            <div className={classNames(classes.mailListActions, \"flex flex-1 items-center sm:px-8\")}>\n\n                <Checkbox\n                    onChange={this.handleChange()}\n                    checked={selectedMailIds.length === Object.keys(mails).length && selectedMailIds.length > 0}\n                    indeterminate={selectedMailIds.length !== Object.keys(mails).length && selectedMailIds.length > 0}\n                />\n\n                <IconButton\n                    className={classes.selectMenuButton}\n                    aria-label=\"More\"\n                    aria-owns={selectMenu ? 'select-menu' : null}\n                    aria-haspopup=\"true\"\n                    onClick={(ev) => this.handleMenuOpen(ev, 'selectMenu')}\n                >\n                    <Icon>arrow_drop_down</Icon>\n                </IconButton>\n\n                <Menu\n                    id=\"select-menu\"\n                    anchorEl={selectMenu}\n                    open={Boolean(selectMenu)}\n                    onClose={(ev) => this.handleMenuClose(ev, 'selectMenu')}\n                >\n                    <MenuItem\n                        onClick={(ev) => {\n                            selectAllMails();\n                            this.handleMenuClose(ev, 'selectMenu');\n                        }}\n                    >\n                        All\n                    </MenuItem>\n                    <MenuItem\n                        onClick={(ev) => {\n                            deselectAllMails();\n                            this.handleMenuClose(ev, 'selectMenu')\n                        }}\n                    >\n                        None\n                    </MenuItem>\n                    <MenuItem\n                        onClick={(ev) => {\n                            selectMailsByParameter('read', true);\n                            this.handleMenuClose(ev, 'selectMenu');\n                        }}\n                    >\n                        Read\n                    </MenuItem>\n                    <MenuItem\n                        onClick={(ev) => {\n                            selectMailsByParameter('read', false);\n                            this.handleMenuClose(ev, 'selectMenu');\n                        }}\n                    >\n                        Unread\n                    </MenuItem>\n                    <MenuItem\n                        onClick={(ev) => {\n                            selectMailsByParameter('starred', true);\n                            this.handleMenuClose(ev, 'selectMenu');\n                        }}\n                    >\n                        Starred\n                    </MenuItem>\n                    <MenuItem\n                        onClick={(ev) => {\n                            selectMailsByParameter('starred', false);\n                            this.handleMenuClose(ev, 'selectMenu');\n                        }}\n                    >\n                        Unstarred\n                    </MenuItem>\n                    <MenuItem\n                        onClick={(ev) => {\n                            selectMailsByParameter('important', true);\n                            this.handleMenuClose(ev, 'selectMenu');\n                        }}\n                    >\n                        Important\n                    </MenuItem>\n                    <MenuItem\n                        onClick={(ev) => {\n                            selectMailsByParameter('important', false);\n                            this.handleMenuClose(ev, 'selectMenu');\n                        }}\n                    >\n                        Unimportant\n                    </MenuItem>\n                </Menu>\n\n                {selectedMailIds.length > 0 && (\n                    <React.Fragment>\n\n                        <div className={classes.toolbarSeparator}/>\n\n                        <IconButton\n                            onClick={(ev) => setFolderOnSelectedMails(4)}\n                            aria-label=\"Delete\"\n                        >\n                            <Icon>delete</Icon>\n                        </IconButton>\n\n                        <IconButton\n                            aria-label=\"More\"\n                            aria-owns={foldersMenu ? 'folders-menu' : null}\n                            aria-haspopup=\"true\"\n                            onClick={(ev) => this.handleMenuOpen(ev, 'foldersMenu')}\n                        >\n                            <Icon>folder</Icon>\n                        </IconButton>\n\n                        <Menu\n                            id=\"folders-menu\"\n                            anchorEl={foldersMenu}\n                            open={Boolean(foldersMenu)}\n                            onClose={(ev) => this.handleMenuClose(ev, 'foldersMenu')}\n                        >\n                            {folders.length > 0 && folders.map((folder) => (\n                                <MenuItem\n                                    onClick={(ev) => {\n                                        setFolderOnSelectedMails(folder.id);\n                                        this.handleMenuClose(ev, 'foldersMenu')\n                                    }}\n                                    key={folder.id}\n                                >\n                                    {folder.title}\n                                </MenuItem>\n                            ))}\n                        </Menu>\n\n                        <IconButton\n                            aria-label=\"More\"\n                            aria-owns={labelsMenu ? 'labels-menu' : null}\n                            aria-haspopup=\"true\"\n                            onClick={(ev) => this.handleMenuOpen(ev, 'labelsMenu')}\n                        >\n                            <Icon>label</Icon>\n                        </IconButton>\n\n                        <Menu\n                            id=\"folders-menu\"\n                            anchorEl={labelsMenu}\n                            open={Boolean(labelsMenu)}\n                            onClose={(ev) => this.handleMenuClose(ev, 'labelsMenu')}\n                        >\n                            {labels.length > 0 && labels.map((label) => (\n                                <MenuItem\n                                    onClick={(ev) => {\n                                        toggleLabelOnSelectedMails(label.id);\n                                        this.handleMenuClose(ev, 'labelsMenu')\n                                    }}\n                                    key={label.id}\n                                >\n                                    {label.title}\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        selectAllMails            : Actions.selectAllMails,\n        deselectAllMails          : Actions.deselectAllMails,\n        selectMailsByParameter    : Actions.selectMailsByParameter,\n        setFolderOnSelectedMails  : Actions.setFolderOnSelectedMails,\n        toggleLabelOnSelectedMails: Actions.toggleLabelOnSelectedMails\n    }, dispatch);\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        mails          : mailApp.mails.entities,\n        selectedMailIds: mailApp.mails.selectedMailIds,\n        folders        : mailApp.folders,\n        labels         : mailApp.labels,\n        filters        : mailApp.filters\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(MailToolbar)));\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport {Icon, IconButton} from '@material-ui/core';\nimport * as Actions from '../store/actions/index';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport {withRouter} from 'react-router-dom';\nimport {FuseAnimate} from '@fuse';\n\nconst pathToRegexp = require('path-to-regexp');\n\nconst styles = theme => ({\n    root: {}\n});\n\nclass MailToolbar extends Component {\n\n    render()\n    {\n        const {classes, mail, match, history, toggleStar, toggleImportant} = this.props;\n        const {params} = match;\n        const toPath = pathToRegexp.compile(match.path);\n        const matchParams = {...params};\n        delete matchParams['mailId'];\n        const deselectUrl = toPath(matchParams);\n\n        if ( !mail )\n        {\n            return '';\n        }\n\n        return (\n            <div className={classNames(classes.root, \"flex flex-1 items-center justify-between overflow-hidden sm:px-16\")}>\n                <IconButton onClick={() => history.push(deselectUrl)}>\n                    <Icon>arrow_back</Icon>\n                </IconButton>\n\n                <div className=\"flex items-center justify-start\" aria-label=\"Toggle star\">\n                    <FuseAnimate animation=\"transition.expandIn\" delay={100}>\n                        <IconButton onClick={() => toggleStar(mail)}>\n                            {mail.starred ?\n                                (\n                                    <Icon>star</Icon>\n                                )\n                                :\n                                (\n                                    <Icon>star_border</Icon>\n                                )\n                            }\n                        </IconButton>\n                    </FuseAnimate>\n                    <FuseAnimate animation=\"transition.expandIn\" delay={100}>\n                        <IconButton onClick={() => toggleImportant(mail)}>\n                            {mail.important ?\n                                (\n                                    <Icon>label</Icon>\n                                )\n                                :\n                                (\n                                    <Icon>label_outline</Icon>\n                                )\n                            }\n                        </IconButton>\n                    </FuseAnimate>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        toggleStar     : Actions.toggleStar,\n        toggleImportant: Actions.toggleImportant\n    }, dispatch);\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        mail: mailApp.mail\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps, mapDispatchToProps)(MailToolbar)));\n","import React, {Component} from 'react';\nimport {Hidden, Icon, IconButton, Input, MuiThemeProvider, Paper} from '@material-ui/core';\nimport * as Actions from './store/actions';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {FuseSelectedTheme} from '@fuse';\n\nclass MailAppHeader extends Component {\n\n    render()\n    {\n        const {setSearchText, searchText, pageLayout} = this.props;\n        return (\n            <MuiThemeProvider theme={FuseSelectedTheme}>\n                <div className=\"flex flex-1\">\n                    <Paper className=\"flex items-center w-full h-48 sm:h-56 p-16 pl-4 md:pl-16 rounded-8 \" elevation={1}>\n                        <Hidden lgUp>\n                            <IconButton\n                                onClick={(ev) => pageLayout().toggleLeftSidebar()}\n                                aria-label=\"open left sidebar\"\n                            >\n                                <Icon>menu</Icon>\n                            </IconButton>\n                        </Hidden>\n\n                        <Icon color=\"action\">search</Icon>\n\n                        <Input\n                            placeholder=\"Search\"\n                            className=\"pl-16\"\n                            disableUnderline\n                            fullWidth\n                            value={searchText}\n                            inputProps={{\n                                'aria-label': 'Search'\n                            }}\n                            onChange={setSearchText}\n                        />\n                    </Paper>\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        setSearchText: Actions.setSearchText\n    }, dispatch);\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        searchText: mailApp.mails.searchText\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MailAppHeader);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport {Icon, MenuItem, TextField} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {FuseAnimate} from '@fuse';\n\nconst styles = theme => ({\n    root             : {},\n    logo             : {},\n    logoIcon         : {\n        fontSize: '32px!important'\n    },\n    logoText         : {\n        fontSize: 24\n    },\n    accountSelect    : {},\n    accountSelectMenu: {}\n});\n\nclass MailAppSidebarHeader extends Component {\n\n    state = {\n        selectedAccount: 'creapond'\n    };\n\n    onAccountChange = (ev) => {\n        this.setState({selectedAccount: ev.target.value});\n    };\n\n    accounts = {\n        'creapond'    : 'johndoe@creapond.com',\n        'withinpixels': 'johndoe@withinpixels.com'\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classNames(classes.root, \"flex flex-col justify-center h-full p-24\")}>\n\n                <div className={classNames(classes.logo, \"flex items-center flex-1\")}>\n                    <FuseAnimate animation=\"transition.expandIn\" delay={300}>\n                        <Icon className={classNames(classes.logoIcon, \"mr-16\")}>mail</Icon>\n                    </FuseAnimate>\n                    <FuseAnimate animation=\"transition.slideLeftIn\" delay={300}>\n                        <span className={classes.logoText}>Mailbox</span>\n                    </FuseAnimate>\n                </div>\n                <FuseAnimate animation=\"transition.slideUpIn\" delay={300}>\n                    <TextField\n                        id=\"account-selection\"\n                        select\n                        label={this.state.selectedAccount}\n                        className={classes.accountSelect}\n                        value={this.state.selectedAccount}\n                        onChange={this.onAccountChange}\n                        SelectProps={{\n                            MenuProps: {\n                                className: classes.accountSelectMenu\n                            }\n                        }}\n                        placeholder=\"Select Account\"\n                        margin=\"normal\"\n                    >\n                        {Object.keys(this.accounts).map((key, value) => (\n                            <MenuItem key={key} value={key}>\n                                {this.accounts[key]}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FuseAnimate>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(MailAppSidebarHeader);\n","import React, {Component} from 'react';\nimport {TextField, Button, Dialog, DialogActions, DialogContent, Icon, IconButton, Typography, Toolbar, AppBar} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    composeButton     : {\n        width: '100%'\n    },\n    formControl       : {\n        marginTop   : 8,\n        marginBottom: 16\n    },\n    attachmentList    : {\n        paddingTop: 8\n    },\n    attachment        : {\n        fontSize       : 13,\n        backgroundColor: 'rgba(0, 0, 0, 0.08)',\n        border         : '1px solid rgba(0, 0, 0, 0.16)',\n        paddingLeft    : 16,\n        marginBottom   : 8,\n        borderRadius   : 2,\n        display        : 'flex',\n        justifyContent : 'space-between',\n        alignItems     : 'center'\n    },\n    attachmentFilename: {\n        fontWeight: 600\n    },\n    attachmentSize    : {\n        marginLeft: 8,\n        fontWeight: 300\n    }\n});\n\nclass MailCompose extends Component {\n    state = {\n        composeDialog: false,\n        from         : 'johndoe@creapond.com',\n        to           : '',\n        cc           : '',\n        bcc          : '',\n        subject      : '',\n        message      : ''\n    };\n\n    openComposeDialog = () => {\n        this.setState({composeDialog: true});\n    };\n\n    closeComposeDialog = () => {\n        this.setState({composeDialog: false});\n    };\n\n    handleChange = (event) => {\n        this.setState(_.set({...this.state}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        function Attachment({fileName, size})\n        {\n            return (\n                <div className={classes.attachment}>\n                    <div className=\"flex\">\n                        <Typography variant=\"caption\" className={classes.attachmentFilename}>{fileName}</Typography>\n                        <Typography variant=\"caption\" className={classes.attachmentSize}>({size})</Typography>\n                    </div>\n                    <IconButton>\n                        <Icon className=\"text-16\">close</Icon>\n                    </IconButton>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"p-24\">\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.composeButton}\n                    onClick={this.openComposeDialog}\n                >\n                    COMPOSE\n                </Button>\n\n                <Dialog\n                    open={this.state.composeDialog}\n                    onClose={this.closeComposeDialog}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <AppBar position=\"static\">\n                        <Toolbar className=\"flex w-full\">\n                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                New Message\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n\n                    <DialogContent classes={{root: \"p-16 pb-0 sm:p-24 sm:pb-0\"}}>\n\n                        <TextField\n                            className={classes.formControl}\n                            label=\"From\"\n                            id=\"from\"\n                            name=\"from\"\n                            value={this.state.from}\n                            onChange={this.handleChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            disabled\n                        />\n\n                        <TextField\n                            className={classes.formControl}\n                            label=\"To\"\n                            autoFocus\n                            id=\"to\"\n                            name=\"to\"\n                            value={this.state.to}\n                            onChange={this.handleChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            required\n                        />\n\n                        <TextField\n                            className={classes.formControl}\n                            label=\"Cc\"\n                            id=\"cc\"\n                            name=\"cc\"\n                            value={this.state.cc}\n                            onChange={this.handleChange}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n\n                        <TextField\n                            className={classes.formControl}\n                            label=\"Bcc\"\n                            id=\"bcc\"\n                            name=\"bcc\"\n                            value={this.state.bcc}\n                            onChange={this.handleChange}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n\n                        <TextField\n                            className={classes.formControl}\n                            label=\"Subject\"\n                            id=\"subject\"\n                            name=\"subject\"\n                            value={this.state.subject}\n                            onChange={this.handleChange}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n\n                        <TextField\n                            className={classes.formControl}\n                            id=\"message\"\n                            name=\"message\"\n                            onChange={this.handleChange}\n                            label=\"Message\"\n                            type=\"text\"\n                            multiline\n                            rows={5}\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n\n                        <div className={classes.attachmentList}>\n                            <Attachment fileName=\"attachment-2.doc\" size=\"12 kb\"/>\n                            <Attachment fileName=\"attachment-1.jpg\" size=\"350 kb\"/>\n                        </div>\n                    </DialogContent>\n\n                    <DialogActions className=\"justify-between pl-8 sm:pl-16\">\n                        <div>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.closeComposeDialog}>\n                                Send\n                            </Button>\n                            <IconButton>\n                                <Icon>attach_file</Icon>\n                            </IconButton>\n                        </div>\n                        <IconButton onClick={this.closeComposeDialog}>\n                            <Icon>delete</Icon>\n                        </IconButton>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n\nexport default withStyles(styles, {withTheme: true})(MailCompose);\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport {Icon, List, ListItem, ListItemText, ListSubheader} from '@material-ui/core';\nimport {NavLink, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport MailCompose from './MailCompose';\nimport {FuseAnimate} from '@fuse';\n\nconst styles = theme => ({\n    listWrapper  : {},\n    listItem     : {\n        color              : 'inherit!important',\n        textDecoration     : 'none!important',\n        height             : 40,\n        width              : 'calc(100% - 16px)',\n        borderRadius       : '0 20px 20px 0',\n        paddingLeft        : 24,\n        paddingRight       : 12,\n        '&.active'         : {\n            backgroundColor    : theme.palette.secondary.main,\n            color              : theme.palette.secondary.contrastText + '!important',\n            pointerEvents      : 'none',\n            '& .list-item-icon': {\n                color: 'inherit'\n            }\n        },\n        '& .list-item-icon': {\n            fontSize: 16,\n            width   : 16,\n            height  : 16\n        }\n    },\n    listSubheader: {\n        paddingRight: 24,\n        paddingLeft : 24\n    }\n});\n\nfunction MailAppSidebarContent({classes, folders, filters, labels})\n{\n    return (\n        <FuseAnimate animation=\"transition.slideUpIn\" delay={400}>\n            <div>\n                <MailCompose/>\n\n                <div className={classes.listWrapper}>\n\n                    <List>\n\n                        <ListSubheader className={classes.listSubheader} disableSticky>FOLDERS</ListSubheader>\n\n                        {folders.length > 0 && folders.map((folder) => (\n                            <ListItem\n                                button\n                                component={NavLink}\n                                to={'/apps/mail/' + folder.handle} key={folder.id}\n                                activeClassName=\"active\"\n                                className={classes.listItem}\n                            >\n                                <Icon className=\"list-item-icon\" color=\"action\">{folder.icon}</Icon>\n                                <ListItemText primary={folder.title} disableTypography={true}/>\n                            </ListItem>\n                        ))}\n                    </List>\n\n                    <List>\n\n                        <ListSubheader className={classes.listSubheader} disableSticky>FILTERS</ListSubheader>\n\n                        {filters.length > 0 && filters.map((filter) => (\n                            <ListItem\n                                button\n                                component={NavLink}\n                                to={'/apps/mail/filter/' + filter.handle}\n                                activeClassName=\"active\"\n                                className={classes.listItem}\n                                key={filter.id}\n                            >\n                                <Icon className=\"list-item-icon\" color=\"action\">{filter.icon}</Icon>\n                                <ListItemText primary={filter.title} disableTypography={true}/>\n                            </ListItem>\n                        ))}\n                    </List>\n\n                    <List>\n\n                        <ListSubheader className={classes.listSubheader} disableSticky>LABELS</ListSubheader>\n\n                        {labels && labels.map((label) => (\n                            <ListItem\n                                button\n                                component={NavLink}\n                                to={'/apps/mail/label/' + label.handle}\n                                key={label.id}\n                                className={classes.listItem}\n                            >\n                                <Icon className=\"list-item-icon\" style={{color: label.color}} color=\"action\">label</Icon>\n                                <ListItemText primary={label.title} disableTypography={true}/>\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </div>\n        </FuseAnimate>\n    );\n}\n\nfunction mapStateToProps({mailApp})\n{\n    return {\n        folders: mailApp.folders,\n        labels : mailApp.labels,\n        filters: mailApp.filters\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(withRouter(connect(mapStateToProps)(MailAppSidebarContent)));\n","import * as Actions from '../actions';\nimport _ from '@lodash';\n\nconst initialState = {\n    entities       : [],\n    routeParams    : {},\n    selectedMailIds: [],\n    searchText     : ''\n};\n\nconst mailsReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_MAILS:\n        {\n\n            return {\n                ...state,\n                entities   : _.keyBy(action.payload, 'id'),\n                searchText : '',\n                routeParams: action.routeParams\n            };\n        }\n        case Actions.UPDATE_MAILS:\n        {\n            return {\n                ...state,\n                entities: _.keyBy(action.payload, 'id')\n            };\n        }\n        case Actions.SELECT_ALL_MAILS:\n        {\n            const arr = Object.keys(state.entities).map(k => state.entities[k]);\n\n            const selectedMailIds = arr.map(mail => mail.id);\n\n            return {\n                ...state,\n                selectedMailIds\n            };\n        }\n        case Actions.DESELECT_ALL_MAILS:\n        {\n            return {\n                ...state,\n                selectedMailIds: []\n            };\n        }\n        case Actions.SELECT_MAILS_BY_PARAMETER:\n        {\n            const filter = action.payload;\n            const arr = Object.keys(state.entities).map(k => state.entities[k]);\n            const selectedMailIds = arr.filter(mail => mail[filter.parameter] === filter.value)\n                .map(mail => mail.id);\n            return {\n                ...state,\n                selectedMailIds\n            };\n        }\n        case Actions.TOGGLE_IN_SELECTED_MAILS:\n        {\n\n            const mailId = action.mailId;\n\n            let selectedMailIds = [...state.selectedMailIds];\n\n            if ( selectedMailIds.find(id => id === mailId) !== undefined )\n            {\n                selectedMailIds = selectedMailIds.filter(id => id !== mailId);\n            }\n            else\n            {\n                selectedMailIds = [...selectedMailIds, mailId];\n            }\n\n            return {\n                ...state,\n                selectedMailIds\n            };\n        }\n        case Actions.SET_SEARCH_TEXT:\n        {\n            return {\n                ...state,\n                searchText: action.searchText\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default mailsReducer;\n","import * as Actions from '../actions';\n\nconst initialState = null;\n\nconst mailReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_MAIL:\n        {\n            return {\n                ...action.payload\n            };\n        }\n        case Actions.UPDATE_MAIL:\n        {\n            return {\n                ...action.payload\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default mailReducer;\n","import * as Actions from '../actions';\n\nconst foldersReducer = function (state = [], action) {\n    switch ( action.type )\n    {\n        case Actions.GET_FOLDERS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default foldersReducer;","import * as Actions from '../actions';\n\nconst labelsReducer = function (state = null, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_LABELS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default labelsReducer;\n","import * as Actions from '../actions';\n\nconst filtersReducer = function (state = [], action) {\n    switch ( action.type )\n    {\n        case Actions.GET_FILTERS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default filtersReducer;","import {combineReducers} from 'redux';\nimport mails from './mails.reducer';\nimport mail from './mail.reducer';\nimport folders from './folders.reducer';\nimport labels from './labels.reducer';\nimport filters from './filters.reducer';\n\nconst reducer = combineReducers({\n    mails,\n    mail,\n    folders,\n    labels,\n    filters\n});\n\nexport default reducer;\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport MailList from './mails/MailList';\nimport * as Actions from './store/actions';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport MailDetails from './mail/MailDetails';\nimport {FusePageCarded} from '@fuse';\nimport MailsToolbar from './mails/MailsToolbar';\nimport MailToolbar from './mail/MailToolbar';\nimport MailAppHeader from './MailAppHeader';\nimport MailAppSidebarHeader from './MailAppSidebarHeader';\nimport MailAppSidebarContent from './MailAppSidebarContent';\nimport withReducer from 'store/withReducer';\nimport reducer from './store/reducers';\n\nconst styles = theme => ({});\n\nclass MailApp extends Component {\n\n    componentDidMount()\n    {\n        this.props.getFilters();\n        this.props.getFolders();\n        this.props.getLabels();\n    }\n\n    render()\n    {\n        const {match} = this.props;\n        const {params} = match;\n\n        return (\n            <FusePageCarded\n                classes={{\n                    root   : \"w-full\",\n                    content: \"flex flex-col\",\n                    header : \"items-center min-h-72 h-72 sm:h-136 sm:min-h-136\"\n                }}\n                header={\n                    <MailAppHeader pageLayout={() => this.pageLayout}/>\n                }\n                contentToolbar={\n                    params.mailId ? (\n                        <MailToolbar/>\n                    ) : (\n                        <MailsToolbar/>\n                    )\n                }\n                content={\n                    params.mailId ? (\n                        <MailDetails/>\n                    ) : (\n                        <MailList/>\n                    )\n                }\n                leftSidebarHeader={\n                    <MailAppSidebarHeader/>\n                }\n                leftSidebarContent={\n                    <MailAppSidebarContent/>\n                }\n                onRef={instance => {\n                    this.pageLayout = instance;\n                }}\n                innerScroll\n            />\n        )\n    };\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getFilters: Actions.getFilters,\n        getFolders: Actions.getFolders,\n        getLabels : Actions.getLabels\n    }, dispatch);\n}\n\nexport default withReducer('mailApp', reducer)(withStyles(styles, {withTheme: true})(connect(null, mapDispatchToProps)(MailApp)));\n"],"sourceRoot":""}