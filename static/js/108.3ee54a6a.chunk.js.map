{"version":3,"sources":["main/content/components/material-ui/material-ui-examples/text-fields/TextFields.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/TextFields.js?75eb","main/content/components/material-ui/material-ui-examples/text-fields/OutlinedTextFields.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/OutlinedTextFields.js?bc88","main/content/components/material-ui/material-ui-examples/text-fields/FilledTextFields.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/FilledTextFields.js?bc42","main/content/components/material-ui/material-ui-examples/text-fields/ComposedTextField.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/ComposedTextField.js?c1d9","main/content/components/material-ui/material-ui-examples/text-fields/Inputs.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/Inputs.js?88d2","main/content/components/material-ui/material-ui-examples/text-fields/CustomizedInputs.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/CustomizedInputs.js?a7f9","main/content/components/material-ui/material-ui-examples/text-fields/InputAdornments.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/InputAdornments.js?72a9","main/content/components/material-ui/material-ui-examples/text-fields/InputWithIcon.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/InputWithIcon.js?62e4","main/content/components/material-ui/material-ui-examples/text-fields/FilledInputAdornments.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/FilledInputAdornments.js?c187","main/content/components/material-ui/material-ui-examples/text-fields/OutlinedInputAdornments.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/OutlinedInputAdornments.js?9c67","main/content/components/material-ui/material-ui-examples/text-fields/TextFieldMargins.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/TextFieldMargins.js?822a","main/content/components/material-ui/material-ui-examples/text-fields/FormattedInputs.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/text-fields/FormattedInputs.js?b787","main/content/components/material-ui/pages/TextFields.js"],"names":["currencies","value","label","TextFields","state","name","age","multiline","currency","handleChange","event","_this","setState","Object","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","classes","this","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","container","noValidate","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_10___default","id","textField","onChange","margin","defaultValue","required","error","disabled","type","InputProps","readOnly","classNames","dense","rowsMax","rows","helperText","placeholder","InputLabelProps","shrink","select","SelectProps","MenuProps","menu","map","option","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9___default","key","native","style","fullWidth","React","Component","withStyles","theme","display","flexWrap","marginLeft","spacing","unit","marginRight","width","marginTop","module","exports","OutlinedTextFields","variant","FilledTextFields","ComposedTextField","forceUpdate","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_9___default","formControl","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_12___default","htmlFor","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_11___default","aria-describedby","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_10___default","ref","labelRef","ReactDOM","findDOMNode","_material_ui_core_OutlinedInput__WEBPACK_IMPORTED_MODULE_13___default","labelWidth","offsetWidth","_material_ui_core_FilledInput__WEBPACK_IMPORTED_MODULE_8___default","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_2___default","input","inputProps","aria-label","_material_ui_core_InputBase__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_InputBase__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_colors_purple__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_colors_purple__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_colors_green__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_colors_green__WEBPACK_IMPORTED_MODULE_8___default","createMuiTheme","palette","primary","green","typography","useNextVariants","cssLabel","&$cssFocused","color","purple","cssFocused","cssUnderline","&:after","borderBottomColor","cssOutlinedInput","&$cssFocused $notchedOutline","borderColor","notchedOutline","bootstrapRoot","label + &","bootstrapInput","borderRadius","backgroundColor","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","&:focus","boxShadow","bootstrapFormLabel","root","focused","underline","ranges","InputAdornments","amount","password","weight","weightRange","showPassword","prop","handleClickShowPassword","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_15___default","startAdornment","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_12___default","position","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_10___default","withoutLabel","endAdornment","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_9___default","onClick","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_icons_VisibilityOff__WEBPACK_IMPORTED_MODULE_18___default","flexBasis","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_AccountCircle__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons_AccountCircle__WEBPACK_IMPORTED_MODULE_8___default","alignItems","item","FilledInputAdornments","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_VisibilityOff__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_13___default","OutlinedInputAdornments","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_2___default","TextMaskCustom","inputRef","other","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_7___default","react_text_mask__WEBPACK_IMPORTED_MODULE_8___default","assign","mask","placeholderChar","showMask","NumberFormatCustom","react_number_format__WEBPACK_IMPORTED_MODULE_9___default","getInputRef","onValueChange","values","thousandSeparator","prefix","FormattedInputs","textmask","numberformat","_this$state","inputComponent","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_13___default","_fuse__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles_index__WEBPACK_IMPORTED_MODULE_3__","layoutRoot","& .description","marginBottom","withTheme","_ref","header","component","href","content","iframe","require","default","raw","src","alt"],"mappings":"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","file":"static/js/108.3ee54a6a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    container: {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    textField: {\n        marginLeft : theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width      : 200\n    },\n    dense    : {\n        marginTop: 19\n    },\n    menu     : {\n        width: 200\n    }\n});\n\nconst currencies = [\n    {\n        value: 'USD',\n        label: '$'\n    },\n    {\n        value: 'EUR',\n        label: '€'\n    },\n    {\n        value: 'BTC',\n        label: '฿'\n    },\n    {\n        value: 'JPY',\n        label: '¥'\n    }\n];\n\nclass TextFields extends React.Component {\n    state = {\n        name     : 'Cat in the Hat',\n        age      : '',\n        multiline: 'Controlled',\n        currency : 'EUR'\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <form className={classes.container} noValidate autoComplete=\"off\">\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Name\"\n                    className={classes.textField}\n                    value={this.state.name}\n                    onChange={this.handleChange('name')}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-uncontrolled\"\n                    label=\"Uncontrolled\"\n                    defaultValue=\"foo\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Required\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    error\n                    id=\"standard-error\"\n                    label=\"Error\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    disabled\n                    id=\"standard-disabled\"\n                    label=\"Disabled\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-password-input\"\n                    label=\"Password\"\n                    className={classes.textField}\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-read-only-input\"\n                    label=\"Read Only\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    InputProps={{\n                        readOnly: true\n                    }}\n                />\n                <TextField\n                    id=\"standard-dense\"\n                    label=\"Dense\"\n                    className={classNames(classes.textField, classes.dense)}\n                    margin=\"dense\"\n                />\n                <TextField\n                    id=\"standard-multiline-flexible\"\n                    label=\"Multiline\"\n                    multiline\n                    rowsMax=\"4\"\n                    value={this.state.multiline}\n                    onChange={this.handleChange('multiline')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-multiline-static\"\n                    label=\"Multiline\"\n                    multiline\n                    rows=\"4\"\n                    defaultValue=\"Default Value\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-helperText\"\n                    label=\"Helper text\"\n                    defaultValue=\"Default Value\"\n                    className={classes.textField}\n                    helperText=\"Some important text\"\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-with-placeholder\"\n                    label=\"With placeholder\"\n                    placeholder=\"Placeholder\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-textarea\"\n                    label=\"With placeholder multiline\"\n                    placeholder=\"Placeholder\"\n                    multiline\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-number\"\n                    label=\"Number\"\n                    value={this.state.age}\n                    onChange={this.handleChange('age')}\n                    type=\"number\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                        shrink: true\n                    }}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-search\"\n                    label=\"Search field\"\n                    type=\"search\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    id=\"standard-select-currency\"\n                    select\n                    label=\"Select\"\n                    className={classes.textField}\n                    value={this.state.currency}\n                    onChange={this.handleChange('currency')}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu\n                        }\n                    }}\n                    helperText=\"Please select your currency\"\n                    margin=\"normal\"\n                >\n                    {currencies.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"standard-select-currency-native\"\n                    select\n                    label=\"Native select\"\n                    className={classes.textField}\n                    value={this.state.currency}\n                    onChange={this.handleChange('currency')}\n                    SelectProps={{\n                        native   : true,\n                        MenuProps: {\n                            className: classes.menu\n                        }\n                    }}\n                    helperText=\"Please select your currency\"\n                    margin=\"normal\"\n                >\n                    {currencies.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"standard-full-width\"\n                    label=\"Label\"\n                    style={{margin: 8}}\n                    placeholder=\"Placeholder\"\n                    helperText=\"Full width!\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true\n                    }}\n                />\n                <TextField\n                    id=\"standard-bare\"\n                    className={classes.textField}\n                    defaultValue=\"Bare\"\n                    margin=\"normal\"\n                />\n            </form>\n        );\n    }\n}\n\nTextFields.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TextFields);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst styles = theme => ({\\n    container: {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    textField: {\\n        marginLeft : theme.spacing.unit,\\n        marginRight: theme.spacing.unit,\\n        width      : 200\\n    },\\n    dense    : {\\n        marginTop: 19\\n    },\\n    menu     : {\\n        width: 200\\n    }\\n});\\n\\nconst currencies = [\\n    {\\n        value: 'USD',\\n        label: '$'\\n    },\\n    {\\n        value: 'EUR',\\n        label: '€'\\n    },\\n    {\\n        value: 'BTC',\\n        label: '฿'\\n    },\\n    {\\n        value: 'JPY',\\n        label: '¥'\\n    }\\n];\\n\\nclass TextFields extends React.Component {\\n    state = {\\n        name     : 'Cat in the Hat',\\n        age      : '',\\n        multiline: 'Controlled',\\n        currency : 'EUR'\\n    };\\n\\n    handleChange = name => event => {\\n        this.setState({\\n            [name]: event.target.value\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n                <TextField\\n                    id=\\\"standard-name\\\"\\n                    label=\\\"Name\\\"\\n                    className={classes.textField}\\n                    value={this.state.name}\\n                    onChange={this.handleChange('name')}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-uncontrolled\\\"\\n                    label=\\\"Uncontrolled\\\"\\n                    defaultValue=\\\"foo\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    required\\n                    id=\\\"standard-required\\\"\\n                    label=\\\"Required\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    error\\n                    id=\\\"standard-error\\\"\\n                    label=\\\"Error\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    disabled\\n                    id=\\\"standard-disabled\\\"\\n                    label=\\\"Disabled\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-password-input\\\"\\n                    label=\\\"Password\\\"\\n                    className={classes.textField}\\n                    type=\\\"password\\\"\\n                    autoComplete=\\\"current-password\\\"\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-read-only-input\\\"\\n                    label=\\\"Read Only\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    InputProps={{\\n                        readOnly: true\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"standard-dense\\\"\\n                    label=\\\"Dense\\\"\\n                    className={classNames(classes.textField, classes.dense)}\\n                    margin=\\\"dense\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-multiline-flexible\\\"\\n                    label=\\\"Multiline\\\"\\n                    multiline\\n                    rowsMax=\\\"4\\\"\\n                    value={this.state.multiline}\\n                    onChange={this.handleChange('multiline')}\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-multiline-static\\\"\\n                    label=\\\"Multiline\\\"\\n                    multiline\\n                    rows=\\\"4\\\"\\n                    defaultValue=\\\"Default Value\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-helperText\\\"\\n                    label=\\\"Helper text\\\"\\n                    defaultValue=\\\"Default Value\\\"\\n                    className={classes.textField}\\n                    helperText=\\\"Some important text\\\"\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-with-placeholder\\\"\\n                    label=\\\"With placeholder\\\"\\n                    placeholder=\\\"Placeholder\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-textarea\\\"\\n                    label=\\\"With placeholder multiline\\\"\\n                    placeholder=\\\"Placeholder\\\"\\n                    multiline\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-number\\\"\\n                    label=\\\"Number\\\"\\n                    value={this.state.age}\\n                    onChange={this.handleChange('age')}\\n                    type=\\\"number\\\"\\n                    className={classes.textField}\\n                    InputLabelProps={{\\n                        shrink: true\\n                    }}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-search\\\"\\n                    label=\\\"Search field\\\"\\n                    type=\\\"search\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                />\\n                <TextField\\n                    id=\\\"standard-select-currency\\\"\\n                    select\\n                    label=\\\"Select\\\"\\n                    className={classes.textField}\\n                    value={this.state.currency}\\n                    onChange={this.handleChange('currency')}\\n                    SelectProps={{\\n                        MenuProps: {\\n                            className: classes.menu\\n                        }\\n                    }}\\n                    helperText=\\\"Please select your currency\\\"\\n                    margin=\\\"normal\\\"\\n                >\\n                    {currencies.map(option => (\\n                        <MenuItem key={option.value} value={option.value}>\\n                            {option.label}\\n                        </MenuItem>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"standard-select-currency-native\\\"\\n                    select\\n                    label=\\\"Native select\\\"\\n                    className={classes.textField}\\n                    value={this.state.currency}\\n                    onChange={this.handleChange('currency')}\\n                    SelectProps={{\\n                        native   : true,\\n                        MenuProps: {\\n                            className: classes.menu\\n                        }\\n                    }}\\n                    helperText=\\\"Please select your currency\\\"\\n                    margin=\\\"normal\\\"\\n                >\\n                    {currencies.map(option => (\\n                        <option key={option.value} value={option.value}>\\n                            {option.label}\\n                        </option>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"standard-full-width\\\"\\n                    label=\\\"Label\\\"\\n                    style={{margin: 8}}\\n                    placeholder=\\\"Placeholder\\\"\\n                    helperText=\\\"Full width!\\\"\\n                    fullWidth\\n                    margin=\\\"normal\\\"\\n                    InputLabelProps={{\\n                        shrink: true\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"standard-bare\\\"\\n                    className={classes.textField}\\n                    defaultValue=\\\"Bare\\\"\\n                    margin=\\\"normal\\\"\\n                />\\n            </form>\\n        );\\n    }\\n}\\n\\nTextFields.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(TextFields);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    container: {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    textField: {\n        marginLeft : theme.spacing.unit,\n        marginRight: theme.spacing.unit\n    },\n    dense    : {\n        marginTop: 16\n    },\n    menu     : {\n        width: 200\n    }\n});\n\nconst currencies = [\n    {\n        value: 'USD',\n        label: '$'\n    },\n    {\n        value: 'EUR',\n        label: '€'\n    },\n    {\n        value: 'BTC',\n        label: '฿'\n    },\n    {\n        value: 'JPY',\n        label: '¥'\n    }\n];\n\nclass OutlinedTextFields extends React.Component {\n    state = {\n        name     : 'Cat in the Hat',\n        age      : '',\n        multiline: 'Controlled',\n        currency : 'EUR'\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <form className={classes.container} noValidate autoComplete=\"off\">\n                <TextField\n                    id=\"outlined-name\"\n                    label=\"Name\"\n                    className={classes.textField}\n                    value={this.state.name}\n                    onChange={this.handleChange('name')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-uncontrolled\"\n                    label=\"Uncontrolled\"\n                    defaultValue=\"foo\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Required\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    error\n                    id=\"outlined-error\"\n                    label=\"Error\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    disabled\n                    id=\"outlined-disabled\"\n                    label=\"Disabled\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-email-input\"\n                    label=\"Email\"\n                    className={classes.textField}\n                    type=\"email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-password-input\"\n                    label=\"Password\"\n                    className={classes.textField}\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-read-only-input\"\n                    label=\"Read Only\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    InputProps={{\n                        readOnly: true\n                    }}\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-dense\"\n                    label=\"Dense\"\n                    className={classNames(classes.textField, classes.dense)}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-multiline-flexible\"\n                    label=\"Multiline\"\n                    multiline\n                    rowsMax=\"4\"\n                    value={this.state.multiline}\n                    onChange={this.handleChange('multiline')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    helperText=\"hello\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Multiline\"\n                    multiline\n                    rows=\"4\"\n                    defaultValue=\"Default Value\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-helperText\"\n                    label=\"Helper text\"\n                    defaultValue=\"Default Value\"\n                    className={classes.textField}\n                    helperText=\"Some important text\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-with-placeholder\"\n                    label=\"With placeholder\"\n                    placeholder=\"Placeholder\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Multiline Placeholder\"\n                    placeholder=\"Placeholder\"\n                    multiline\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Number\"\n                    value={this.state.age}\n                    onChange={this.handleChange('age')}\n                    type=\"number\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                        shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-search\"\n                    label=\"Search field\"\n                    type=\"search\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"Select\"\n                    className={classes.textField}\n                    value={this.state.currency}\n                    onChange={this.handleChange('currency')}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu\n                        }\n                    }}\n                    helperText=\"Please select your currency\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                >\n                    {currencies.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"outlined-select-currency-native\"\n                    select\n                    label=\"Native select\"\n                    className={classes.textField}\n                    value={this.state.currency}\n                    onChange={this.handleChange('currency')}\n                    SelectProps={{\n                        native   : true,\n                        MenuProps: {\n                            className: classes.menu\n                        }\n                    }}\n                    helperText=\"Please select your currency\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                >\n                    {currencies.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Label\"\n                    style={{margin: 8}}\n                    placeholder=\"Placeholder\"\n                    helperText=\"Full width!\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                        shrink: true\n                    }}\n                />\n                <TextField\n                    id=\"outlined-bare\"\n                    className={classes.textField}\n                    defaultValue=\"Bare\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n            </form>\n        );\n    }\n}\n\nOutlinedTextFields.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(OutlinedTextFields);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst styles = theme => ({\\n    container: {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    textField: {\\n        marginLeft : theme.spacing.unit,\\n        marginRight: theme.spacing.unit\\n    },\\n    dense    : {\\n        marginTop: 16\\n    },\\n    menu     : {\\n        width: 200\\n    }\\n});\\n\\nconst currencies = [\\n    {\\n        value: 'USD',\\n        label: '$'\\n    },\\n    {\\n        value: 'EUR',\\n        label: '€'\\n    },\\n    {\\n        value: 'BTC',\\n        label: '฿'\\n    },\\n    {\\n        value: 'JPY',\\n        label: '¥'\\n    }\\n];\\n\\nclass OutlinedTextFields extends React.Component {\\n    state = {\\n        name     : 'Cat in the Hat',\\n        age      : '',\\n        multiline: 'Controlled',\\n        currency : 'EUR'\\n    };\\n\\n    handleChange = name => event => {\\n        this.setState({\\n            [name]: event.target.value\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n                <TextField\\n                    id=\\\"outlined-name\\\"\\n                    label=\\\"Name\\\"\\n                    className={classes.textField}\\n                    value={this.state.name}\\n                    onChange={this.handleChange('name')}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-uncontrolled\\\"\\n                    label=\\\"Uncontrolled\\\"\\n                    defaultValue=\\\"foo\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    required\\n                    id=\\\"outlined-required\\\"\\n                    label=\\\"Required\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    error\\n                    id=\\\"outlined-error\\\"\\n                    label=\\\"Error\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    disabled\\n                    id=\\\"outlined-disabled\\\"\\n                    label=\\\"Disabled\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-email-input\\\"\\n                    label=\\\"Email\\\"\\n                    className={classes.textField}\\n                    type=\\\"email\\\"\\n                    name=\\\"email\\\"\\n                    autoComplete=\\\"email\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-password-input\\\"\\n                    label=\\\"Password\\\"\\n                    className={classes.textField}\\n                    type=\\\"password\\\"\\n                    autoComplete=\\\"current-password\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-read-only-input\\\"\\n                    label=\\\"Read Only\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    InputProps={{\\n                        readOnly: true\\n                    }}\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-dense\\\"\\n                    label=\\\"Dense\\\"\\n                    className={classNames(classes.textField, classes.dense)}\\n                    margin=\\\"dense\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-multiline-flexible\\\"\\n                    label=\\\"Multiline\\\"\\n                    multiline\\n                    rowsMax=\\\"4\\\"\\n                    value={this.state.multiline}\\n                    onChange={this.handleChange('multiline')}\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    helperText=\\\"hello\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-multiline-static\\\"\\n                    label=\\\"Multiline\\\"\\n                    multiline\\n                    rows=\\\"4\\\"\\n                    defaultValue=\\\"Default Value\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-helperText\\\"\\n                    label=\\\"Helper text\\\"\\n                    defaultValue=\\\"Default Value\\\"\\n                    className={classes.textField}\\n                    helperText=\\\"Some important text\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-with-placeholder\\\"\\n                    label=\\\"With placeholder\\\"\\n                    placeholder=\\\"Placeholder\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-textarea\\\"\\n                    label=\\\"Multiline Placeholder\\\"\\n                    placeholder=\\\"Placeholder\\\"\\n                    multiline\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-number\\\"\\n                    label=\\\"Number\\\"\\n                    value={this.state.age}\\n                    onChange={this.handleChange('age')}\\n                    type=\\\"number\\\"\\n                    className={classes.textField}\\n                    InputLabelProps={{\\n                        shrink: true\\n                    }}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-search\\\"\\n                    label=\\\"Search field\\\"\\n                    type=\\\"search\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n                <TextField\\n                    id=\\\"outlined-select-currency\\\"\\n                    select\\n                    label=\\\"Select\\\"\\n                    className={classes.textField}\\n                    value={this.state.currency}\\n                    onChange={this.handleChange('currency')}\\n                    SelectProps={{\\n                        MenuProps: {\\n                            className: classes.menu\\n                        }\\n                    }}\\n                    helperText=\\\"Please select your currency\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                >\\n                    {currencies.map(option => (\\n                        <MenuItem key={option.value} value={option.value}>\\n                            {option.label}\\n                        </MenuItem>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"outlined-select-currency-native\\\"\\n                    select\\n                    label=\\\"Native select\\\"\\n                    className={classes.textField}\\n                    value={this.state.currency}\\n                    onChange={this.handleChange('currency')}\\n                    SelectProps={{\\n                        native   : true,\\n                        MenuProps: {\\n                            className: classes.menu\\n                        }\\n                    }}\\n                    helperText=\\\"Please select your currency\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                >\\n                    {currencies.map(option => (\\n                        <option key={option.value} value={option.value}>\\n                            {option.label}\\n                        </option>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"outlined-full-width\\\"\\n                    label=\\\"Label\\\"\\n                    style={{margin: 8}}\\n                    placeholder=\\\"Placeholder\\\"\\n                    helperText=\\\"Full width!\\\"\\n                    fullWidth\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                    InputLabelProps={{\\n                        shrink: true\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"outlined-bare\\\"\\n                    className={classes.textField}\\n                    defaultValue=\\\"Bare\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"outlined\\\"\\n                />\\n            </form>\\n        );\\n    }\\n}\\n\\nOutlinedTextFields.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(OutlinedTextFields);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {withStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    container: {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    textField: {\n        marginLeft : theme.spacing.unit,\n        marginRight: theme.spacing.unit\n    },\n    dense    : {\n        marginTop: 16\n    },\n    menu     : {\n        width: 200\n    }\n});\n\nconst currencies = [\n    {\n        value: 'USD',\n        label: '$'\n    },\n    {\n        value: 'EUR',\n        label: '€'\n    },\n    {\n        value: 'BTC',\n        label: '฿'\n    },\n    {\n        value: 'JPY',\n        label: '¥'\n    }\n];\n\nclass FilledTextFields extends React.Component {\n    state = {\n        name     : 'Cat in the Hat',\n        age      : '',\n        multiline: 'Controlled',\n        currency : 'EUR'\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <form className={classes.container} noValidate autoComplete=\"off\">\n                <TextField\n                    id=\"filled-name\"\n                    label=\"Name\"\n                    className={classes.textField}\n                    value={this.state.name}\n                    onChange={this.handleChange('name')}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-uncontrolled\"\n                    label=\"Uncontrolled\"\n                    defaultValue=\"foo\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    required\n                    id=\"filled-required\"\n                    label=\"Required\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    error\n                    id=\"filled-error\"\n                    label=\"Error\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    disabled\n                    id=\"filled-disabled\"\n                    label=\"Disabled\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-email-input\"\n                    label=\"Email\"\n                    className={classes.textField}\n                    type=\"email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-password-input\"\n                    label=\"Password\"\n                    className={classes.textField}\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-read-only-input\"\n                    label=\"Read Only\"\n                    defaultValue=\"Hello World\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    InputProps={{\n                        readOnly: true\n                    }}\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-dense\"\n                    label=\"Dense\"\n                    className={classNames(classes.textField, classes.dense)}\n                    margin=\"dense\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-multiline-flexible\"\n                    label=\"Multiline\"\n                    multiline\n                    rowsMax=\"4\"\n                    value={this.state.multiline}\n                    onChange={this.handleChange('multiline')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    helperText=\"hello\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-multiline-static\"\n                    label=\"Multiline\"\n                    multiline\n                    rows=\"4\"\n                    defaultValue=\"Default Value\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-helperText\"\n                    label=\"Helper text\"\n                    defaultValue=\"Default Value\"\n                    className={classes.textField}\n                    helperText=\"Some important text\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-with-placeholder\"\n                    label=\"With placeholder\"\n                    placeholder=\"Placeholder\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-textarea\"\n                    label=\"Multiline Placeholder\"\n                    placeholder=\"Placeholder\"\n                    multiline\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-number\"\n                    label=\"Number\"\n                    value={this.state.age}\n                    onChange={this.handleChange('age')}\n                    type=\"number\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                        shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-search\"\n                    label=\"Search field\"\n                    type=\"search\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n                <TextField\n                    id=\"filled-select-currency\"\n                    select\n                    label=\"Select\"\n                    className={classes.textField}\n                    value={this.state.currency}\n                    onChange={this.handleChange('currency')}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu\n                        }\n                    }}\n                    helperText=\"Please select your currency\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                >\n                    {currencies.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"filled-select-currency-native\"\n                    select\n                    label=\"Native select\"\n                    className={classes.textField}\n                    value={this.state.currency}\n                    onChange={this.handleChange('currency')}\n                    SelectProps={{\n                        native   : true,\n                        MenuProps: {\n                            className: classes.menu\n                        }\n                    }}\n                    helperText=\"Please select your currency\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                >\n                    {currencies.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"filled-full-width\"\n                    label=\"Label\"\n                    style={{margin: 8}}\n                    placeholder=\"Placeholder\"\n                    helperText=\"Full width!\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"filled\"\n                    InputLabelProps={{\n                        shrink: true\n                    }}\n                />\n                <TextField\n                    id=\"filled-bare\"\n                    className={classes.textField}\n                    defaultValue=\"Bare\"\n                    margin=\"normal\"\n                    variant=\"filled\"\n                />\n            </form>\n        );\n    }\n}\n\nFilledTextFields.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FilledTextFields);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst styles = theme => ({\\n    container: {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    textField: {\\n        marginLeft : theme.spacing.unit,\\n        marginRight: theme.spacing.unit\\n    },\\n    dense    : {\\n        marginTop: 16\\n    },\\n    menu     : {\\n        width: 200\\n    }\\n});\\n\\nconst currencies = [\\n    {\\n        value: 'USD',\\n        label: '$'\\n    },\\n    {\\n        value: 'EUR',\\n        label: '€'\\n    },\\n    {\\n        value: 'BTC',\\n        label: '฿'\\n    },\\n    {\\n        value: 'JPY',\\n        label: '¥'\\n    }\\n];\\n\\nclass FilledTextFields extends React.Component {\\n    state = {\\n        name     : 'Cat in the Hat',\\n        age      : '',\\n        multiline: 'Controlled',\\n        currency : 'EUR'\\n    };\\n\\n    handleChange = name => event => {\\n        this.setState({\\n            [name]: event.target.value\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n                <TextField\\n                    id=\\\"filled-name\\\"\\n                    label=\\\"Name\\\"\\n                    className={classes.textField}\\n                    value={this.state.name}\\n                    onChange={this.handleChange('name')}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-uncontrolled\\\"\\n                    label=\\\"Uncontrolled\\\"\\n                    defaultValue=\\\"foo\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    required\\n                    id=\\\"filled-required\\\"\\n                    label=\\\"Required\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    error\\n                    id=\\\"filled-error\\\"\\n                    label=\\\"Error\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    disabled\\n                    id=\\\"filled-disabled\\\"\\n                    label=\\\"Disabled\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-email-input\\\"\\n                    label=\\\"Email\\\"\\n                    className={classes.textField}\\n                    type=\\\"email\\\"\\n                    name=\\\"email\\\"\\n                    autoComplete=\\\"email\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-password-input\\\"\\n                    label=\\\"Password\\\"\\n                    className={classes.textField}\\n                    type=\\\"password\\\"\\n                    autoComplete=\\\"current-password\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-read-only-input\\\"\\n                    label=\\\"Read Only\\\"\\n                    defaultValue=\\\"Hello World\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    InputProps={{\\n                        readOnly: true\\n                    }}\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-dense\\\"\\n                    label=\\\"Dense\\\"\\n                    className={classNames(classes.textField, classes.dense)}\\n                    margin=\\\"dense\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-multiline-flexible\\\"\\n                    label=\\\"Multiline\\\"\\n                    multiline\\n                    rowsMax=\\\"4\\\"\\n                    value={this.state.multiline}\\n                    onChange={this.handleChange('multiline')}\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    helperText=\\\"hello\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-multiline-static\\\"\\n                    label=\\\"Multiline\\\"\\n                    multiline\\n                    rows=\\\"4\\\"\\n                    defaultValue=\\\"Default Value\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-helperText\\\"\\n                    label=\\\"Helper text\\\"\\n                    defaultValue=\\\"Default Value\\\"\\n                    className={classes.textField}\\n                    helperText=\\\"Some important text\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-with-placeholder\\\"\\n                    label=\\\"With placeholder\\\"\\n                    placeholder=\\\"Placeholder\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-textarea\\\"\\n                    label=\\\"Multiline Placeholder\\\"\\n                    placeholder=\\\"Placeholder\\\"\\n                    multiline\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-number\\\"\\n                    label=\\\"Number\\\"\\n                    value={this.state.age}\\n                    onChange={this.handleChange('age')}\\n                    type=\\\"number\\\"\\n                    className={classes.textField}\\n                    InputLabelProps={{\\n                        shrink: true\\n                    }}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-search\\\"\\n                    label=\\\"Search field\\\"\\n                    type=\\\"search\\\"\\n                    className={classes.textField}\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n                <TextField\\n                    id=\\\"filled-select-currency\\\"\\n                    select\\n                    label=\\\"Select\\\"\\n                    className={classes.textField}\\n                    value={this.state.currency}\\n                    onChange={this.handleChange('currency')}\\n                    SelectProps={{\\n                        MenuProps: {\\n                            className: classes.menu\\n                        }\\n                    }}\\n                    helperText=\\\"Please select your currency\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                >\\n                    {currencies.map(option => (\\n                        <MenuItem key={option.value} value={option.value}>\\n                            {option.label}\\n                        </MenuItem>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"filled-select-currency-native\\\"\\n                    select\\n                    label=\\\"Native select\\\"\\n                    className={classes.textField}\\n                    value={this.state.currency}\\n                    onChange={this.handleChange('currency')}\\n                    SelectProps={{\\n                        native   : true,\\n                        MenuProps: {\\n                            className: classes.menu\\n                        }\\n                    }}\\n                    helperText=\\\"Please select your currency\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                >\\n                    {currencies.map(option => (\\n                        <option key={option.value} value={option.value}>\\n                            {option.label}\\n                        </option>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"filled-full-width\\\"\\n                    label=\\\"Label\\\"\\n                    style={{margin: 8}}\\n                    placeholder=\\\"Placeholder\\\"\\n                    helperText=\\\"Full width!\\\"\\n                    fullWidth\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                    InputLabelProps={{\\n                        shrink: true\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"filled-bare\\\"\\n                    className={classes.textField}\\n                    defaultValue=\\\"Bare\\\"\\n                    margin=\\\"normal\\\"\\n                    variant=\\\"filled\\\"\\n                />\\n            </form>\\n        );\\n    }\\n}\\n\\nFilledTextFields.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(FilledTextFields);\\n\"","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst styles = theme => ({\n    container  : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        margin: theme.spacing.unit\n    }\n});\n\nclass ComposedTextField extends React.Component {\n    state = {\n        name: 'Composed TextField'\n    };\n\n    componentDidMount()\n    {\n        this.forceUpdate();\n    }\n\n    handleChange = event => {\n        this.setState({name: event.target.value});\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.container}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n                    <Input id=\"component-simple\" value={this.state.name} onChange={this.handleChange}/>\n                </FormControl>\n                <FormControl className={classes.formControl} aria-describedby=\"component-helper-text\">\n                    <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n                    <Input id=\"component-helper\" value={this.state.name} onChange={this.handleChange}/>\n                    <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl} disabled>\n                    <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\n                    <Input id=\"component-disabled\" value={this.state.name} onChange={this.handleChange}/>\n                    <FormHelperText>Disabled</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl} error aria-describedby=\"component-error-text\">\n                    <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n                    <Input id=\"component-error\" value={this.state.name} onChange={this.handleChange}/>\n                    <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n                </FormControl>\n                <FormControl className={classes.formControl} variant=\"outlined\">\n                    <InputLabel\n                        ref={ref => {\n                            this.labelRef = ReactDOM.findDOMNode(ref);\n                        }}\n                        htmlFor=\"component-outlined\"\n                    >\n                        Name\n                    </InputLabel>\n                    <OutlinedInput\n                        id=\"component-outlined\"\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\n                    />\n                </FormControl>\n                <FormControl className={classes.formControl} variant=\"filled\">\n                    <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\n                    <FilledInput id=\"component-filled\" value={this.state.name} onChange={this.handleChange}/>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nComposedTextField.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ComposedTextField);\n","module.exports = \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport FilledInput from '@material-ui/core/FilledInput';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\n\\nconst styles = theme => ({\\n    container  : {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    formControl: {\\n        margin: theme.spacing.unit\\n    }\\n});\\n\\nclass ComposedTextField extends React.Component {\\n    state = {\\n        name: 'Composed TextField'\\n    };\\n\\n    componentDidMount()\\n    {\\n        this.forceUpdate();\\n    }\\n\\n    handleChange = event => {\\n        this.setState({name: event.target.value});\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <div className={classes.container}>\\n                <FormControl className={classes.formControl}>\\n                    <InputLabel htmlFor=\\\"component-simple\\\">Name</InputLabel>\\n                    <Input id=\\\"component-simple\\\" value={this.state.name} onChange={this.handleChange}/>\\n                </FormControl>\\n                <FormControl className={classes.formControl} aria-describedby=\\\"component-helper-text\\\">\\n                    <InputLabel htmlFor=\\\"component-helper\\\">Name</InputLabel>\\n                    <Input id=\\\"component-helper\\\" value={this.state.name} onChange={this.handleChange}/>\\n                    <FormHelperText id=\\\"component-helper-text\\\">Some important helper text</FormHelperText>\\n                </FormControl>\\n                <FormControl className={classes.formControl} disabled>\\n                    <InputLabel htmlFor=\\\"component-disabled\\\">Name</InputLabel>\\n                    <Input id=\\\"component-disabled\\\" value={this.state.name} onChange={this.handleChange}/>\\n                    <FormHelperText>Disabled</FormHelperText>\\n                </FormControl>\\n                <FormControl className={classes.formControl} error aria-describedby=\\\"component-error-text\\\">\\n                    <InputLabel htmlFor=\\\"component-error\\\">Name</InputLabel>\\n                    <Input id=\\\"component-error\\\" value={this.state.name} onChange={this.handleChange}/>\\n                    <FormHelperText id=\\\"component-error-text\\\">Error</FormHelperText>\\n                </FormControl>\\n                <FormControl className={classes.formControl} variant=\\\"outlined\\\">\\n                    <InputLabel\\n                        ref={ref => {\\n                            this.labelRef = ReactDOM.findDOMNode(ref);\\n                        }}\\n                        htmlFor=\\\"component-outlined\\\"\\n                    >\\n                        Name\\n                    </InputLabel>\\n                    <OutlinedInput\\n                        id=\\\"component-outlined\\\"\\n                        value={this.state.name}\\n                        onChange={this.handleChange}\\n                        labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\\n                    />\\n                </FormControl>\\n                <FormControl className={classes.formControl} variant=\\\"filled\\\">\\n                    <InputLabel htmlFor=\\\"component-filled\\\">Name</InputLabel>\\n                    <FilledInput id=\\\"component-filled\\\" value={this.state.name} onChange={this.handleChange}/>\\n                </FormControl>\\n            </div>\\n        );\\n    }\\n}\\n\\nComposedTextField.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(ComposedTextField);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n    container: {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    input    : {\n        margin: theme.spacing.unit\n    }\n});\n\nfunction Inputs(props)\n{\n    const {classes} = props;\n    return (\n        <div className={classes.container}>\n            <Input\n                defaultValue=\"Hello world\"\n                className={classes.input}\n                inputProps={{\n                    'aria-label': 'Description'\n                }}\n            />\n            <Input\n                placeholder=\"Placeholder\"\n                className={classes.input}\n                inputProps={{\n                    'aria-label': 'Description'\n                }}\n            />\n            <Input\n                value=\"Disabled\"\n                className={classes.input}\n                disabled\n                inputProps={{\n                    'aria-label': 'Description'\n                }}\n            />\n            <Input\n                defaultValue=\"Error\"\n                className={classes.input}\n                error\n                inputProps={{\n                    'aria-label': 'Description'\n                }}\n            />\n        </div>\n    );\n}\n\nInputs.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Inputs);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\n\\nconst styles = theme => ({\\n    container: {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    input    : {\\n        margin: theme.spacing.unit\\n    }\\n});\\n\\nfunction Inputs(props)\\n{\\n    const {classes} = props;\\n    return (\\n        <div className={classes.container}>\\n            <Input\\n                defaultValue=\\\"Hello world\\\"\\n                className={classes.input}\\n                inputProps={{\\n                    'aria-label': 'Description'\\n                }}\\n            />\\n            <Input\\n                placeholder=\\\"Placeholder\\\"\\n                className={classes.input}\\n                inputProps={{\\n                    'aria-label': 'Description'\\n                }}\\n            />\\n            <Input\\n                value=\\\"Disabled\\\"\\n                className={classes.input}\\n                disabled\\n                inputProps={{\\n                    'aria-label': 'Description'\\n                }}\\n            />\\n            <Input\\n                defaultValue=\\\"Error\\\"\\n                className={classes.input}\\n                error\\n                inputProps={{\\n                    'aria-label': 'Description'\\n                }}\\n            />\\n        </div>\\n    );\\n}\\n\\nInputs.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(Inputs);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles, MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst styles = theme => ({\n    container         : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    margin            : {\n        margin: theme.spacing.unit\n    },\n    cssLabel          : {\n        '&$cssFocused': {\n            color: purple[500]\n        }\n    },\n    cssFocused        : {},\n    cssUnderline      : {\n        '&:after': {\n            borderBottomColor: purple[500]\n        }\n    },\n    cssOutlinedInput  : {\n        '&$cssFocused $notchedOutline': {\n            borderColor: purple[500]\n        }\n    },\n    notchedOutline    : {},\n    bootstrapRoot     : {\n        'label + &': {\n            marginTop: theme.spacing.unit * 3\n        }\n    },\n    bootstrapInput    : {\n        borderRadius   : 4,\n        backgroundColor: theme.palette.common.white,\n        border         : '1px solid #ced4da',\n        fontSize       : 16,\n        padding        : '10px 12px',\n        transition     : theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily     : [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"'\n        ].join(','),\n        '&:focus'      : {\n            borderColor: '#80bdff',\n            boxShadow  : '0 0 0 0.2rem rgba(0,123,255,.25)'\n        }\n    },\n    bootstrapFormLabel: {\n        fontSize: 18\n    }\n});\n\nconst theme = createMuiTheme({\n    palette   : {\n        primary: green\n    },\n    typography: {useNextVariants: true}\n});\n\nfunction CustomizedInputs(props)\n{\n    const {classes} = props;\n\n    return (\n        <div className={classes.container}>\n            <FormControl className={classes.margin}>\n                <InputLabel\n                    htmlFor=\"custom-css-standard-input\"\n                    classes={{\n                        root   : classes.cssLabel,\n                        focused: classes.cssFocused\n                    }}\n                >\n                    Custom CSS\n                </InputLabel>\n                <Input\n                    id=\"custom-css-standard-input\"\n                    classes={{\n                        underline: classes.cssUnderline\n                    }}\n                />\n            </FormControl>\n            <TextField\n                className={classes.margin}\n                InputLabelProps={{\n                    classes: {\n                        root   : classes.cssLabel,\n                        focused: classes.cssFocused\n                    }\n                }}\n                InputProps={{\n                    classes: {\n                        root          : classes.cssOutlinedInput,\n                        focused       : classes.cssFocused,\n                        notchedOutline: classes.notchedOutline\n                    }\n                }}\n                label=\"Custom CSS\"\n                variant=\"outlined\"\n                id=\"custom-css-outlined-input\"\n            />\n            <MuiThemeProvider theme={theme}>\n                <TextField\n                    className={classes.margin}\n                    label=\"MuiThemeProvider\"\n                    id=\"mui-theme-provider-standard-input\"\n                />\n                <TextField\n                    className={classes.margin}\n                    label=\"MuiThemeProvider\"\n                    variant=\"outlined\"\n                    id=\"mui-theme-provider-outlined-input\"\n                />\n            </MuiThemeProvider>\n            <FormControl className={classes.margin}>\n                <InputLabel shrink htmlFor=\"bootstrap-input\" className={classes.bootstrapFormLabel}>\n                    Bootstrap\n                </InputLabel>\n                <InputBase\n                    id=\"bootstrap-input\"\n                    defaultValue=\"react-bootstrap\"\n                    classes={{\n                        root : classes.bootstrapRoot,\n                        input: classes.bootstrapInput\n                    }}\n                />\n            </FormControl>\n            <InputBase className={classes.margin} defaultValue=\"Naked input\"/>\n        </div>\n    );\n}\n\nCustomizedInputs.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CustomizedInputs);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles, MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputBase from '@material-ui/core/InputBase';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport TextField from '@material-ui/core/TextField';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport purple from '@material-ui/core/colors/purple';\\nimport green from '@material-ui/core/colors/green';\\n\\nconst styles = theme => ({\\n    container         : {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    margin            : {\\n        margin: theme.spacing.unit\\n    },\\n    cssLabel          : {\\n        '&$cssFocused': {\\n            color: purple[500]\\n        }\\n    },\\n    cssFocused        : {},\\n    cssUnderline      : {\\n        '&:after': {\\n            borderBottomColor: purple[500]\\n        }\\n    },\\n    cssOutlinedInput  : {\\n        '&$cssFocused $notchedOutline': {\\n            borderColor: purple[500]\\n        }\\n    },\\n    notchedOutline    : {},\\n    bootstrapRoot     : {\\n        'label + &': {\\n            marginTop: theme.spacing.unit * 3\\n        }\\n    },\\n    bootstrapInput    : {\\n        borderRadius   : 4,\\n        backgroundColor: theme.palette.common.white,\\n        border         : '1px solid #ced4da',\\n        fontSize       : 16,\\n        padding        : '10px 12px',\\n        transition     : theme.transitions.create(['border-color', 'box-shadow']),\\n        // Use the system font instead of the default Roboto font.\\n        fontFamily     : [\\n            '-apple-system',\\n            'BlinkMacSystemFont',\\n            '\\\"Segoe UI\\\"',\\n            'Roboto',\\n            '\\\"Helvetica Neue\\\"',\\n            'Arial',\\n            'sans-serif',\\n            '\\\"Apple Color Emoji\\\"',\\n            '\\\"Segoe UI Emoji\\\"',\\n            '\\\"Segoe UI Symbol\\\"'\\n        ].join(','),\\n        '&:focus'      : {\\n            borderColor: '#80bdff',\\n            boxShadow  : '0 0 0 0.2rem rgba(0,123,255,.25)'\\n        }\\n    },\\n    bootstrapFormLabel: {\\n        fontSize: 18\\n    }\\n});\\n\\nconst theme = createMuiTheme({\\n    palette   : {\\n        primary: green\\n    },\\n    typography: {useNextVariants: true}\\n});\\n\\nfunction CustomizedInputs(props)\\n{\\n    const {classes} = props;\\n\\n    return (\\n        <div className={classes.container}>\\n            <FormControl className={classes.margin}>\\n                <InputLabel\\n                    htmlFor=\\\"custom-css-standard-input\\\"\\n                    classes={{\\n                        root   : classes.cssLabel,\\n                        focused: classes.cssFocused\\n                    }}\\n                >\\n                    Custom CSS\\n                </InputLabel>\\n                <Input\\n                    id=\\\"custom-css-standard-input\\\"\\n                    classes={{\\n                        underline: classes.cssUnderline\\n                    }}\\n                />\\n            </FormControl>\\n            <TextField\\n                className={classes.margin}\\n                InputLabelProps={{\\n                    classes: {\\n                        root   : classes.cssLabel,\\n                        focused: classes.cssFocused\\n                    }\\n                }}\\n                InputProps={{\\n                    classes: {\\n                        root          : classes.cssOutlinedInput,\\n                        focused       : classes.cssFocused,\\n                        notchedOutline: classes.notchedOutline\\n                    }\\n                }}\\n                label=\\\"Custom CSS\\\"\\n                variant=\\\"outlined\\\"\\n                id=\\\"custom-css-outlined-input\\\"\\n            />\\n            <MuiThemeProvider theme={theme}>\\n                <TextField\\n                    className={classes.margin}\\n                    label=\\\"MuiThemeProvider\\\"\\n                    id=\\\"mui-theme-provider-standard-input\\\"\\n                />\\n                <TextField\\n                    className={classes.margin}\\n                    label=\\\"MuiThemeProvider\\\"\\n                    variant=\\\"outlined\\\"\\n                    id=\\\"mui-theme-provider-outlined-input\\\"\\n                />\\n            </MuiThemeProvider>\\n            <FormControl className={classes.margin}>\\n                <InputLabel shrink htmlFor=\\\"bootstrap-input\\\" className={classes.bootstrapFormLabel}>\\n                    Bootstrap\\n                </InputLabel>\\n                <InputBase\\n                    id=\\\"bootstrap-input\\\"\\n                    defaultValue=\\\"react-bootstrap\\\"\\n                    classes={{\\n                        root : classes.bootstrapRoot,\\n                        input: classes.bootstrapInput\\n                    }}\\n                />\\n            </FormControl>\\n            <InputBase className={classes.margin} defaultValue=\\\"Naked input\\\"/>\\n        </div>\\n    );\\n}\\n\\nCustomizedInputs.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(CustomizedInputs);\\n\"","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n    root        : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    margin      : {\n        margin: theme.spacing.unit\n    },\n    withoutLabel: {\n        marginTop: theme.spacing.unit * 3\n    },\n    textField   : {\n        flexBasis: 200\n    }\n});\n\nconst ranges = [\n    {\n        value: '0-20',\n        label: '0 to 20'\n    },\n    {\n        value: '21-50',\n        label: '21 to 50'\n    },\n    {\n        value: '51-100',\n        label: '51 to 100'\n    }\n];\n\nclass InputAdornments extends React.Component {\n    state = {\n        amount      : '',\n        password    : '',\n        weight      : '',\n        weightRange : '',\n        showPassword: false\n    };\n\n    handleChange = prop => event => {\n        this.setState({[prop]: event.target.value});\n    };\n\n    handleClickShowPassword = () => {\n        this.setState(state => ({showPassword: !state.showPassword}));\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <TextField\n                    label=\"With normal TextField\"\n                    id=\"simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>\n                    }}\n                />\n                <TextField\n                    select\n                    label=\"With Select\"\n                    className={classNames(classes.margin, classes.textField)}\n                    value={this.state.weightRange}\n                    onChange={this.handleChange('weightRange')}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>\n                    }}\n                >\n                    {ranges.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <FormControl fullWidth className={classes.margin}>\n                    <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n                    <Input\n                        id=\"adornment-amount\"\n                        value={this.state.amount}\n                        onChange={this.handleChange('amount')}\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    />\n                </FormControl>\n                <FormControl\n                    className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n                    aria-describedby=\"weight-helper-text\"\n                >\n                    <Input\n                        id=\"adornment-weight\"\n                        value={this.state.weight}\n                        onChange={this.handleChange('weight')}\n                        endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                        inputProps={{\n                            'aria-label': 'Weight'\n                        }}\n                    />\n                    <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n                </FormControl>\n                <FormControl className={classNames(classes.margin, classes.textField)}>\n                    <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n                    <Input\n                        id=\"adornment-password\"\n                        type={this.state.showPassword ? 'text' : 'password'}\n                        value={this.state.password}\n                        onChange={this.handleChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Toggle password visibility\"\n                                    onClick={this.handleClickShowPassword}\n                                >\n                                    {this.state.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nInputAdornments.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(InputAdornments);\n","module.exports = \"import React from 'react';\\nimport classNames from 'classnames';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst styles = theme => ({\\n    root        : {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    margin      : {\\n        margin: theme.spacing.unit\\n    },\\n    withoutLabel: {\\n        marginTop: theme.spacing.unit * 3\\n    },\\n    textField   : {\\n        flexBasis: 200\\n    }\\n});\\n\\nconst ranges = [\\n    {\\n        value: '0-20',\\n        label: '0 to 20'\\n    },\\n    {\\n        value: '21-50',\\n        label: '21 to 50'\\n    },\\n    {\\n        value: '51-100',\\n        label: '51 to 100'\\n    }\\n];\\n\\nclass InputAdornments extends React.Component {\\n    state = {\\n        amount      : '',\\n        password    : '',\\n        weight      : '',\\n        weightRange : '',\\n        showPassword: false\\n    };\\n\\n    handleChange = prop => event => {\\n        this.setState({[prop]: event.target.value});\\n    };\\n\\n    handleClickShowPassword = () => {\\n        this.setState(state => ({showPassword: !state.showPassword}));\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <div className={classes.root}>\\n                <TextField\\n                    label=\\\"With normal TextField\\\"\\n                    id=\\\"simple-start-adornment\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    InputProps={{\\n                        startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>\\n                    }}\\n                />\\n                <TextField\\n                    select\\n                    label=\\\"With Select\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    value={this.state.weightRange}\\n                    onChange={this.handleChange('weightRange')}\\n                    InputProps={{\\n                        startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>\\n                    }}\\n                >\\n                    {ranges.map(option => (\\n                        <MenuItem key={option.value} value={option.value}>\\n                            {option.label}\\n                        </MenuItem>\\n                    ))}\\n                </TextField>\\n                <FormControl fullWidth className={classes.margin}>\\n                    <InputLabel htmlFor=\\\"adornment-amount\\\">Amount</InputLabel>\\n                    <Input\\n                        id=\\\"adornment-amount\\\"\\n                        value={this.state.amount}\\n                        onChange={this.handleChange('amount')}\\n                        startAdornment={<InputAdornment position=\\\"start\\\">$</InputAdornment>}\\n                    />\\n                </FormControl>\\n                <FormControl\\n                    className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\\n                    aria-describedby=\\\"weight-helper-text\\\"\\n                >\\n                    <Input\\n                        id=\\\"adornment-weight\\\"\\n                        value={this.state.weight}\\n                        onChange={this.handleChange('weight')}\\n                        endAdornment={<InputAdornment position=\\\"end\\\">Kg</InputAdornment>}\\n                        inputProps={{\\n                            'aria-label': 'Weight'\\n                        }}\\n                    />\\n                    <FormHelperText id=\\\"weight-helper-text\\\">Weight</FormHelperText>\\n                </FormControl>\\n                <FormControl className={classNames(classes.margin, classes.textField)}>\\n                    <InputLabel htmlFor=\\\"adornment-password\\\">Password</InputLabel>\\n                    <Input\\n                        id=\\\"adornment-password\\\"\\n                        type={this.state.showPassword ? 'text' : 'password'}\\n                        value={this.state.password}\\n                        onChange={this.handleChange('password')}\\n                        endAdornment={\\n                            <InputAdornment position=\\\"end\\\">\\n                                <IconButton\\n                                    aria-label=\\\"Toggle password visibility\\\"\\n                                    onClick={this.handleClickShowPassword}\\n                                >\\n                                    {this.state.showPassword ? <Visibility/> : <VisibilityOff/>}\\n                                </IconButton>\\n                            </InputAdornment>\\n                        }\\n                    />\\n                </FormControl>\\n            </div>\\n        );\\n    }\\n}\\n\\nInputAdornments.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(InputAdornments);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst styles = theme => ({\n    margin: {\n        margin: theme.spacing.unit\n    }\n});\n\nfunction InputWithIcon(props)\n{\n    const {classes} = props;\n\n    return (\n        <div>\n            <FormControl className={classes.margin}>\n                <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\n                <Input\n                    id=\"input-with-icon-adornment\"\n                    startAdornment={\n                        <InputAdornment position=\"start\">\n                            <AccountCircle/>\n                        </InputAdornment>\n                    }\n                />\n            </FormControl>\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"TextField\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircle/>\n                        </InputAdornment>\n                    )\n                }}\n            />\n            <div className={classes.margin}>\n                <Grid container spacing={8} alignItems=\"flex-end\">\n                    <Grid item>\n                        <AccountCircle/>\n                    </Grid>\n                    <Grid item>\n                        <TextField id=\"input-with-icon-grid\" label=\"With a grid\"/>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nInputWithIcon.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(InputWithIcon);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport Grid from '@material-ui/core/Grid';\\nimport AccountCircle from '@material-ui/icons/AccountCircle';\\n\\nconst styles = theme => ({\\n    margin: {\\n        margin: theme.spacing.unit\\n    }\\n});\\n\\nfunction InputWithIcon(props)\\n{\\n    const {classes} = props;\\n\\n    return (\\n        <div>\\n            <FormControl className={classes.margin}>\\n                <InputLabel htmlFor=\\\"input-with-icon-adornment\\\">With a start adornment</InputLabel>\\n                <Input\\n                    id=\\\"input-with-icon-adornment\\\"\\n                    startAdornment={\\n                        <InputAdornment position=\\\"start\\\">\\n                            <AccountCircle/>\\n                        </InputAdornment>\\n                    }\\n                />\\n            </FormControl>\\n            <TextField\\n                className={classes.margin}\\n                id=\\\"input-with-icon-textfield\\\"\\n                label=\\\"TextField\\\"\\n                InputProps={{\\n                    startAdornment: (\\n                        <InputAdornment position=\\\"start\\\">\\n                            <AccountCircle/>\\n                        </InputAdornment>\\n                    )\\n                }}\\n            />\\n            <div className={classes.margin}>\\n                <Grid container spacing={8} alignItems=\\\"flex-end\\\">\\n                    <Grid item>\\n                        <AccountCircle/>\\n                    </Grid>\\n                    <Grid item>\\n                        <TextField id=\\\"input-with-icon-grid\\\" label=\\\"With a grid\\\"/>\\n                    </Grid>\\n                </Grid>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nInputWithIcon.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(InputWithIcon);\\n\"","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n    root     : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    margin   : {\n        margin: theme.spacing.unit\n    },\n    textField: {\n        flexBasis: 200\n    }\n});\n\nconst ranges = [\n    {\n        value: '0-20',\n        label: '0 to 20'\n    },\n    {\n        value: '21-50',\n        label: '21 to 50'\n    },\n    {\n        value: '51-100',\n        label: '51 to 100'\n    }\n];\n\nclass FilledInputAdornments extends React.Component {\n    state = {\n        amount      : '',\n        password    : '',\n        weight      : '',\n        weightRange : '',\n        showPassword: false\n    };\n\n    handleChange = prop => event => {\n        this.setState({[prop]: event.target.value});\n    };\n\n    handleClickShowPassword = () => {\n        this.setState(state => ({showPassword: !state.showPassword}));\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <TextField\n                    id=\"filled-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"filled\"\n                    label=\"With filled TextField\"\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment variant=\"filled\" position=\"start\">\n                                Kg\n                            </InputAdornment>\n                        )\n                    }}\n                />\n                <TextField\n                    select\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"filled\"\n                    label=\"With Select\"\n                    value={this.state.weightRange}\n                    onChange={this.handleChange('weightRange')}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment variant=\"filled\" position=\"start\">\n                                Kg\n                            </InputAdornment>\n                        )\n                    }}\n                >\n                    {ranges.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"filled-adornment-amount\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"filled\"\n                    label=\"Amount\"\n                    value={this.state.amount}\n                    onChange={this.handleChange('amount')}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment variant=\"filled\" position=\"start\">\n                                $\n                            </InputAdornment>\n                        )\n                    }}\n                />\n                <TextField\n                    id=\"filled-adornment-weight\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"filled\"\n                    label=\"Weight\"\n                    value={this.state.weight}\n                    onChange={this.handleChange('weight')}\n                    helperText=\"Weight\"\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment variant=\"filled\" position=\"end\">\n                                Kg\n                            </InputAdornment>\n                        )\n                    }}\n                />\n                <TextField\n                    id=\"filled-adornment-password\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"filled\"\n                    type={this.state.showPassword ? 'text' : 'password'}\n                    label=\"Password\"\n                    value={this.state.password}\n                    onChange={this.handleChange('password')}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment variant=\"filled\" position=\"end\">\n                                <IconButton\n                                    aria-label=\"Toggle password visibility\"\n                                    onClick={this.handleClickShowPassword}\n                                >\n                                    {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                </IconButton>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nFilledInputAdornments.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FilledInputAdornments);\n","module.exports = \"import React from 'react';\\nimport classNames from 'classnames';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst styles = theme => ({\\n    root     : {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    margin   : {\\n        margin: theme.spacing.unit\\n    },\\n    textField: {\\n        flexBasis: 200\\n    }\\n});\\n\\nconst ranges = [\\n    {\\n        value: '0-20',\\n        label: '0 to 20'\\n    },\\n    {\\n        value: '21-50',\\n        label: '21 to 50'\\n    },\\n    {\\n        value: '51-100',\\n        label: '51 to 100'\\n    }\\n];\\n\\nclass FilledInputAdornments extends React.Component {\\n    state = {\\n        amount      : '',\\n        password    : '',\\n        weight      : '',\\n        weightRange : '',\\n        showPassword: false\\n    };\\n\\n    handleChange = prop => event => {\\n        this.setState({[prop]: event.target.value});\\n    };\\n\\n    handleClickShowPassword = () => {\\n        this.setState(state => ({showPassword: !state.showPassword}));\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <div className={classes.root}>\\n                <TextField\\n                    id=\\\"filled-simple-start-adornment\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"filled\\\"\\n                    label=\\\"With filled TextField\\\"\\n                    InputProps={{\\n                        startAdornment: (\\n                            <InputAdornment variant=\\\"filled\\\" position=\\\"start\\\">\\n                                Kg\\n                            </InputAdornment>\\n                        )\\n                    }}\\n                />\\n                <TextField\\n                    select\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"filled\\\"\\n                    label=\\\"With Select\\\"\\n                    value={this.state.weightRange}\\n                    onChange={this.handleChange('weightRange')}\\n                    InputProps={{\\n                        startAdornment: (\\n                            <InputAdornment variant=\\\"filled\\\" position=\\\"start\\\">\\n                                Kg\\n                            </InputAdornment>\\n                        )\\n                    }}\\n                >\\n                    {ranges.map(option => (\\n                        <MenuItem key={option.value} value={option.value}>\\n                            {option.label}\\n                        </MenuItem>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"filled-adornment-amount\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"filled\\\"\\n                    label=\\\"Amount\\\"\\n                    value={this.state.amount}\\n                    onChange={this.handleChange('amount')}\\n                    InputProps={{\\n                        startAdornment: (\\n                            <InputAdornment variant=\\\"filled\\\" position=\\\"start\\\">\\n                                $\\n                            </InputAdornment>\\n                        )\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"filled-adornment-weight\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"filled\\\"\\n                    label=\\\"Weight\\\"\\n                    value={this.state.weight}\\n                    onChange={this.handleChange('weight')}\\n                    helperText=\\\"Weight\\\"\\n                    InputProps={{\\n                        endAdornment: (\\n                            <InputAdornment variant=\\\"filled\\\" position=\\\"end\\\">\\n                                Kg\\n                            </InputAdornment>\\n                        )\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"filled-adornment-password\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"filled\\\"\\n                    type={this.state.showPassword ? 'text' : 'password'}\\n                    label=\\\"Password\\\"\\n                    value={this.state.password}\\n                    onChange={this.handleChange('password')}\\n                    InputProps={{\\n                        endAdornment: (\\n                            <InputAdornment variant=\\\"filled\\\" position=\\\"end\\\">\\n                                <IconButton\\n                                    aria-label=\\\"Toggle password visibility\\\"\\n                                    onClick={this.handleClickShowPassword}\\n                                >\\n                                    {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\\n                                </IconButton>\\n                            </InputAdornment>\\n                        )\\n                    }}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nFilledInputAdornments.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(FilledInputAdornments);\\n\"","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n    root     : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    margin   : {\n        margin: theme.spacing.unit\n    },\n    textField: {\n        flexBasis: 200\n    }\n});\n\nconst ranges = [\n    {\n        value: '0-20',\n        label: '0 to 20'\n    },\n    {\n        value: '21-50',\n        label: '21 to 50'\n    },\n    {\n        value: '51-100',\n        label: '51 to 100'\n    }\n];\n\nclass OutlinedInputAdornments extends React.Component {\n    state = {\n        amount      : '',\n        password    : '',\n        weight      : '',\n        weightRange : '',\n        showPassword: false\n    };\n\n    handleChange = prop => event => {\n        this.setState({[prop]: event.target.value});\n    };\n\n    handleClickShowPassword = () => {\n        this.setState(state => ({showPassword: !state.showPassword}));\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <TextField\n                    id=\"outlined-simple-start-adornment\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"With outlined TextField\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>\n                    }}\n                />\n                <TextField\n                    select\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"With Select\"\n                    value={this.state.weightRange}\n                    onChange={this.handleChange('weightRange')}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>\n                    }}\n                >\n                    {ranges.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"outlined-adornment-amount\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"Amount\"\n                    value={this.state.amount}\n                    onChange={this.handleChange('amount')}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n                    }}\n                />\n                <TextField\n                    id=\"outlined-adornment-weight\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    label=\"Weight\"\n                    value={this.state.weight}\n                    onChange={this.handleChange('weight')}\n                    helperText=\"Weight\"\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>\n                    }}\n                />\n                <TextField\n                    id=\"outlined-adornment-password\"\n                    className={classNames(classes.margin, classes.textField)}\n                    variant=\"outlined\"\n                    type={this.state.showPassword ? 'text' : 'password'}\n                    label=\"Password\"\n                    value={this.state.password}\n                    onChange={this.handleChange('password')}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Toggle password visibility\"\n                                    onClick={this.handleClickShowPassword}\n                                >\n                                    {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                </IconButton>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nOutlinedInputAdornments.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(OutlinedInputAdornments);\n","module.exports = \"import React from 'react';\\nimport classNames from 'classnames';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst styles = theme => ({\\n    root     : {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    margin   : {\\n        margin: theme.spacing.unit\\n    },\\n    textField: {\\n        flexBasis: 200\\n    }\\n});\\n\\nconst ranges = [\\n    {\\n        value: '0-20',\\n        label: '0 to 20'\\n    },\\n    {\\n        value: '21-50',\\n        label: '21 to 50'\\n    },\\n    {\\n        value: '51-100',\\n        label: '51 to 100'\\n    }\\n];\\n\\nclass OutlinedInputAdornments extends React.Component {\\n    state = {\\n        amount      : '',\\n        password    : '',\\n        weight      : '',\\n        weightRange : '',\\n        showPassword: false\\n    };\\n\\n    handleChange = prop => event => {\\n        this.setState({[prop]: event.target.value});\\n    };\\n\\n    handleClickShowPassword = () => {\\n        this.setState(state => ({showPassword: !state.showPassword}));\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <div className={classes.root}>\\n                <TextField\\n                    id=\\\"outlined-simple-start-adornment\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"outlined\\\"\\n                    label=\\\"With outlined TextField\\\"\\n                    InputProps={{\\n                        startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>\\n                    }}\\n                />\\n                <TextField\\n                    select\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"outlined\\\"\\n                    label=\\\"With Select\\\"\\n                    value={this.state.weightRange}\\n                    onChange={this.handleChange('weightRange')}\\n                    InputProps={{\\n                        startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>\\n                    }}\\n                >\\n                    {ranges.map(option => (\\n                        <MenuItem key={option.value} value={option.value}>\\n                            {option.label}\\n                        </MenuItem>\\n                    ))}\\n                </TextField>\\n                <TextField\\n                    id=\\\"outlined-adornment-amount\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"outlined\\\"\\n                    label=\\\"Amount\\\"\\n                    value={this.state.amount}\\n                    onChange={this.handleChange('amount')}\\n                    InputProps={{\\n                        startAdornment: <InputAdornment position=\\\"start\\\">$</InputAdornment>\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"outlined-adornment-weight\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"outlined\\\"\\n                    label=\\\"Weight\\\"\\n                    value={this.state.weight}\\n                    onChange={this.handleChange('weight')}\\n                    helperText=\\\"Weight\\\"\\n                    InputProps={{\\n                        endAdornment: <InputAdornment position=\\\"end\\\">Kg</InputAdornment>\\n                    }}\\n                />\\n                <TextField\\n                    id=\\\"outlined-adornment-password\\\"\\n                    className={classNames(classes.margin, classes.textField)}\\n                    variant=\\\"outlined\\\"\\n                    type={this.state.showPassword ? 'text' : 'password'}\\n                    label=\\\"Password\\\"\\n                    value={this.state.password}\\n                    onChange={this.handleChange('password')}\\n                    InputProps={{\\n                        endAdornment: (\\n                            <InputAdornment position=\\\"end\\\">\\n                                <IconButton\\n                                    aria-label=\\\"Toggle password visibility\\\"\\n                                    onClick={this.handleClickShowPassword}\\n                                >\\n                                    {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\\n                                </IconButton>\\n                            </InputAdornment>\\n                        )\\n                    }}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nOutlinedInputAdornments.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(OutlinedInputAdornments);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    container: {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    textField: {\n        marginLeft : theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width      : 200\n    }\n});\n\nconst TextFieldMargins = props => {\n    const {classes} = props;\n\n    return (\n        <div className={classes.container}>\n            <TextField\n                label=\"None\"\n                id=\"margin-none\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Some important text\"\n            />\n            <TextField\n                label=\"Dense\"\n                id=\"margin-dense\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Some important text\"\n                margin=\"dense\"\n            />\n            <TextField\n                label=\"Normal\"\n                id=\"margin-normal\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Some important text\"\n                margin=\"normal\"\n            />\n        </div>\n    );\n};\n\nTextFieldMargins.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TextFieldMargins);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst styles = theme => ({\\n    container: {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    textField: {\\n        marginLeft : theme.spacing.unit,\\n        marginRight: theme.spacing.unit,\\n        width      : 200\\n    }\\n});\\n\\nconst TextFieldMargins = props => {\\n    const {classes} = props;\\n\\n    return (\\n        <div className={classes.container}>\\n            <TextField\\n                label=\\\"None\\\"\\n                id=\\\"margin-none\\\"\\n                defaultValue=\\\"Default Value\\\"\\n                className={classes.textField}\\n                helperText=\\\"Some important text\\\"\\n            />\\n            <TextField\\n                label=\\\"Dense\\\"\\n                id=\\\"margin-dense\\\"\\n                defaultValue=\\\"Default Value\\\"\\n                className={classes.textField}\\n                helperText=\\\"Some important text\\\"\\n                margin=\\\"dense\\\"\\n            />\\n            <TextField\\n                label=\\\"Normal\\\"\\n                id=\\\"margin-normal\\\"\\n                defaultValue=\\\"Default Value\\\"\\n                className={classes.textField}\\n                helperText=\\\"Some important text\\\"\\n                margin=\\\"normal\\\"\\n            />\\n        </div>\\n    );\\n};\\n\\nTextFieldMargins.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(TextFieldMargins);\\n\"","/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    container  : {\n        display : 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        margin: theme.spacing.unit\n    }\n});\n\nfunction TextMaskCustom(props)\n{\n    const {inputRef, ...other} = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={inputRef}\n            mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            showMask\n        />\n    );\n}\n\nTextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired\n};\n\nfunction NumberFormatCustom(props)\n{\n    const {inputRef, onChange, ...other} = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={values => {\n                onChange({\n                    target: {\n                        value: values.value\n                    }\n                });\n            }}\n            thousandSeparator\n            prefix=\"$\"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nclass FormattedInputs extends React.Component {\n    state = {\n        textmask    : '(1  )    -    ',\n        numberformat: '1320'\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        const {textmask, numberformat} = this.state;\n\n        return (\n            <div className={classes.container}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n                    <Input\n                        value={textmask}\n                        onChange={this.handleChange('textmask')}\n                        id=\"formatted-text-mask-input\"\n                        inputComponent={TextMaskCustom}\n                    />\n                </FormControl>\n                <TextField\n                    className={classes.formControl}\n                    label=\"react-number-format\"\n                    value={numberformat}\n                    onChange={this.handleChange('numberformat')}\n                    id=\"formatted-numberformat-input\"\n                    InputProps={{\n                        inputComponent: NumberFormatCustom\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nFormattedInputs.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FormattedInputs);\n","module.exports = \"/* eslint-disable react/prefer-stateless-function */\\n\\nimport React from 'react';\\nimport MaskedInput from 'react-text-mask';\\nimport NumberFormat from 'react-number-format';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport TextField from '@material-ui/core/TextField';\\nimport FormControl from '@material-ui/core/FormControl';\\n\\nconst styles = theme => ({\\n    container  : {\\n        display : 'flex',\\n        flexWrap: 'wrap'\\n    },\\n    formControl: {\\n        margin: theme.spacing.unit\\n    }\\n});\\n\\nfunction TextMaskCustom(props)\\n{\\n    const {inputRef, ...other} = props;\\n\\n    return (\\n        <MaskedInput\\n            {...other}\\n            ref={inputRef}\\n            mask={['(', /[1-9]/, /\\\\d/, /\\\\d/, ')', ' ', /\\\\d/, /\\\\d/, /\\\\d/, '-', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/]}\\n            placeholderChar={'\\\\u2000'}\\n            showMask\\n        />\\n    );\\n}\\n\\nTextMaskCustom.propTypes = {\\n    inputRef: PropTypes.func.isRequired\\n};\\n\\nfunction NumberFormatCustom(props)\\n{\\n    const {inputRef, onChange, ...other} = props;\\n\\n    return (\\n        <NumberFormat\\n            {...other}\\n            getInputRef={inputRef}\\n            onValueChange={values => {\\n                onChange({\\n                    target: {\\n                        value: values.value\\n                    }\\n                });\\n            }}\\n            thousandSeparator\\n            prefix=\\\"$\\\"\\n        />\\n    );\\n}\\n\\nNumberFormatCustom.propTypes = {\\n    inputRef: PropTypes.func.isRequired,\\n    onChange: PropTypes.func.isRequired\\n};\\n\\nclass FormattedInputs extends React.Component {\\n    state = {\\n        textmask    : '(1  )    -    ',\\n        numberformat: '1320'\\n    };\\n\\n    handleChange = name => event => {\\n        this.setState({\\n            [name]: event.target.value\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const {textmask, numberformat} = this.state;\\n\\n        return (\\n            <div className={classes.container}>\\n                <FormControl className={classes.formControl}>\\n                    <InputLabel htmlFor=\\\"formatted-text-mask-input\\\">react-text-mask</InputLabel>\\n                    <Input\\n                        value={textmask}\\n                        onChange={this.handleChange('textmask')}\\n                        id=\\\"formatted-text-mask-input\\\"\\n                        inputComponent={TextMaskCustom}\\n                    />\\n                </FormControl>\\n                <TextField\\n                    className={classes.formControl}\\n                    label=\\\"react-number-format\\\"\\n                    value={numberformat}\\n                    onChange={this.handleChange('numberformat')}\\n                    id=\\\"formatted-numberformat-input\\\"\\n                    InputProps={{\\n                        inputComponent: NumberFormatCustom\\n                    }}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nFormattedInputs.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(FormattedInputs);\\n\"","import React from 'react';\nimport {FuseExample, FuseHighlight, FusePageSimple} from '@fuse';\nimport {Button, Icon, Typography} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles/index';\n/* eslint import/no-webpack-loader-syntax: off */\n/* eslint no-unused-vars: off */\nconst styles = theme => ({\n    layoutRoot: {\n        '& .description': {\n            marginBottom: 16\n        }\n    }\n});\n\nfunction TextFields({classes})\n{\n    return (\n\n        <FusePageSimple\n            classes={{\n                root: classes.layoutRoot\n            }}\n            header={\n                <div className=\"flex flex-1 items-center justify-between p-24\">\n                    <Typography variant=\"h6\">Text Fields</Typography>\n                    <Button\n                        className=\"normal-case\"\n                        variant=\"contained\"\n                        component=\"a\"\n                        href=\"https://material-ui-next.com/demos/text-fields\"\n                        target=\"_blank\"\n                    >\n                        <Icon className=\"mr-4\">link</Icon>\n                        Reference\n                    </Button>\n                </div>\n            }\n            content={\n                <div className=\"p-24 max-w-2xl mx-auto\">\n                    <Typography className=\"text-44 mt-32 mb-8\" component=\"h1\">Text Fields</Typography>\n                    <Typography className=\"description\">Text fields let users enter and edit text.</Typography>\n\n                    <Typography className=\"mb-16\" component=\"div\"><a href=\"https://material.io/design/components/text-fields.html\">Text fields</a> allow users to enter text into a\n                        UI. They typically appear in forms and dialogs.</Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">TextField</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">The <code>TextField</code> wrapper component is a complete form control including a label, input and help\n                        text.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/TextFields.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/TextFields.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Outlined</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><code>TextField</code> supports outlined styling.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/OutlinedTextFields.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/OutlinedTextFields.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Filled</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><code>TextField</code> supports filled styling.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/FilledTextFields.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/FilledTextFields.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Components</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><code>TextField</code> is composed of smaller components (\n                        <a href=\"/api/form-control/\"><code>FormControl</code></a>,\n                        <a href=\"/api/input/\"><code>Input</code></a>,\n                        <a href=\"/api/filled-input/\"><code>FilledInput</code></a>,\n                        <a href=\"/api/input-label/\"><code>InputLabel</code></a>,\n                        <a href=\"/api/outlined-input/\"><code>OutlinedInput</code></a>,\n                        and <a href=\"/api/form-helper-text/\"><code>FormHelperText</code></a>\n                        ) that you can leverage directly to significantly customize your form inputs.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You might also have noticed that some native HTML input properties are missing from\n                        the <code>TextField</code> component.\n                        This is on purpose.\n                        The component takes care of the most used properties, then it&#39;s up to the user to use the underlying component shown in the following demo. Still, you\n                        can use <code>inputProps</code> (and <code>InputProps</code>, <code>InputLabelProps</code> properties) if you want to avoid some boilerplate.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/ComposedTextField.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/ComposedTextField.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Inputs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/Inputs.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/Inputs.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Customized inputs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">If you have been reading the <a href=\"/customization/overrides/\">overrides documentation page</a>\n                        but you are not confident jumping in, here&#39;s an example of how you can change the main color of an Input.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/CustomizedInputs.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/CustomizedInputs.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Input Adornments</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><code>Input</code> allows the provision of <code>InputAdornment</code>.\n                        These can be used to add a prefix, a suffix or an action to an input.\n                        For instance, you can use an icon button to hide or reveal the password.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/InputAdornments.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/InputAdornments.js')}\n                    /></Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">With icon</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Icons can be specified as prepended or appended.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/InputWithIcon.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/InputWithIcon.js')}\n                    /></Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">Filled Input Adornments</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/FilledInputAdornments.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/FilledInputAdornments.js')}\n                    /></Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">Outlined Input Adornments</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/OutlinedInputAdornments.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/OutlinedInputAdornments.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Layout</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><code>TextField</code>, <code>FormControl</code> allow the specification of <code>margin</code> to alter the\n                        vertical spacing of inputs. Using\n                        <code>none</code> (default) will not apply margins to the <code>FormControl</code>, whereas <code>dense</code> and <code>normal</code> will as well as alter\n                        other styles to meet the specification.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/TextFieldMargins.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/TextFieldMargins.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Limitations</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">The input label &quot;shrink&quot; state isn&#39;t always correct.\n                        The input label is supposed to shrink as soon as the input is displaying something.\n                        In some circumstances, we can&#39;t determine the &quot;shrink&quot; state (number input, datetime input, Stripe input). You might notice an\n                        overlap.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><img src=\"/static/images/text-fields/shrink.png\" alt=\"shrink\"/></Typography>\n                    <Typography className=\"mb-16\" component=\"div\">To workaround the issue, you can force the &quot;shrink&quot; state of the label.</Typography>\n\n                    <FuseHighlight component=\"pre\" className=\"language-jsx\">\n                        {`\n<TextField InputLabelProps={{ shrink: true }} />\n`}\n                    </FuseHighlight>\n                    <Typography className=\"mb-16\" component=\"div\">or</Typography>\n\n                    <FuseHighlight component=\"pre\" className=\"language-jsx\">\n                        {`\n<InputLabel shrink>Count</InputLabel>\n`}\n                    </FuseHighlight>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Formatted inputs</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">You can use third-party libraries to format an input.\n                        You have to provide a custom implementation of the <code>&lt;input&gt;</code> element with the <code>inputComponent</code> property.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">The following demo uses the <a href=\"https://github.com/text-mask/text-mask\">react-text-mask</a> and <a\n                        href=\"https://github.com/s-yadav/react-number-format\">react-number-format</a> libraries.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/text-fields/FormattedInputs.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/text-fields/FormattedInputs.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Complementary projects</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">For more advanced use cases you might be able to take advantage of:</Typography>\n                    <ul>\n                        <li><a href=\"https://github.com/erikras/redux-form-material-ui\">redux-form-material-ui</a> A set of wrapper components to facilitate using Material UI with\n                            Redux Form.\n                        </li>\n                        <li><a href=\"https://github.com/stackworx/formik-material-ui\">formik-material-ui</a> Bindings for using Material-UI with formik.</li>\n                        <li><a href=\"https://github.com/Deadly0/final-form-material-ui\">final-form-material-ui</a> A set of wrapper components to facilitate using Material UI with\n                            Final Form.\n                        </li>\n                    </ul>\n\n                </div>\n            }\n        />\n\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(TextFields);\n"],"sourceRoot":""}