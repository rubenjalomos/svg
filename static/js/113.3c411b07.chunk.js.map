{"version":3,"sources":["main/content/components-third-party/react-chartjs-2/examples/doughnut.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/doughnut.js?bf93","main/content/components-third-party/react-chartjs-2/examples/dynamic-doughnut.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/dynamic-doughnut.js?1994","main/content/components-third-party/react-chartjs-2/examples/pie.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/pie.js?1aa4","main/content/components-third-party/react-chartjs-2/examples/line.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/line.js?2236","main/content/components-third-party/react-chartjs-2/examples/bar.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/bar.js?9849","main/content/components-third-party/react-chartjs-2/examples/horizontalBar.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/horizontalBar.js?f591","main/content/components-third-party/react-chartjs-2/examples/radar.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/radar.js?d38a","main/content/components-third-party/react-chartjs-2/examples/polar.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/polar.js?dd9c","main/content/components-third-party/react-chartjs-2/examples/bubble.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/bubble.js?821e","main/content/components-third-party/react-chartjs-2/examples/scatter.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/scatter.js?bd40","main/content/components-third-party/react-chartjs-2/examples/mix.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/mix.js?f956","main/content/components-third-party/react-chartjs-2/examples/randomizedLine.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/randomizedLine.js?0507","main/content/components-third-party/react-chartjs-2/examples/crazyLine.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/crazyLine.js?edf7","main/content/components-third-party/react-chartjs-2/examples/legend-options.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/legend-options.js?1188","main/content/components-third-party/react-chartjs-2/examples/legend-handlers.js","webpack:///./src/main/content/components-third-party/react-chartjs-2/examples/legend-handlers.js?061d","main/content/components-third-party/react-chartjs-2/ReactChartJs2Doc.js"],"names":["data","labels","datasets","backgroundColor","hoverBackgroundColor","DoughnutExample","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_chartjs_2__WEBPACK_IMPORTED_MODULE_6__","Component","module","exports","getRandomInt","min","max","Math","floor","random","getState","DynamicDoughnutExample","state","_this2","this","setInterval","setState","PieExample","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LineExample","borderWidth","hoverBorderColor","BarExample","width","height","options","RadarExample","PolarExample","x","y","r","BubbleExample","ScatterExample","type","yAxisID","responsive","tooltips","mode","elements","line","scales","xAxes","display","gridLines","yAxes","position","id","show","plugins","afterDraw","chartInstance","easing","chart","ctx","fillText","MixExample","initialState","Graph","_this","oldDataSet","newData","length","push","newDataSet","Object","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","newState","react__WEBPACK_IMPORTED_MODULE_6___default","react_chartjs_2__WEBPACK_IMPORTED_MODULE_7__","RandomizedDataLineExample","FuseUtils","randomMatColor","CrazyDataLineExample","legendOpts","fullWidth","reverse","fontColor","LegendExample","legend","value","legendOptsInput","opts","JSON","parse","e","alert","message","Error","cols","rows","ref","input","defaultValue","stringify","onClick","applyLegendSettings","redraw","item","concat","text","index","onHover","ReactChartJs2Doc","classes","props","_fuse__WEBPACK_IMPORTED_MODULE_7__","root","layoutRoot","header","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","variant","component","href","target","content","require","default","raw","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","withStyles","theme","withTheme"],"mappings":"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","file":"static/js/113.3c411b07.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\nconst data = {\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow'\n    ],\n    datasets: [\n        {\n            data                : [300, 50, 100],\n            backgroundColor     : [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n    ]\n};\n\nclass DoughnutExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Doughnut Example</h2>\n                <Doughnut data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default DoughnutExample\n","module.exports = \"import React, {Component} from 'react';\\nimport {Doughnut} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : [\\n        'Red',\\n        'Green',\\n        'Yellow'\\n    ],\\n    datasets: [\\n        {\\n            data                : [300, 50, 100],\\n            backgroundColor     : [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ],\\n            hoverBackgroundColor: [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ]\\n        }\\n    ]\\n};\\n\\nclass DoughnutExample extends Component {\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Doughnut Example</h2>\\n                <Doughnut data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default DoughnutExample\\n\"","import React, {Component} from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\nfunction getRandomInt(min, max)\n{\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getState = () => ({\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow'\n    ],\n    datasets: [\n        {\n            data                : [getRandomInt(50, 200), getRandomInt(100, 150), getRandomInt(150, 250)],\n            backgroundColor     : [\n                '#CCC',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n    ]\n});\n\nclass DynamicDoughnutExample extends Component {\n\n    state = getState();\n\n    componentDidMount()\n    {\n        setInterval(() => {\n            this.setState(getState());\n        }, 5000);\n    }\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Dynamicly refreshed Doughnut Example</h2>\n                <Doughnut data={this.state}/>\n            </div>\n        );\n    }\n}\n\nexport default DynamicDoughnutExample\n","module.exports = \"import React, {Component} from 'react';\\nimport {Doughnut} from 'react-chartjs-2';\\n\\nfunction getRandomInt(min, max)\\n{\\n    return Math.floor(Math.random() * (max - min + 1)) + min;\\n}\\n\\nconst getState = () => ({\\n    labels  : [\\n        'Red',\\n        'Green',\\n        'Yellow'\\n    ],\\n    datasets: [\\n        {\\n            data                : [getRandomInt(50, 200), getRandomInt(100, 150), getRandomInt(150, 250)],\\n            backgroundColor     : [\\n                '#CCC',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ],\\n            hoverBackgroundColor: [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ]\\n        }\\n    ]\\n});\\n\\nclass DynamicDoughnutExample extends Component {\\n\\n    state = getState();\\n\\n    componentDidMount()\\n    {\\n        setInterval(() => {\\n            this.setState(getState());\\n        }, 5000);\\n    }\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Dynamicly refreshed Doughnut Example</h2>\\n                <Doughnut data={this.state}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default DynamicDoughnutExample\\n\"","import React, {Component} from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nconst data = {\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow'\n    ],\n    datasets: [\n        {\n            data                : [300, 50, 100],\n            backgroundColor     : [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n    ]\n};\n\nclass PieExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Pie Example</h2>\n                <Pie data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default PieExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Pie} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : [\\n        'Red',\\n        'Green',\\n        'Yellow'\\n    ],\\n    datasets: [\\n        {\\n            data                : [300, 50, 100],\\n            backgroundColor     : [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ],\\n            hoverBackgroundColor: [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ]\\n        }\\n    ]\\n};\\n\\nclass PieExample extends Component {\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Pie Example</h2>\\n                <Pie data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default PieExample;\\n\"","import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst data = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label                    : 'My First dataset',\n            fill                     : false,\n            lineTension              : 0.1,\n            backgroundColor          : 'rgba(75,192,192,0.4)',\n            borderColor              : 'rgba(75,192,192,1)',\n            borderCapStyle           : 'butt',\n            borderDash               : [],\n            borderDashOffset         : 0.0,\n            borderJoinStyle          : 'miter',\n            pointBorderColor         : 'rgba(75,192,192,1)',\n            pointBackgroundColor     : '#fff',\n            pointBorderWidth         : 1,\n            pointHoverRadius         : 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\n            pointHoverBorderWidth    : 2,\n            pointRadius              : 1,\n            pointHitRadius           : 10,\n            data                     : [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nclass LineExample extends Component {\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Line Example</h2>\n                <Line data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default LineExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Line} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n    datasets: [\\n        {\\n            label                    : 'My First dataset',\\n            fill                     : false,\\n            lineTension              : 0.1,\\n            backgroundColor          : 'rgba(75,192,192,0.4)',\\n            borderColor              : 'rgba(75,192,192,1)',\\n            borderCapStyle           : 'butt',\\n            borderDash               : [],\\n            borderDashOffset         : 0.0,\\n            borderJoinStyle          : 'miter',\\n            pointBorderColor         : 'rgba(75,192,192,1)',\\n            pointBackgroundColor     : '#fff',\\n            pointBorderWidth         : 1,\\n            pointHoverRadius         : 5,\\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\\n            pointHoverBorderWidth    : 2,\\n            pointRadius              : 1,\\n            pointHitRadius           : 10,\\n            data                     : [65, 59, 80, 81, 56, 55, 40]\\n        }\\n    ]\\n};\\n\\nclass LineExample extends Component {\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Line Example</h2>\\n                <Line data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default LineExample;\\n\"","import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nconst data = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label               : 'My First dataset',\n            backgroundColor     : 'rgba(255,99,132,0.2)',\n            borderColor         : 'rgba(255,99,132,1)',\n            borderWidth         : 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor    : 'rgba(255,99,132,1)',\n            data                : [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nclass BarExample extends Component {\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Bar Example (custom size)</h2>\n                <Bar\n                    data={data}\n                    width={100}\n                    height={50}\n                    options={{}}\n                />\n            </div>\n        );\n    }\n}\n\nexport default BarExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Bar} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n    datasets: [\\n        {\\n            label               : 'My First dataset',\\n            backgroundColor     : 'rgba(255,99,132,0.2)',\\n            borderColor         : 'rgba(255,99,132,1)',\\n            borderWidth         : 1,\\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\\n            hoverBorderColor    : 'rgba(255,99,132,1)',\\n            data                : [65, 59, 80, 81, 56, 55, 40]\\n        }\\n    ]\\n};\\n\\nclass BarExample extends Component {\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Bar Example (custom size)</h2>\\n                <Bar\\n                    data={data}\\n                    width={100}\\n                    height={50}\\n                    options={{}}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default BarExample;\\n\"","import React, {Component} from 'react';\nimport {HorizontalBar} from 'react-chartjs-2';\n\nconst data = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label               : 'My First dataset',\n            backgroundColor     : 'rgba(255,99,132,0.2)',\n            borderColor         : 'rgba(255,99,132,1)',\n            borderWidth         : 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor    : 'rgba(255,99,132,1)',\n            data                : [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nclass BarExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Horizontal Bar Example</h2>\n                <HorizontalBar data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default BarExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {HorizontalBar} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n    datasets: [\\n        {\\n            label               : 'My First dataset',\\n            backgroundColor     : 'rgba(255,99,132,0.2)',\\n            borderColor         : 'rgba(255,99,132,1)',\\n            borderWidth         : 1,\\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\\n            hoverBorderColor    : 'rgba(255,99,132,1)',\\n            data                : [65, 59, 80, 81, 56, 55, 40]\\n        }\\n    ]\\n};\\n\\nclass BarExample extends Component {\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Horizontal Bar Example</h2>\\n                <HorizontalBar data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default BarExample;\\n\"","import React, {Component} from 'react';\nimport {Radar} from 'react-chartjs-2';\n\nconst data = {\n    labels  : ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n    datasets: [\n        {\n            label                    : 'My First dataset',\n            backgroundColor          : 'rgba(179,181,198,0.2)',\n            borderColor              : 'rgba(179,181,198,1)',\n            pointBackgroundColor     : 'rgba(179,181,198,1)',\n            pointBorderColor         : '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor    : 'rgba(179,181,198,1)',\n            data                     : [65, 59, 90, 81, 56, 55, 40]\n        },\n        {\n            label                    : 'My Second dataset',\n            backgroundColor          : 'rgba(255,99,132,0.2)',\n            borderColor              : 'rgba(255,99,132,1)',\n            pointBackgroundColor     : 'rgba(255,99,132,1)',\n            pointBorderColor         : '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor    : 'rgba(255,99,132,1)',\n            data                     : [28, 48, 40, 19, 96, 27, 100]\n        }\n    ]\n};\n\nclass RadarExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Radar Example</h2>\n                <Radar data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default RadarExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Radar} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\\n    datasets: [\\n        {\\n            label                    : 'My First dataset',\\n            backgroundColor          : 'rgba(179,181,198,0.2)',\\n            borderColor              : 'rgba(179,181,198,1)',\\n            pointBackgroundColor     : 'rgba(179,181,198,1)',\\n            pointBorderColor         : '#fff',\\n            pointHoverBackgroundColor: '#fff',\\n            pointHoverBorderColor    : 'rgba(179,181,198,1)',\\n            data                     : [65, 59, 90, 81, 56, 55, 40]\\n        },\\n        {\\n            label                    : 'My Second dataset',\\n            backgroundColor          : 'rgba(255,99,132,0.2)',\\n            borderColor              : 'rgba(255,99,132,1)',\\n            pointBackgroundColor     : 'rgba(255,99,132,1)',\\n            pointBorderColor         : '#fff',\\n            pointHoverBackgroundColor: '#fff',\\n            pointHoverBorderColor    : 'rgba(255,99,132,1)',\\n            data                     : [28, 48, 40, 19, 96, 27, 100]\\n        }\\n    ]\\n};\\n\\nclass RadarExample extends Component {\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Radar Example</h2>\\n                <Radar data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default RadarExample;\\n\"","import React, {Component} from 'react';\nimport {Polar} from 'react-chartjs-2';\n\nconst data = {\n    datasets: [\n        {\n            data           : [\n                11,\n                16,\n                7,\n                3,\n                14\n            ],\n            backgroundColor: [\n                '#FF6384',\n                '#4BC0C0',\n                '#FFCE56',\n                '#E7E9ED',\n                '#36A2EB'\n            ],\n            label          : 'My dataset' // for legend\n        }\n    ],\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow',\n        'Grey',\n        'Blue'\n    ]\n};\n\nclass PolarExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Polar Example</h2>\n                <Polar data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default PolarExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Polar} from 'react-chartjs-2';\\n\\nconst data = {\\n    datasets: [\\n        {\\n            data           : [\\n                11,\\n                16,\\n                7,\\n                3,\\n                14\\n            ],\\n            backgroundColor: [\\n                '#FF6384',\\n                '#4BC0C0',\\n                '#FFCE56',\\n                '#E7E9ED',\\n                '#36A2EB'\\n            ],\\n            label          : 'My dataset' // for legend\\n        }\\n    ],\\n    labels  : [\\n        'Red',\\n        'Green',\\n        'Yellow',\\n        'Grey',\\n        'Blue'\\n    ]\\n};\\n\\nclass PolarExample extends Component {\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Polar Example</h2>\\n                <Polar data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default PolarExample;\\n\"","import React, {Component} from 'react';\nimport {Bubble} from 'react-chartjs-2';\n\nconst data = {\n    labels  : ['January'],\n    datasets: [\n        {\n            label                    : 'My First dataset',\n            fill                     : false,\n            lineTension              : 0.1,\n            backgroundColor          : 'rgba(75,192,192,0.4)',\n            borderColor              : 'rgba(75,192,192,1)',\n            borderCapStyle           : 'butt',\n            borderDash               : [],\n            borderDashOffset         : 0.0,\n            borderJoinStyle          : 'miter',\n            pointBorderColor         : 'rgba(75,192,192,1)',\n            pointBackgroundColor     : '#fff',\n            pointBorderWidth         : 1,\n            pointHoverRadius         : 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\n            pointHoverBorderWidth    : 2,\n            pointRadius              : 1,\n            pointHitRadius           : 10,\n            data                     : [\n                {\n                    x: 10,\n                    y: 20,\n                    r: 5\n                }\n            ]\n        }\n    ]\n};\n\nclass BubbleExample extends Component {\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Bubble Example</h2>\n                <Bubble data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default BubbleExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Bubble} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : ['January'],\\n    datasets: [\\n        {\\n            label                    : 'My First dataset',\\n            fill                     : false,\\n            lineTension              : 0.1,\\n            backgroundColor          : 'rgba(75,192,192,0.4)',\\n            borderColor              : 'rgba(75,192,192,1)',\\n            borderCapStyle           : 'butt',\\n            borderDash               : [],\\n            borderDashOffset         : 0.0,\\n            borderJoinStyle          : 'miter',\\n            pointBorderColor         : 'rgba(75,192,192,1)',\\n            pointBackgroundColor     : '#fff',\\n            pointBorderWidth         : 1,\\n            pointHoverRadius         : 5,\\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\\n            pointHoverBorderWidth    : 2,\\n            pointRadius              : 1,\\n            pointHitRadius           : 10,\\n            data                     : [\\n                {\\n                    x: 10,\\n                    y: 20,\\n                    r: 5\\n                }\\n            ]\\n        }\\n    ]\\n};\\n\\nclass BubbleExample extends Component {\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Bubble Example</h2>\\n                <Bubble data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default BubbleExample;\\n\"","import React, {Component} from 'react';\nimport {Scatter} from 'react-chartjs-2';\n\nconst data = {\n    labels  : ['Scatter'],\n    datasets: [\n        {\n            label                    : 'My First dataset',\n            fill                     : false,\n            backgroundColor          : 'rgba(75,192,192,0.4)',\n            pointBorderColor         : 'rgba(75,192,192,1)',\n            pointBackgroundColor     : '#fff',\n            pointBorderWidth         : 1,\n            pointHoverRadius         : 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\n            pointHoverBorderWidth    : 2,\n            pointRadius              : 1,\n            pointHitRadius           : 10,\n            data                     : [\n                {\n                    x: 65,\n                    y: 75\n                },\n                {\n                    x: 59,\n                    y: 49\n                },\n                {\n                    x: 80,\n                    y: 90\n                },\n                {\n                    x: 81,\n                    y: 29\n                },\n                {\n                    x: 56,\n                    y: 36\n                },\n                {\n                    x: 55,\n                    y: 25\n                },\n                {\n                    x: 40,\n                    y: 18\n                }\n            ]\n        }\n    ]\n};\n\nclass ScatterExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Scatter Example</h2>\n                <Scatter data={data}/>\n            </div>\n        );\n    }\n}\n\nexport default ScatterExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Scatter} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : ['Scatter'],\\n    datasets: [\\n        {\\n            label                    : 'My First dataset',\\n            fill                     : false,\\n            backgroundColor          : 'rgba(75,192,192,0.4)',\\n            pointBorderColor         : 'rgba(75,192,192,1)',\\n            pointBackgroundColor     : '#fff',\\n            pointBorderWidth         : 1,\\n            pointHoverRadius         : 5,\\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\\n            pointHoverBorderWidth    : 2,\\n            pointRadius              : 1,\\n            pointHitRadius           : 10,\\n            data                     : [\\n                {\\n                    x: 65,\\n                    y: 75\\n                },\\n                {\\n                    x: 59,\\n                    y: 49\\n                },\\n                {\\n                    x: 80,\\n                    y: 90\\n                },\\n                {\\n                    x: 81,\\n                    y: 29\\n                },\\n                {\\n                    x: 56,\\n                    y: 36\\n                },\\n                {\\n                    x: 55,\\n                    y: 25\\n                },\\n                {\\n                    x: 40,\\n                    y: 18\\n                }\\n            ]\\n        }\\n    ]\\n};\\n\\nclass ScatterExample extends Component {\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Scatter Example</h2>\\n                <Scatter data={data}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default ScatterExample;\\n\"","import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nconst data = {\n    datasets: [\n        {\n            label                    : 'Sales',\n            type                     : 'line',\n            data                     : [51, 65, 40, 49, 60, 37, 40],\n            fill                     : false,\n            borderColor              : '#EC932F',\n            backgroundColor          : '#EC932F',\n            pointBorderColor         : '#EC932F',\n            pointBackgroundColor     : '#EC932F',\n            pointHoverBackgroundColor: '#EC932F',\n            pointHoverBorderColor    : '#EC932F',\n            yAxisID                  : 'y-axis-2'\n        }, {\n            label               : 'Visitor',\n            type                : 'bar',\n            data                : [200, 185, 590, 621, 250, 400, 95],\n            fill                : false,\n            backgroundColor     : '#71B37C',\n            borderColor         : '#71B37C',\n            hoverBackgroundColor: '#71B37C',\n            hoverBorderColor    : '#71B37C',\n            yAxisID             : 'y-axis-1'\n        }\n    ]\n};\n\nconst options = {\n    responsive: true,\n    labels    : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    tooltips  : {\n        mode: 'label'\n    },\n    elements  : {\n        line: {\n            fill: false\n        }\n    },\n    scales    : {\n\n        xAxes: [\n            {\n                display  : true,\n                gridLines: {\n                    display: false\n                },\n\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July']\n            }\n        ],\n        yAxes: [\n            {\n                type     : 'linear',\n                display  : true,\n                position : 'left',\n                id       : 'y-axis-1',\n                gridLines: {\n                    display: false\n                },\n                labels   : {\n                    show: true\n                }\n            },\n            {\n                type     : 'linear',\n                display  : true,\n                position : 'right',\n                id       : 'y-axis-2',\n                gridLines: {\n                    display: false\n                },\n                labels   : {\n                    show: true\n                }\n            }\n        ]\n    }\n};\n\nconst plugins = [\n    {\n        afterDraw: (chartInstance, easing) => {\n            const ctx = chartInstance.chart.ctx;\n            ctx.fillText(\"This text drawn by a plugin\", 100, 100);\n        }\n    }\n];\n\nclass MixExample extends Component {\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Mixed data Example</h2>\n                <Bar\n                    data={data}\n                    options={options}\n                    plugins={plugins}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MixExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Bar} from 'react-chartjs-2';\\n\\nconst data = {\\n    datasets: [\\n        {\\n            label                    : 'Sales',\\n            type                     : 'line',\\n            data                     : [51, 65, 40, 49, 60, 37, 40],\\n            fill                     : false,\\n            borderColor              : '#EC932F',\\n            backgroundColor          : '#EC932F',\\n            pointBorderColor         : '#EC932F',\\n            pointBackgroundColor     : '#EC932F',\\n            pointHoverBackgroundColor: '#EC932F',\\n            pointHoverBorderColor    : '#EC932F',\\n            yAxisID                  : 'y-axis-2'\\n        }, {\\n            label               : 'Visitor',\\n            type                : 'bar',\\n            data                : [200, 185, 590, 621, 250, 400, 95],\\n            fill                : false,\\n            backgroundColor     : '#71B37C',\\n            borderColor         : '#71B37C',\\n            hoverBackgroundColor: '#71B37C',\\n            hoverBorderColor    : '#71B37C',\\n            yAxisID             : 'y-axis-1'\\n        }\\n    ]\\n};\\n\\nconst options = {\\n    responsive: true,\\n    labels    : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n    tooltips  : {\\n        mode: 'label'\\n    },\\n    elements  : {\\n        line: {\\n            fill: false\\n        }\\n    },\\n    scales    : {\\n\\n        xAxes: [\\n            {\\n                display  : true,\\n                gridLines: {\\n                    display: false\\n                },\\n\\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July']\\n            }\\n        ],\\n        yAxes: [\\n            {\\n                type     : 'linear',\\n                display  : true,\\n                position : 'left',\\n                id       : 'y-axis-1',\\n                gridLines: {\\n                    display: false\\n                },\\n                labels   : {\\n                    show: true\\n                }\\n            },\\n            {\\n                type     : 'linear',\\n                display  : true,\\n                position : 'right',\\n                id       : 'y-axis-2',\\n                gridLines: {\\n                    display: false\\n                },\\n                labels   : {\\n                    show: true\\n                }\\n            }\\n        ]\\n    }\\n};\\n\\nconst plugins = [\\n    {\\n        afterDraw: (chartInstance, easing) => {\\n            const ctx = chartInstance.chart.ctx;\\n            ctx.fillText(\\\"This text drawn by a plugin\\\", 100, 100);\\n        }\\n    }\\n];\\n\\nclass MixExample extends Component {\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Mixed data Example</h2>\\n                <Bar\\n                    data={data}\\n                    options={options}\\n                    plugins={plugins}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default MixExample;\\n\"","import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst initialState = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label                    : 'My First dataset',\n            fill                     : false,\n            lineTension              : 0.1,\n            backgroundColor          : 'rgba(75,192,192,0.4)',\n            borderColor              : 'rgba(75,192,192,1)',\n            borderCapStyle           : 'butt',\n            borderDash               : [],\n            borderDashOffset         : 0.0,\n            borderJoinStyle          : 'miter',\n            pointBorderColor         : 'rgba(75,192,192,1)',\n            pointBackgroundColor     : '#fff',\n            pointBorderWidth         : 1,\n            pointHoverRadius         : 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\n            pointHoverBorderWidth    : 2,\n            pointRadius              : 1,\n            pointHitRadius           : 10,\n            data                     : [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nclass Graph extends Component {\n\n    state = initialState;\n\n    componentDidMount()\n    {\n        const _this = this;\n\n        setInterval(function () {\n            const oldDataSet = _this.state.datasets[0];\n            const newData = [];\n\n            for ( let x = 0; x < _this.state.labels.length; x++ )\n            {\n                newData.push(Math.floor(Math.random() * 100));\n            }\n\n            const newDataSet = {\n                ...oldDataSet\n            };\n\n            newDataSet.data = newData;\n\n            const newState = {\n                ...initialState,\n                datasets: [newDataSet]\n            };\n\n            _this.setState(newState);\n        }, 5000);\n    }\n\n    render()\n    {\n        return (\n            <Line data={this.state}/>\n        );\n    }\n}\n\nclass RandomizedDataLineExample extends Component {\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Random Animated Line Example</h2>\n                <Graph/>\n            </div>\n        );\n    }\n}\n\nexport default RandomizedDataLineExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Line} from 'react-chartjs-2';\\n\\nconst initialState = {\\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n    datasets: [\\n        {\\n            label                    : 'My First dataset',\\n            fill                     : false,\\n            lineTension              : 0.1,\\n            backgroundColor          : 'rgba(75,192,192,0.4)',\\n            borderColor              : 'rgba(75,192,192,1)',\\n            borderCapStyle           : 'butt',\\n            borderDash               : [],\\n            borderDashOffset         : 0.0,\\n            borderJoinStyle          : 'miter',\\n            pointBorderColor         : 'rgba(75,192,192,1)',\\n            pointBackgroundColor     : '#fff',\\n            pointBorderWidth         : 1,\\n            pointHoverRadius         : 5,\\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\\n            pointHoverBorderColor    : 'rgba(220,220,220,1)',\\n            pointHoverBorderWidth    : 2,\\n            pointRadius              : 1,\\n            pointHitRadius           : 10,\\n            data                     : [65, 59, 80, 81, 56, 55, 40]\\n        }\\n    ]\\n};\\n\\nclass Graph extends Component {\\n\\n    state = initialState;\\n\\n    componentDidMount()\\n    {\\n        const _this = this;\\n\\n        setInterval(function () {\\n            const oldDataSet = _this.state.datasets[0];\\n            const newData = [];\\n\\n            for ( let x = 0; x < _this.state.labels.length; x++ )\\n            {\\n                newData.push(Math.floor(Math.random() * 100));\\n            }\\n\\n            const newDataSet = {\\n                ...oldDataSet\\n            };\\n\\n            newDataSet.data = newData;\\n\\n            const newState = {\\n                ...initialState,\\n                datasets: [newDataSet]\\n            };\\n\\n            _this.setState(newState);\\n        }, 5000);\\n    }\\n\\n    render()\\n    {\\n        return (\\n            <Line data={this.state}/>\\n        );\\n    }\\n}\\n\\nclass RandomizedDataLineExample extends Component {\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Random Animated Line Example</h2>\\n                <Graph/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default RandomizedDataLineExample;\\n\"","import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport FuseUtils from '@fuse/FuseUtils'\n\nconst initialState = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label               : 'My First dataset',\n            backgroundColor     : 'rgba(255,99,132,0.2)',\n            borderColor         : 'rgba(255,99,132,1)',\n            borderWidth         : 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor    : 'rgba(255,99,132,1)',\n            data                : [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nclass Graph extends Component {\n\n    state = initialState;\n\n    componentDidMount()\n    {\n\n        const _this = this;\n\n        setInterval(function () {\n            const oldDataSet = _this.state.datasets[0];\n            const newData = [];\n\n            for ( let x = 0; x < _this.state.labels.length; x++ )\n            {\n                newData.push(Math.floor(Math.random() * 100));\n            }\n\n            const newDataSet = {\n                ...oldDataSet\n            };\n\n            newDataSet.data = newData;\n            newDataSet.backgroundColor = FuseUtils.randomMatColor();\n            newDataSet.borderColor = FuseUtils.randomMatColor();\n            newDataSet.hoverBackgroundColor = FuseUtils.randomMatColor();\n            newDataSet.hoverBorderColor = FuseUtils.randomMatColor();\n\n            const newState = {\n                ...initialState,\n                datasets: [newDataSet]\n            };\n\n            _this.setState(newState);\n        }, 5000);\n    }\n\n    render()\n    {\n        return (\n            <Bar data={this.state}/>\n        );\n    }\n}\n\nclass CrazyDataLineExample extends Component {\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>You can even make crazy graphs like this!</h2>\n                <Graph/>\n            </div>\n        );\n    }\n}\n\nexport default CrazyDataLineExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Bar} from 'react-chartjs-2';\\nimport FuseUtils from '@fuse/FuseUtils'\\n\\nconst initialState = {\\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n    datasets: [\\n        {\\n            label               : 'My First dataset',\\n            backgroundColor     : 'rgba(255,99,132,0.2)',\\n            borderColor         : 'rgba(255,99,132,1)',\\n            borderWidth         : 1,\\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\\n            hoverBorderColor    : 'rgba(255,99,132,1)',\\n            data                : [65, 59, 80, 81, 56, 55, 40]\\n        }\\n    ]\\n};\\n\\nclass Graph extends Component {\\n\\n    state = initialState;\\n\\n    componentDidMount()\\n    {\\n\\n        const _this = this;\\n\\n        setInterval(function () {\\n            const oldDataSet = _this.state.datasets[0];\\n            const newData = [];\\n\\n            for ( let x = 0; x < _this.state.labels.length; x++ )\\n            {\\n                newData.push(Math.floor(Math.random() * 100));\\n            }\\n\\n            const newDataSet = {\\n                ...oldDataSet\\n            };\\n\\n            newDataSet.data = newData;\\n            newDataSet.backgroundColor = FuseUtils.randomMatColor();\\n            newDataSet.borderColor = FuseUtils.randomMatColor();\\n            newDataSet.hoverBackgroundColor = FuseUtils.randomMatColor();\\n            newDataSet.hoverBorderColor = FuseUtils.randomMatColor();\\n\\n            const newState = {\\n                ...initialState,\\n                datasets: [newDataSet]\\n            };\\n\\n            _this.setState(newState);\\n        }, 5000);\\n    }\\n\\n    render()\\n    {\\n        return (\\n            <Bar data={this.state}/>\\n        );\\n    }\\n}\\n\\nclass CrazyDataLineExample extends Component {\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>You can even make crazy graphs like this!</h2>\\n                <Graph/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default CrazyDataLineExample;\\n\"","import React, {Component} from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nconst data = {\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow'\n    ],\n    datasets: [\n        {\n            data                : [300, 50, 100],\n            backgroundColor     : [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n    ]\n};\n\nconst legendOpts = {\n    display  : true,\n    position : 'top',\n    fullWidth: true,\n    reverse  : false,\n    labels   : {\n        fontColor: 'rgb(255, 99, 132)'\n    }\n};\n\nclass LegendExample extends Component {\n\n    state = {\n        legend: legendOpts\n    };\n\n    applyLegendSettings()\n    {\n        const {value} = this.legendOptsInput;\n\n        try\n        {\n            const opts = JSON.parse(value);\n            this.setState({\n                legend: opts\n            });\n        } catch ( e )\n        {\n            alert(e.message);\n            throw Error(e);\n        }\n    }\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Legend Options Example</h2>\n                <textarea\n                    cols=\"40\"\n                    rows=\"15\"\n                    ref={input => {\n                        this.legendOptsInput = input;\n                    }}\n                    defaultValue={JSON.stringify(this.state.legend, null, 2)}\n                />\n                <div>\n                    <button onClick={this.applyLegendSettings}>Apply legend settings</button>\n                </div>\n                <Pie data={data} legend={this.state.legend} redraw/>\n            </div>\n        );\n    }\n}\n\nexport default LegendExample\n","module.exports = \"import React, {Component} from 'react';\\nimport {Pie} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : [\\n        'Red',\\n        'Green',\\n        'Yellow'\\n    ],\\n    datasets: [\\n        {\\n            data                : [300, 50, 100],\\n            backgroundColor     : [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ],\\n            hoverBackgroundColor: [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ]\\n        }\\n    ]\\n};\\n\\nconst legendOpts = {\\n    display  : true,\\n    position : 'top',\\n    fullWidth: true,\\n    reverse  : false,\\n    labels   : {\\n        fontColor: 'rgb(255, 99, 132)'\\n    }\\n};\\n\\nclass LegendExample extends Component {\\n\\n    state = {\\n        legend: legendOpts\\n    };\\n\\n    applyLegendSettings()\\n    {\\n        const {value} = this.legendOptsInput;\\n\\n        try\\n        {\\n            const opts = JSON.parse(value);\\n            this.setState({\\n                legend: opts\\n            });\\n        } catch ( e )\\n        {\\n            alert(e.message);\\n            throw Error(e);\\n        }\\n    }\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Legend Options Example</h2>\\n                <textarea\\n                    cols=\\\"40\\\"\\n                    rows=\\\"15\\\"\\n                    ref={input => {\\n                        this.legendOptsInput = input;\\n                    }}\\n                    defaultValue={JSON.stringify(this.state.legend, null, 2)}\\n                />\\n                <div>\\n                    <button onClick={this.applyLegendSettings}>Apply legend settings</button>\\n                </div>\\n                <Pie data={data} legend={this.state.legend} redraw/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default LegendExample\\n\"","import React, {Component} from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nconst data = {\n    labels  : [\n        'Red',\n        'Green',\n        'Yellow'\n    ],\n    datasets: [\n        {\n            data                : [300, 50, 100],\n            backgroundColor     : [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n            ]\n        }\n    ]\n};\n\nconst legendOpts = {\n    onClick: (e, item) => alert(`Item with text ${item.text} and index ${item.index} clicked`),\n    onHover: (e, item) => alert(`Item with text ${item.text} and index ${item.index} hovered`)\n};\n\nclass LegendExample extends Component {\n    state = {\n        legend: legendOpts\n    };\n\n    applyLegendSettings()\n    {\n        const {value} = this.legendOptsInput;\n\n        try\n        {\n            const opts = JSON.parse(value);\n            this.setState({\n                legend: opts\n            });\n        } catch ( e )\n        {\n            alert(e.message);\n            throw Error(e);\n        }\n    }\n\n    render()\n    {\n        return (\n            <div className=\"flex flex-col items-center w-full max-w-md\">\n                <h2>Legend Handlers Example</h2>\n                <p>Hover over label and click</p>\n                <Pie data={data} legend={this.state.legend}/>\n            </div>\n        );\n    }\n}\n\nexport default LegendExample;\n","module.exports = \"import React, {Component} from 'react';\\nimport {Pie} from 'react-chartjs-2';\\n\\nconst data = {\\n    labels  : [\\n        'Red',\\n        'Green',\\n        'Yellow'\\n    ],\\n    datasets: [\\n        {\\n            data                : [300, 50, 100],\\n            backgroundColor     : [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ],\\n            hoverBackgroundColor: [\\n                '#FF6384',\\n                '#36A2EB',\\n                '#FFCE56'\\n            ]\\n        }\\n    ]\\n};\\n\\nconst legendOpts = {\\n    onClick: (e, item) => alert(`Item with text ${item.text} and index ${item.index} clicked`),\\n    onHover: (e, item) => alert(`Item with text ${item.text} and index ${item.index} hovered`)\\n};\\n\\nclass LegendExample extends Component {\\n    state = {\\n        legend: legendOpts\\n    };\\n\\n    applyLegendSettings()\\n    {\\n        const {value} = this.legendOptsInput;\\n\\n        try\\n        {\\n            const opts = JSON.parse(value);\\n            this.setState({\\n                legend: opts\\n            });\\n        } catch ( e )\\n        {\\n            alert(e.message);\\n            throw Error(e);\\n        }\\n    }\\n\\n    render()\\n    {\\n        return (\\n            <div className=\\\"flex flex-col items-center w-full max-w-md\\\">\\n                <h2>Legend Handlers Example</h2>\\n                <p>Hover over label and click</p>\\n                <Pie data={data} legend={this.state.legend}/>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default LegendExample;\\n\"","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles/index';\nimport {FuseExample, FusePageSimple} from '@fuse';\nimport {Button, Icon, Typography} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\n/* eslint import/no-webpack-loader-syntax: off */\nconst styles = theme => ({\n    layoutRoot: {}\n});\n\nclass ReactChartJs2Doc extends Component {\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <FusePageSimple\n                classes={{\n                    root: classes.layoutRoot\n                }}\n                header={\n                    <div className=\"flex flex-1 items-center justify-between p-24\">\n                        <Typography variant=\"h6\">React ChartJs 2</Typography>\n                        <Button\n                            className=\"normal-case\"\n                            variant=\"contained\"\n                            component=\"a\"\n                            href=\"https://github.com/jerairrest/react-chartjs-2\"\n                            target=\"_blank\"\n                        >\n                            <Icon className=\"mr-4\">link</Icon>\n                            Reference\n                        </Button>\n                    </div>\n                }\n                content={\n                    <div className=\"p-24 max-w-2xl mx-auto\">\n\n                        <Typography className=\"mb-16\" component=\"p\">\n                            <code className=\"language-bash\">react-chartjs-2</code> is a React wrapper for Chart.js 2.\n                        </Typography>\n\n                        <hr/>\n\n                        <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Example Usages</Typography>\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/doughnut.js').default}\n                            raw={require('!raw-loader!./examples/doughnut.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/dynamic-doughnut.js').default}\n                            raw={require('!raw-loader!./examples/dynamic-doughnut.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/pie.js').default}\n                            raw={require('!raw-loader!./examples/pie.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/line.js').default}\n                            raw={require('!raw-loader!./examples/line.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/bar.js').default}\n                            raw={require('!raw-loader!./examples/bar.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/horizontalBar.js').default}\n                            raw={require('!raw-loader!./examples/horizontalBar.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/radar.js').default}\n                            raw={require('!raw-loader!./examples/radar.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/polar.js').default}\n                            raw={require('!raw-loader!./examples/polar.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/bubble.js').default}\n                            raw={require('!raw-loader!./examples/bubble.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/scatter.js').default}\n                            raw={require('!raw-loader!./examples/scatter.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/mix.js').default}\n                            raw={require('!raw-loader!./examples/mix.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/randomizedLine.js').default}\n                            raw={require('!raw-loader!./examples/randomizedLine.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/crazyLine.js').default}\n                            raw={require('!raw-loader!./examples/crazyLine.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/legend-options.js').default}\n                            raw={require('!raw-loader!./examples/legend-options.js')}\n                        />\n\n                        <FuseExample\n                            className=\"mb-64\"\n                            component={require('./examples/legend-handlers.js').default}\n                            raw={require('!raw-loader!./examples/legend-handlers.js')}\n                        />\n\n                        <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Demos</Typography>\n\n                        <ul>\n                            <li className=\"mb-8\">\n                                <Link to=\"/apps/dashboards/analytics\">Analytics Dashboard</Link>\n                            </li>\n                        </ul>\n                    </div>\n                }\n            />\n        );\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(ReactChartJs2Doc);\n"],"sourceRoot":""}