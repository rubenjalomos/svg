{"version":3,"sources":["main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationDownshift.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationDownshift.js?d8af","main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationReactSelect.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationReactSelect.js?1543","main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationAutosuggest.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationAutosuggest.js?923b","main/content/components/material-ui/pages/Autocomplete.js"],"names":["suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","Object","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_13___default","assign","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_6__","inputRef","root","inputRoot","input","inputInput","renderSuggestion","_ref","suggestion","index","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","indexOf","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_16___default","key","selected","component","style","fontWeight","getSuggestions","value","inputValue","deburr","trim","toLowerCase","inputLength","length","count","filter","keep","slice","popperNode","DownshiftMultiple","state","handleKeyDown","event","_this$state","_this","keycode","setState","handleInputChange","target","handleChange","item","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","concat","handleDelete","splice","_this2","this","props","_this$state2","downshift__WEBPACK_IMPORTED_MODULE_11__","id","onChange","_ref2","getInputProps","getItemProps","isOpen","inputValue2","selectedItem2","className","container","fullWidth","startAdornment","map","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_17___default","tabIndex","chip","onDelete","onKeyDown","placeholder","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_15___default","paper","square","React","Component","withStyles","theme","flexGrow","height","position","zIndex","marginTop","spacing","unit","left","right","margin","flexWrap","width","divider","_ref3","getMenuProps","_ref4","node","_material_ui_core_Popper__WEBPACK_IMPORTED_MODULE_14___default","open","anchorEl","suppressRefError","clientWidth","module","exports","inputComponent","components","Control","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_14___default","selectProps","innerRef","children","innerProps","textFieldProps","Menu","MultiValue","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_16___default","classNames","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_5__","chipFocused","isFocused","removeProps","onClick","deleteIcon","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_18___default","NoOptionsMessage","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_12___default","color","noOptionsMessage","Option","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_17___default","buttonRef","Placeholder","SingleValue","singleValue","ValueContainer","valueContainer","IntegrationReactSelect","single","multi","name","_this$props","selectStyles","base","palette","text","primary","& input","font","_material_ui_core_NoSsr__WEBPACK_IMPORTED_MODULE_13___default","react_select__WEBPACK_IMPORTED_MODULE_10__","styles","options","InputLabelProps","shrink","isMulti","display","padding","flex","alignItems","overflow","backgroundColor","emphasize","type","grey","fontSize","withTheme","renderInputComponent","_inputProps$inputRef","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_12___default","query","matches","match","parts","parse","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_14___default","part","highlight","String","getSuggestionValue","IntegrationAutosuggest","popper","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","newValue","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","react_autosuggest__WEBPACK_IMPORTED_MODULE_9___default","suggestionsContainerOpen","suggestionsList","renderSuggestionsContainer","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_13___default","containerProps","_material_ui_core_Popper__WEBPACK_IMPORTED_MODULE_15___default","Boolean","listStyleType","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fuse__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles_index__WEBPACK_IMPORTED_MODULE_3__","layoutRoot","& .description","marginBottom","header","variant","href","content","src","alt","iframe","require","default","raw"],"mappings":"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","file":"static/js/85.46ae94d1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport {withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\nconst suggestions = [\n    {label: 'Afghanistan'},\n    {label: 'Aland Islands'},\n    {label: 'Albania'},\n    {label: 'Algeria'},\n    {label: 'American Samoa'},\n    {label: 'Andorra'},\n    {label: 'Angola'},\n    {label: 'Anguilla'},\n    {label: 'Antarctica'},\n    {label: 'Antigua and Barbuda'},\n    {label: 'Argentina'},\n    {label: 'Armenia'},\n    {label: 'Aruba'},\n    {label: 'Australia'},\n    {label: 'Austria'},\n    {label: 'Azerbaijan'},\n    {label: 'Bahamas'},\n    {label: 'Bahrain'},\n    {label: 'Bangladesh'},\n    {label: 'Barbados'},\n    {label: 'Belarus'},\n    {label: 'Belgium'},\n    {label: 'Belize'},\n    {label: 'Benin'},\n    {label: 'Bermuda'},\n    {label: 'Bhutan'},\n    {label: 'Bolivia, Plurinational State of'},\n    {label: 'Bonaire, Sint Eustatius and Saba'},\n    {label: 'Bosnia and Herzegovina'},\n    {label: 'Botswana'},\n    {label: 'Bouvet Island'},\n    {label: 'Brazil'},\n    {label: 'British Indian Ocean Territory'},\n    {label: 'Brunei Darussalam'}\n];\n\nfunction renderInput(inputProps)\n{\n    const {InputProps, classes, ref, ...other} = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes : {\n                    root : classes.inputRoot,\n                    input: classes.inputInput\n                },\n                ...InputProps\n            }}\n            {...other}\n        />\n    );\n}\n\nfunction renderSuggestion({suggestion, index, itemProps, highlightedIndex, selectedItem})\n{\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.label}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400\n            }}\n        >\n            {suggestion.label}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index           : PropTypes.number,\n    itemProps       : PropTypes.object,\n    selectedItem    : PropTypes.string,\n    suggestion      : PropTypes.shape({label: PropTypes.string}).isRequired\n};\n\nfunction getSuggestions(value)\n{\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n        ? []\n        : suggestions.filter(suggestion => {\n            const keep =\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n            if ( keep )\n            {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\n\nclass DownshiftMultiple extends React.Component {\n    state = {\n        inputValue  : '',\n        selectedItem: []\n    };\n\n    handleKeyDown = event => {\n        const {inputValue, selectedItem} = this.state;\n        if ( selectedItem.length && !inputValue.length && keycode(event) === 'backspace' )\n        {\n            this.setState({\n                selectedItem: selectedItem.slice(0, selectedItem.length - 1)\n            });\n        }\n    };\n\n    handleInputChange = event => {\n        this.setState({inputValue: event.target.value});\n    };\n\n    handleChange = item => {\n        let {selectedItem} = this.state;\n\n        if ( selectedItem.indexOf(item) === -1 )\n        {\n            selectedItem = [...selectedItem, item];\n        }\n\n        this.setState({\n            inputValue: '',\n            selectedItem\n        });\n    };\n\n    handleDelete = item => () => {\n        this.setState(state => {\n            const selectedItem = [...state.selectedItem];\n            selectedItem.splice(selectedItem.indexOf(item), 1);\n            return {selectedItem};\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        const {inputValue, selectedItem} = this.state;\n\n        return (\n            <Downshift\n                id=\"downshift-multiple\"\n                inputValue={inputValue}\n                onChange={this.handleChange}\n                selectedItem={selectedItem}\n            >\n                {({\n                      getInputProps,\n                      getItemProps,\n                      isOpen,\n                      inputValue  : inputValue2,\n                      selectedItem: selectedItem2,\n                      highlightedIndex\n                  }) => (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth : true,\n                            classes,\n                            InputProps: getInputProps({\n                                startAdornment: selectedItem.map(item => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className={classes.chip}\n                                        onDelete={this.handleDelete(item)}\n                                    />\n                                )),\n                                onChange      : this.handleInputChange,\n                                onKeyDown     : this.handleKeyDown,\n                                placeholder   : 'Select multiple countries'\n                            }),\n                            label     : 'Label'\n                        })}\n                        {isOpen ? (\n                            <Paper className={classes.paper} square>\n                                {getSuggestions(inputValue2).map((suggestion, index) =>\n                                    renderSuggestion({\n                                        suggestion,\n                                        index,\n                                        itemProps   : getItemProps({item: suggestion.label}),\n                                        highlightedIndex,\n                                        selectedItem: selectedItem2\n                                    })\n                                )}\n                            </Paper>\n                        ) : null}\n                    </div>\n                )}\n            </Downshift>\n        );\n    }\n}\n\nDownshiftMultiple.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst styles = theme => ({\n    root      : {\n        flexGrow: 1,\n        height  : 250\n    },\n    container : {\n        flexGrow: 1,\n        position: 'relative'\n    },\n    paper     : {\n        position : 'absolute',\n        zIndex   : 1,\n        marginTop: theme.spacing.unit,\n        left     : 0,\n        right    : 0\n    },\n    chip      : {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n    },\n    inputRoot : {\n        flexWrap: 'wrap'\n    },\n    inputInput: {\n        width   : 'auto',\n        flexGrow: 1\n    },\n    divider   : {\n        height: theme.spacing.unit * 2\n    }\n});\n\nlet popperNode;\n\nfunction IntegrationDownshift(props)\n{\n    const {classes} = props;\n\n    return (\n        <div className={classes.root}>\n            <Downshift id=\"downshift-simple\">\n                {({\n                      getInputProps,\n                      getItemProps,\n                      getMenuProps,\n                      highlightedIndex,\n                      inputValue,\n                      isOpen,\n                      selectedItem\n                  }) => (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth : true,\n                            classes,\n                            InputProps: getInputProps({\n                                placeholder: 'Search a country (start with a)'\n                            })\n                        })}\n                        <div {...getMenuProps()}>\n                            {isOpen ? (\n                                <Paper className={classes.paper} square>\n                                    {getSuggestions(inputValue).map((suggestion, index) =>\n                                        renderSuggestion({\n                                            suggestion,\n                                            index,\n                                            itemProps: getItemProps({item: suggestion.label}),\n                                            highlightedIndex,\n                                            selectedItem\n                                        })\n                                    )}\n                                </Paper>\n                            ) : null}\n                        </div>\n                    </div>\n                )}\n            </Downshift>\n            <div className={classes.divider}/>\n            <DownshiftMultiple classes={classes}/>\n            <div className={classes.divider}/>\n            <Downshift id=\"downshift-popper\">\n                {({\n                      getInputProps,\n                      getItemProps,\n                      getMenuProps,\n                      highlightedIndex,\n                      inputValue,\n                      isOpen,\n                      selectedItem\n                  }) => (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth : true,\n                            classes,\n                            InputProps: getInputProps({\n                                placeholder: 'With Popper'\n                            }),\n                            ref       : node => {\n                                popperNode = node;\n                            }\n                        })}\n                        <Popper open={isOpen} anchorEl={popperNode}>\n                            <div {...(isOpen ? getMenuProps({}, {suppressRefError: true}) : {})}>\n                                <Paper\n                                    square\n                                    style={{\n                                        marginTop: 8,\n                                        width    : popperNode ? popperNode.clientWidth : null\n                                    }}\n                                >\n                                    {getSuggestions(inputValue).map((suggestion, index) =>\n                                        renderSuggestion({\n                                            suggestion,\n                                            index,\n                                            itemProps: getItemProps({item: suggestion.label}),\n                                            highlightedIndex,\n                                            selectedItem\n                                        })\n                                    )}\n                                </Paper>\n                            </div>\n                        </Popper>\n                    </div>\n                )}\n            </Downshift>\n        </div>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(IntegrationDownshift);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport deburr from 'lodash/deburr';\\nimport keycode from 'keycode';\\nimport Downshift from 'downshift';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\nimport Popper from '@material-ui/core/Popper';\\nimport Paper from '@material-ui/core/Paper';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Chip from '@material-ui/core/Chip';\\n\\nconst suggestions = [\\n    {label: 'Afghanistan'},\\n    {label: 'Aland Islands'},\\n    {label: 'Albania'},\\n    {label: 'Algeria'},\\n    {label: 'American Samoa'},\\n    {label: 'Andorra'},\\n    {label: 'Angola'},\\n    {label: 'Anguilla'},\\n    {label: 'Antarctica'},\\n    {label: 'Antigua and Barbuda'},\\n    {label: 'Argentina'},\\n    {label: 'Armenia'},\\n    {label: 'Aruba'},\\n    {label: 'Australia'},\\n    {label: 'Austria'},\\n    {label: 'Azerbaijan'},\\n    {label: 'Bahamas'},\\n    {label: 'Bahrain'},\\n    {label: 'Bangladesh'},\\n    {label: 'Barbados'},\\n    {label: 'Belarus'},\\n    {label: 'Belgium'},\\n    {label: 'Belize'},\\n    {label: 'Benin'},\\n    {label: 'Bermuda'},\\n    {label: 'Bhutan'},\\n    {label: 'Bolivia, Plurinational State of'},\\n    {label: 'Bonaire, Sint Eustatius and Saba'},\\n    {label: 'Bosnia and Herzegovina'},\\n    {label: 'Botswana'},\\n    {label: 'Bouvet Island'},\\n    {label: 'Brazil'},\\n    {label: 'British Indian Ocean Territory'},\\n    {label: 'Brunei Darussalam'}\\n];\\n\\nfunction renderInput(inputProps)\\n{\\n    const {InputProps, classes, ref, ...other} = inputProps;\\n\\n    return (\\n        <TextField\\n            InputProps={{\\n                inputRef: ref,\\n                classes : {\\n                    root : classes.inputRoot,\\n                    input: classes.inputInput\\n                },\\n                ...InputProps\\n            }}\\n            {...other}\\n        />\\n    );\\n}\\n\\nfunction renderSuggestion({suggestion, index, itemProps, highlightedIndex, selectedItem})\\n{\\n    const isHighlighted = highlightedIndex === index;\\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\\n\\n    return (\\n        <MenuItem\\n            {...itemProps}\\n            key={suggestion.label}\\n            selected={isHighlighted}\\n            component=\\\"div\\\"\\n            style={{\\n                fontWeight: isSelected ? 500 : 400\\n            }}\\n        >\\n            {suggestion.label}\\n        </MenuItem>\\n    );\\n}\\n\\nrenderSuggestion.propTypes = {\\n    highlightedIndex: PropTypes.number,\\n    index           : PropTypes.number,\\n    itemProps       : PropTypes.object,\\n    selectedItem    : PropTypes.string,\\n    suggestion      : PropTypes.shape({label: PropTypes.string}).isRequired\\n};\\n\\nfunction getSuggestions(value)\\n{\\n    const inputValue = deburr(value.trim()).toLowerCase();\\n    const inputLength = inputValue.length;\\n    let count = 0;\\n\\n    return inputLength === 0\\n        ? []\\n        : suggestions.filter(suggestion => {\\n            const keep =\\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\\n\\n            if ( keep )\\n            {\\n                count += 1;\\n            }\\n\\n            return keep;\\n        });\\n}\\n\\nclass DownshiftMultiple extends React.Component {\\n    state = {\\n        inputValue  : '',\\n        selectedItem: []\\n    };\\n\\n    handleKeyDown = event => {\\n        const {inputValue, selectedItem} = this.state;\\n        if ( selectedItem.length && !inputValue.length && keycode(event) === 'backspace' )\\n        {\\n            this.setState({\\n                selectedItem: selectedItem.slice(0, selectedItem.length - 1)\\n            });\\n        }\\n    };\\n\\n    handleInputChange = event => {\\n        this.setState({inputValue: event.target.value});\\n    };\\n\\n    handleChange = item => {\\n        let {selectedItem} = this.state;\\n\\n        if ( selectedItem.indexOf(item) === -1 )\\n        {\\n            selectedItem = [...selectedItem, item];\\n        }\\n\\n        this.setState({\\n            inputValue: '',\\n            selectedItem\\n        });\\n    };\\n\\n    handleDelete = item => () => {\\n        this.setState(state => {\\n            const selectedItem = [...state.selectedItem];\\n            selectedItem.splice(selectedItem.indexOf(item), 1);\\n            return {selectedItem};\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const {inputValue, selectedItem} = this.state;\\n\\n        return (\\n            <Downshift\\n                id=\\\"downshift-multiple\\\"\\n                inputValue={inputValue}\\n                onChange={this.handleChange}\\n                selectedItem={selectedItem}\\n            >\\n                {({\\n                      getInputProps,\\n                      getItemProps,\\n                      isOpen,\\n                      inputValue  : inputValue2,\\n                      selectedItem: selectedItem2,\\n                      highlightedIndex\\n                  }) => (\\n                    <div className={classes.container}>\\n                        {renderInput({\\n                            fullWidth : true,\\n                            classes,\\n                            InputProps: getInputProps({\\n                                startAdornment: selectedItem.map(item => (\\n                                    <Chip\\n                                        key={item}\\n                                        tabIndex={-1}\\n                                        label={item}\\n                                        className={classes.chip}\\n                                        onDelete={this.handleDelete(item)}\\n                                    />\\n                                )),\\n                                onChange      : this.handleInputChange,\\n                                onKeyDown     : this.handleKeyDown,\\n                                placeholder   : 'Select multiple countries'\\n                            }),\\n                            label     : 'Label'\\n                        })}\\n                        {isOpen ? (\\n                            <Paper className={classes.paper} square>\\n                                {getSuggestions(inputValue2).map((suggestion, index) =>\\n                                    renderSuggestion({\\n                                        suggestion,\\n                                        index,\\n                                        itemProps   : getItemProps({item: suggestion.label}),\\n                                        highlightedIndex,\\n                                        selectedItem: selectedItem2\\n                                    })\\n                                )}\\n                            </Paper>\\n                        ) : null}\\n                    </div>\\n                )}\\n            </Downshift>\\n        );\\n    }\\n}\\n\\nDownshiftMultiple.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nconst styles = theme => ({\\n    root      : {\\n        flexGrow: 1,\\n        height  : 250\\n    },\\n    container : {\\n        flexGrow: 1,\\n        position: 'relative'\\n    },\\n    paper     : {\\n        position : 'absolute',\\n        zIndex   : 1,\\n        marginTop: theme.spacing.unit,\\n        left     : 0,\\n        right    : 0\\n    },\\n    chip      : {\\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\\n    },\\n    inputRoot : {\\n        flexWrap: 'wrap'\\n    },\\n    inputInput: {\\n        width   : 'auto',\\n        flexGrow: 1\\n    },\\n    divider   : {\\n        height: theme.spacing.unit * 2\\n    }\\n});\\n\\nlet popperNode;\\n\\nfunction IntegrationDownshift(props)\\n{\\n    const {classes} = props;\\n\\n    return (\\n        <div className={classes.root}>\\n            <Downshift id=\\\"downshift-simple\\\">\\n                {({\\n                      getInputProps,\\n                      getItemProps,\\n                      getMenuProps,\\n                      highlightedIndex,\\n                      inputValue,\\n                      isOpen,\\n                      selectedItem\\n                  }) => (\\n                    <div className={classes.container}>\\n                        {renderInput({\\n                            fullWidth : true,\\n                            classes,\\n                            InputProps: getInputProps({\\n                                placeholder: 'Search a country (start with a)'\\n                            })\\n                        })}\\n                        <div {...getMenuProps()}>\\n                            {isOpen ? (\\n                                <Paper className={classes.paper} square>\\n                                    {getSuggestions(inputValue).map((suggestion, index) =>\\n                                        renderSuggestion({\\n                                            suggestion,\\n                                            index,\\n                                            itemProps: getItemProps({item: suggestion.label}),\\n                                            highlightedIndex,\\n                                            selectedItem\\n                                        })\\n                                    )}\\n                                </Paper>\\n                            ) : null}\\n                        </div>\\n                    </div>\\n                )}\\n            </Downshift>\\n            <div className={classes.divider}/>\\n            <DownshiftMultiple classes={classes}/>\\n            <div className={classes.divider}/>\\n            <Downshift id=\\\"downshift-popper\\\">\\n                {({\\n                      getInputProps,\\n                      getItemProps,\\n                      getMenuProps,\\n                      highlightedIndex,\\n                      inputValue,\\n                      isOpen,\\n                      selectedItem\\n                  }) => (\\n                    <div className={classes.container}>\\n                        {renderInput({\\n                            fullWidth : true,\\n                            classes,\\n                            InputProps: getInputProps({\\n                                placeholder: 'With Popper'\\n                            }),\\n                            ref       : node => {\\n                                popperNode = node;\\n                            }\\n                        })}\\n                        <Popper open={isOpen} anchorEl={popperNode}>\\n                            <div {...(isOpen ? getMenuProps({}, {suppressRefError: true}) : {})}>\\n                                <Paper\\n                                    square\\n                                    style={{\\n                                        marginTop: 8,\\n                                        width    : popperNode ? popperNode.clientWidth : null\\n                                    }}\\n                                >\\n                                    {getSuggestions(inputValue).map((suggestion, index) =>\\n                                        renderSuggestion({\\n                                            suggestion,\\n                                            index,\\n                                            itemProps: getItemProps({item: suggestion.label}),\\n                                            highlightedIndex,\\n                                            selectedItem\\n                                        })\\n                                    )}\\n                                </Paper>\\n                            </div>\\n                        </Popper>\\n                    </div>\\n                )}\\n            </Downshift>\\n        </div>\\n    );\\n}\\n\\nIntegrationDownshift.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(IntegrationDownshift);\\n\"","/* eslint-disable react/prop-types, react/jsx-handler-names */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {emphasize} from '@material-ui/core/styles/colorManipulator';\n\nconst suggestions = [\n    {label: 'Afghanistan'},\n    {label: 'Aland Islands'},\n    {label: 'Albania'},\n    {label: 'Algeria'},\n    {label: 'American Samoa'},\n    {label: 'Andorra'},\n    {label: 'Angola'},\n    {label: 'Anguilla'},\n    {label: 'Antarctica'},\n    {label: 'Antigua and Barbuda'},\n    {label: 'Argentina'},\n    {label: 'Armenia'},\n    {label: 'Aruba'},\n    {label: 'Australia'},\n    {label: 'Austria'},\n    {label: 'Azerbaijan'},\n    {label: 'Bahamas'},\n    {label: 'Bahrain'},\n    {label: 'Bangladesh'},\n    {label: 'Barbados'},\n    {label: 'Belarus'},\n    {label: 'Belgium'},\n    {label: 'Belize'},\n    {label: 'Benin'},\n    {label: 'Bermuda'},\n    {label: 'Bhutan'},\n    {label: 'Bolivia, Plurinational State of'},\n    {label: 'Bonaire, Sint Eustatius and Saba'},\n    {label: 'Bosnia and Herzegovina'},\n    {label: 'Botswana'},\n    {label: 'Bouvet Island'},\n    {label: 'Brazil'},\n    {label: 'British Indian Ocean Territory'},\n    {label: 'Brunei Darussalam'}\n].map(suggestion => ({\n    value: suggestion.label,\n    label: suggestion.label\n}));\n\nconst styles = theme => ({\n    root            : {\n        flexGrow: 1,\n        height  : 250\n    },\n    input           : {\n        display: 'flex',\n        padding: 0\n    },\n    valueContainer  : {\n        display   : 'flex',\n        flexWrap  : 'wrap',\n        flex      : 1,\n        alignItems: 'center',\n        overflow  : 'hidden'\n    },\n    chip            : {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n    },\n    chipFocused     : {\n        backgroundColor: emphasize(\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n            0.08\n        )\n    },\n    noOptionsMessage: {\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n    },\n    singleValue     : {\n        fontSize: 16\n    },\n    placeholder     : {\n        position: 'absolute',\n        left    : 2,\n        fontSize: 16\n    },\n    paper           : {\n        position : 'absolute',\n        zIndex   : 1,\n        marginTop: theme.spacing.unit,\n        left     : 0,\n        right    : 0\n    },\n    divider         : {\n        height: theme.spacing.unit * 2\n    }\n});\n\nfunction NoOptionsMessage(props)\n{\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.noOptionsMessage}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction inputComponent({inputRef, ...props})\n{\n    return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props)\n{\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputComponent,\n                inputProps: {\n                    className: props.selectProps.classes.input,\n                    inputRef : props.innerRef,\n                    children : props.children,\n                    ...props.innerProps\n                }\n            }}\n            {...props.selectProps.textFieldProps}\n        />\n    );\n}\n\nfunction Option(props)\n{\n    return (\n        <MenuItem\n            buttonRef={props.innerRef}\n            selected={props.isFocused}\n            component=\"div\"\n            style={{\n                fontWeight: props.isSelected ? 500 : 400\n            }}\n            {...props.innerProps}\n        >\n            {props.children}\n        </MenuItem>\n    );\n}\n\nfunction Placeholder(props)\n{\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.placeholder}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction SingleValue(props)\n{\n    return (\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction ValueContainer(props)\n{\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props)\n{\n    return (\n        <Chip\n            tabIndex={-1}\n            label={props.children}\n            className={classNames(props.selectProps.classes.chip, {\n                [props.selectProps.classes.chipFocused]: props.isFocused\n            })}\n            onDelete={props.removeProps.onClick}\n            deleteIcon={<CancelIcon {...props.removeProps} />}\n        />\n    );\n}\n\nfunction Menu(props)\n{\n    return (\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n            {props.children}\n        </Paper>\n    );\n}\n\nconst components = {\n    Control,\n    Menu,\n    MultiValue,\n    NoOptionsMessage,\n    Option,\n    Placeholder,\n    SingleValue,\n    ValueContainer\n};\n\nclass IntegrationReactSelect extends React.Component {\n    state = {\n        single: null,\n        multi : null\n    };\n\n    handleChange = name => value => {\n        this.setState({\n            [name]: value\n        });\n    };\n\n    render()\n    {\n        const {classes, theme} = this.props;\n\n        const selectStyles = {\n            input: base => ({\n                ...base,\n                color    : theme.palette.text.primary,\n                '& input': {\n                    font: 'inherit'\n                }\n            })\n        };\n\n        return (\n            <div className={classes.root}>\n                <NoSsr>\n                    <Select\n                        classes={classes}\n                        styles={selectStyles}\n                        options={suggestions}\n                        components={components}\n                        value={this.state.single}\n                        onChange={this.handleChange('single')}\n                        placeholder=\"Search a country (start with a)\"\n                    />\n                    <div className={classes.divider}/>\n                    <Select\n                        classes={classes}\n                        styles={selectStyles}\n                        textFieldProps={{\n                            label          : 'Label',\n                            InputLabelProps: {\n                                shrink: true\n                            }\n                        }}\n                        options={suggestions}\n                        components={components}\n                        value={this.state.multi}\n                        onChange={this.handleChange('multi')}\n                        placeholder=\"Select multiple countries\"\n                        isMulti\n                    />\n                </NoSsr>\n            </div>\n        );\n    }\n}\n\nIntegrationReactSelect.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme  : PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, {withTheme: true})(IntegrationReactSelect);\n","module.exports = \"/* eslint-disable react/prop-types, react/jsx-handler-names */\\n\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames';\\nimport Select from 'react-select';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\nimport NoSsr from '@material-ui/core/NoSsr';\\nimport TextField from '@material-ui/core/TextField';\\nimport Paper from '@material-ui/core/Paper';\\nimport Chip from '@material-ui/core/Chip';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport CancelIcon from '@material-ui/icons/Cancel';\\nimport {emphasize} from '@material-ui/core/styles/colorManipulator';\\n\\nconst suggestions = [\\n    {label: 'Afghanistan'},\\n    {label: 'Aland Islands'},\\n    {label: 'Albania'},\\n    {label: 'Algeria'},\\n    {label: 'American Samoa'},\\n    {label: 'Andorra'},\\n    {label: 'Angola'},\\n    {label: 'Anguilla'},\\n    {label: 'Antarctica'},\\n    {label: 'Antigua and Barbuda'},\\n    {label: 'Argentina'},\\n    {label: 'Armenia'},\\n    {label: 'Aruba'},\\n    {label: 'Australia'},\\n    {label: 'Austria'},\\n    {label: 'Azerbaijan'},\\n    {label: 'Bahamas'},\\n    {label: 'Bahrain'},\\n    {label: 'Bangladesh'},\\n    {label: 'Barbados'},\\n    {label: 'Belarus'},\\n    {label: 'Belgium'},\\n    {label: 'Belize'},\\n    {label: 'Benin'},\\n    {label: 'Bermuda'},\\n    {label: 'Bhutan'},\\n    {label: 'Bolivia, Plurinational State of'},\\n    {label: 'Bonaire, Sint Eustatius and Saba'},\\n    {label: 'Bosnia and Herzegovina'},\\n    {label: 'Botswana'},\\n    {label: 'Bouvet Island'},\\n    {label: 'Brazil'},\\n    {label: 'British Indian Ocean Territory'},\\n    {label: 'Brunei Darussalam'}\\n].map(suggestion => ({\\n    value: suggestion.label,\\n    label: suggestion.label\\n}));\\n\\nconst styles = theme => ({\\n    root            : {\\n        flexGrow: 1,\\n        height  : 250\\n    },\\n    input           : {\\n        display: 'flex',\\n        padding: 0\\n    },\\n    valueContainer  : {\\n        display   : 'flex',\\n        flexWrap  : 'wrap',\\n        flex      : 1,\\n        alignItems: 'center',\\n        overflow  : 'hidden'\\n    },\\n    chip            : {\\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\\n    },\\n    chipFocused     : {\\n        backgroundColor: emphasize(\\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\\n            0.08\\n        )\\n    },\\n    noOptionsMessage: {\\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\\n    },\\n    singleValue     : {\\n        fontSize: 16\\n    },\\n    placeholder     : {\\n        position: 'absolute',\\n        left    : 2,\\n        fontSize: 16\\n    },\\n    paper           : {\\n        position : 'absolute',\\n        zIndex   : 1,\\n        marginTop: theme.spacing.unit,\\n        left     : 0,\\n        right    : 0\\n    },\\n    divider         : {\\n        height: theme.spacing.unit * 2\\n    }\\n});\\n\\nfunction NoOptionsMessage(props)\\n{\\n    return (\\n        <Typography\\n            color=\\\"textSecondary\\\"\\n            className={props.selectProps.classes.noOptionsMessage}\\n            {...props.innerProps}\\n        >\\n            {props.children}\\n        </Typography>\\n    );\\n}\\n\\nfunction inputComponent({inputRef, ...props})\\n{\\n    return <div ref={inputRef} {...props} />;\\n}\\n\\nfunction Control(props)\\n{\\n    return (\\n        <TextField\\n            fullWidth\\n            InputProps={{\\n                inputComponent,\\n                inputProps: {\\n                    className: props.selectProps.classes.input,\\n                    inputRef : props.innerRef,\\n                    children : props.children,\\n                    ...props.innerProps\\n                }\\n            }}\\n            {...props.selectProps.textFieldProps}\\n        />\\n    );\\n}\\n\\nfunction Option(props)\\n{\\n    return (\\n        <MenuItem\\n            buttonRef={props.innerRef}\\n            selected={props.isFocused}\\n            component=\\\"div\\\"\\n            style={{\\n                fontWeight: props.isSelected ? 500 : 400\\n            }}\\n            {...props.innerProps}\\n        >\\n            {props.children}\\n        </MenuItem>\\n    );\\n}\\n\\nfunction Placeholder(props)\\n{\\n    return (\\n        <Typography\\n            color=\\\"textSecondary\\\"\\n            className={props.selectProps.classes.placeholder}\\n            {...props.innerProps}\\n        >\\n            {props.children}\\n        </Typography>\\n    );\\n}\\n\\nfunction SingleValue(props)\\n{\\n    return (\\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\\n            {props.children}\\n        </Typography>\\n    );\\n}\\n\\nfunction ValueContainer(props)\\n{\\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\\n}\\n\\nfunction MultiValue(props)\\n{\\n    return (\\n        <Chip\\n            tabIndex={-1}\\n            label={props.children}\\n            className={classNames(props.selectProps.classes.chip, {\\n                [props.selectProps.classes.chipFocused]: props.isFocused\\n            })}\\n            onDelete={props.removeProps.onClick}\\n            deleteIcon={<CancelIcon {...props.removeProps} />}\\n        />\\n    );\\n}\\n\\nfunction Menu(props)\\n{\\n    return (\\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\\n            {props.children}\\n        </Paper>\\n    );\\n}\\n\\nconst components = {\\n    Control,\\n    Menu,\\n    MultiValue,\\n    NoOptionsMessage,\\n    Option,\\n    Placeholder,\\n    SingleValue,\\n    ValueContainer\\n};\\n\\nclass IntegrationReactSelect extends React.Component {\\n    state = {\\n        single: null,\\n        multi : null\\n    };\\n\\n    handleChange = name => value => {\\n        this.setState({\\n            [name]: value\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes, theme} = this.props;\\n\\n        const selectStyles = {\\n            input: base => ({\\n                ...base,\\n                color    : theme.palette.text.primary,\\n                '& input': {\\n                    font: 'inherit'\\n                }\\n            })\\n        };\\n\\n        return (\\n            <div className={classes.root}>\\n                <NoSsr>\\n                    <Select\\n                        classes={classes}\\n                        styles={selectStyles}\\n                        options={suggestions}\\n                        components={components}\\n                        value={this.state.single}\\n                        onChange={this.handleChange('single')}\\n                        placeholder=\\\"Search a country (start with a)\\\"\\n                    />\\n                    <div className={classes.divider}/>\\n                    <Select\\n                        classes={classes}\\n                        styles={selectStyles}\\n                        textFieldProps={{\\n                            label          : 'Label',\\n                            InputLabelProps: {\\n                                shrink: true\\n                            }\\n                        }}\\n                        options={suggestions}\\n                        components={components}\\n                        value={this.state.multi}\\n                        onChange={this.handleChange('multi')}\\n                        placeholder=\\\"Select multiple countries\\\"\\n                        isMulti\\n                    />\\n                </NoSsr>\\n            </div>\\n        );\\n    }\\n}\\n\\nIntegrationReactSelect.propTypes = {\\n    classes: PropTypes.object.isRequired,\\n    theme  : PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles, {withTheme: true})(IntegrationReactSelect);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst suggestions = [\n    {label: 'Afghanistan'},\n    {label: 'Aland Islands'},\n    {label: 'Albania'},\n    {label: 'Algeria'},\n    {label: 'American Samoa'},\n    {label: 'Andorra'},\n    {label: 'Angola'},\n    {label: 'Anguilla'},\n    {label: 'Antarctica'},\n    {label: 'Antigua and Barbuda'},\n    {label: 'Argentina'},\n    {label: 'Armenia'},\n    {label: 'Aruba'},\n    {label: 'Australia'},\n    {label: 'Austria'},\n    {label: 'Azerbaijan'},\n    {label: 'Bahamas'},\n    {label: 'Bahrain'},\n    {label: 'Bangladesh'},\n    {label: 'Barbados'},\n    {label: 'Belarus'},\n    {label: 'Belgium'},\n    {label: 'Belize'},\n    {label: 'Benin'},\n    {label: 'Bermuda'},\n    {label: 'Bhutan'},\n    {label: 'Bolivia, Plurinational State of'},\n    {label: 'Bonaire, Sint Eustatius and Saba'},\n    {label: 'Bosnia and Herzegovina'},\n    {label: 'Botswana'},\n    {label: 'Bouvet Island'},\n    {label: 'Brazil'},\n    {label: 'British Indian Ocean Territory'},\n    {label: 'Brunei Darussalam'}\n];\n\nfunction renderInputComponent(inputProps)\n{\n    const {\n        classes, inputRef = () => {\n        }, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputRef: node => {\n                    ref(node);\n                    inputRef(node);\n                },\n                classes : {\n                    input: classes.input\n                }\n            }}\n            {...other}\n        />\n    );\n}\n\nfunction renderSuggestion(suggestion, {query, isHighlighted})\n{\n    const matches = match(suggestion.label, query);\n    const parts = parse(suggestion.label, matches);\n\n    return (\n        <MenuItem selected={isHighlighted} component=\"div\">\n            <div>\n                {parts.map((part, index) => {\n                    return part.highlight ? (\n                        <span key={String(index)} style={{fontWeight: 500}}>\n                            {part.text}\n                        </span>\n                    ) : (\n                        <strong key={String(index)} style={{fontWeight: 300}}>\n                            {part.text}\n                        </strong>\n                    );\n                })}\n            </div>\n        </MenuItem>\n    );\n}\n\nfunction getSuggestions(value)\n{\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n        ? []\n        : suggestions.filter(suggestion => {\n            const keep =\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n            if ( keep )\n            {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\n\nfunction getSuggestionValue(suggestion)\n{\n    return suggestion.label;\n}\n\nconst styles = theme => ({\n    root                    : {\n        height  : 250,\n        flexGrow: 1\n    },\n    container               : {\n        position: 'relative'\n    },\n    suggestionsContainerOpen: {\n        position : 'absolute',\n        zIndex   : 1,\n        marginTop: theme.spacing.unit,\n        left     : 0,\n        right    : 0\n    },\n    suggestion              : {\n        display: 'block'\n    },\n    suggestionsList         : {\n        margin       : 0,\n        padding      : 0,\n        listStyleType: 'none'\n    },\n    divider                 : {\n        height: theme.spacing.unit * 2\n    }\n});\n\nclass IntegrationAutosuggest extends React.Component {\n    state = {\n        single     : '',\n        popper     : '',\n        suggestions: []\n    };\n\n    handleSuggestionsFetchRequested = ({value}) => {\n        this.setState({\n            suggestions: getSuggestions(value)\n        });\n    };\n\n    handleSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    handleChange = name => (event, {newValue}) => {\n        this.setState({\n            [name]: newValue\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        const autosuggestProps = {\n            renderInputComponent,\n            suggestions                : this.state.suggestions,\n            onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n            onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n            getSuggestionValue,\n            renderSuggestion\n        };\n\n        return (\n            <div className={classes.root}>\n                <Autosuggest\n                    {...autosuggestProps}\n                    inputProps={{\n                        classes,\n                        placeholder: 'Search a country (start with a)',\n                        value      : this.state.single,\n                        onChange   : this.handleChange('single')\n                    }}\n                    theme={{\n                        container               : classes.container,\n                        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n                        suggestionsList         : classes.suggestionsList,\n                        suggestion              : classes.suggestion\n                    }}\n                    renderSuggestionsContainer={options => (\n                        <Paper {...options.containerProps} square>\n                            {options.children}\n                        </Paper>\n                    )}\n                />\n                <div className={classes.divider}/>\n                <Autosuggest\n                    {...autosuggestProps}\n                    inputProps={{\n                        classes,\n                        label          : 'Label',\n                        placeholder    : 'With Popper',\n                        value          : this.state.popper,\n                        onChange       : this.handleChange('popper'),\n                        inputRef       : node => {\n                            this.popperNode = node;\n                        },\n                        InputLabelProps: {\n                            shrink: true\n                        }\n                    }}\n                    theme={{\n                        suggestionsList: classes.suggestionsList,\n                        suggestion     : classes.suggestion\n                    }}\n                    renderSuggestionsContainer={options => (\n                        <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n                            <Paper\n                                square\n                                {...options.containerProps}\n                                style={{width: this.popperNode ? this.popperNode.clientWidth : null}}\n                            >\n                                {options.children}\n                            </Paper>\n                        </Popper>\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nIntegrationAutosuggest.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport deburr from 'lodash/deburr';\\nimport Autosuggest from 'react-autosuggest';\\nimport match from 'autosuggest-highlight/match';\\nimport parse from 'autosuggest-highlight/parse';\\nimport TextField from '@material-ui/core/TextField';\\nimport Paper from '@material-ui/core/Paper';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Popper from '@material-ui/core/Popper';\\nimport {withStyles} from '@material-ui/core/styles';\\n\\nconst suggestions = [\\n    {label: 'Afghanistan'},\\n    {label: 'Aland Islands'},\\n    {label: 'Albania'},\\n    {label: 'Algeria'},\\n    {label: 'American Samoa'},\\n    {label: 'Andorra'},\\n    {label: 'Angola'},\\n    {label: 'Anguilla'},\\n    {label: 'Antarctica'},\\n    {label: 'Antigua and Barbuda'},\\n    {label: 'Argentina'},\\n    {label: 'Armenia'},\\n    {label: 'Aruba'},\\n    {label: 'Australia'},\\n    {label: 'Austria'},\\n    {label: 'Azerbaijan'},\\n    {label: 'Bahamas'},\\n    {label: 'Bahrain'},\\n    {label: 'Bangladesh'},\\n    {label: 'Barbados'},\\n    {label: 'Belarus'},\\n    {label: 'Belgium'},\\n    {label: 'Belize'},\\n    {label: 'Benin'},\\n    {label: 'Bermuda'},\\n    {label: 'Bhutan'},\\n    {label: 'Bolivia, Plurinational State of'},\\n    {label: 'Bonaire, Sint Eustatius and Saba'},\\n    {label: 'Bosnia and Herzegovina'},\\n    {label: 'Botswana'},\\n    {label: 'Bouvet Island'},\\n    {label: 'Brazil'},\\n    {label: 'British Indian Ocean Territory'},\\n    {label: 'Brunei Darussalam'}\\n];\\n\\nfunction renderInputComponent(inputProps)\\n{\\n    const {\\n        classes, inputRef = () => {\\n        }, ref, ...other\\n    } = inputProps;\\n\\n    return (\\n        <TextField\\n            fullWidth\\n            InputProps={{\\n                inputRef: node => {\\n                    ref(node);\\n                    inputRef(node);\\n                },\\n                classes : {\\n                    input: classes.input\\n                }\\n            }}\\n            {...other}\\n        />\\n    );\\n}\\n\\nfunction renderSuggestion(suggestion, {query, isHighlighted})\\n{\\n    const matches = match(suggestion.label, query);\\n    const parts = parse(suggestion.label, matches);\\n\\n    return (\\n        <MenuItem selected={isHighlighted} component=\\\"div\\\">\\n            <div>\\n                {parts.map((part, index) => {\\n                    return part.highlight ? (\\n                        <span key={String(index)} style={{fontWeight: 500}}>\\n                            {part.text}\\n                        </span>\\n                    ) : (\\n                        <strong key={String(index)} style={{fontWeight: 300}}>\\n                            {part.text}\\n                        </strong>\\n                    );\\n                })}\\n            </div>\\n        </MenuItem>\\n    );\\n}\\n\\nfunction getSuggestions(value)\\n{\\n    const inputValue = deburr(value.trim()).toLowerCase();\\n    const inputLength = inputValue.length;\\n    let count = 0;\\n\\n    return inputLength === 0\\n        ? []\\n        : suggestions.filter(suggestion => {\\n            const keep =\\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\\n\\n            if ( keep )\\n            {\\n                count += 1;\\n            }\\n\\n            return keep;\\n        });\\n}\\n\\nfunction getSuggestionValue(suggestion)\\n{\\n    return suggestion.label;\\n}\\n\\nconst styles = theme => ({\\n    root                    : {\\n        height  : 250,\\n        flexGrow: 1\\n    },\\n    container               : {\\n        position: 'relative'\\n    },\\n    suggestionsContainerOpen: {\\n        position : 'absolute',\\n        zIndex   : 1,\\n        marginTop: theme.spacing.unit,\\n        left     : 0,\\n        right    : 0\\n    },\\n    suggestion              : {\\n        display: 'block'\\n    },\\n    suggestionsList         : {\\n        margin       : 0,\\n        padding      : 0,\\n        listStyleType: 'none'\\n    },\\n    divider                 : {\\n        height: theme.spacing.unit * 2\\n    }\\n});\\n\\nclass IntegrationAutosuggest extends React.Component {\\n    state = {\\n        single     : '',\\n        popper     : '',\\n        suggestions: []\\n    };\\n\\n    handleSuggestionsFetchRequested = ({value}) => {\\n        this.setState({\\n            suggestions: getSuggestions(value)\\n        });\\n    };\\n\\n    handleSuggestionsClearRequested = () => {\\n        this.setState({\\n            suggestions: []\\n        });\\n    };\\n\\n    handleChange = name => (event, {newValue}) => {\\n        this.setState({\\n            [name]: newValue\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        const autosuggestProps = {\\n            renderInputComponent,\\n            suggestions                : this.state.suggestions,\\n            onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\\n            onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\\n            getSuggestionValue,\\n            renderSuggestion\\n        };\\n\\n        return (\\n            <div className={classes.root}>\\n                <Autosuggest\\n                    {...autosuggestProps}\\n                    inputProps={{\\n                        classes,\\n                        placeholder: 'Search a country (start with a)',\\n                        value      : this.state.single,\\n                        onChange   : this.handleChange('single')\\n                    }}\\n                    theme={{\\n                        container               : classes.container,\\n                        suggestionsContainerOpen: classes.suggestionsContainerOpen,\\n                        suggestionsList         : classes.suggestionsList,\\n                        suggestion              : classes.suggestion\\n                    }}\\n                    renderSuggestionsContainer={options => (\\n                        <Paper {...options.containerProps} square>\\n                            {options.children}\\n                        </Paper>\\n                    )}\\n                />\\n                <div className={classes.divider}/>\\n                <Autosuggest\\n                    {...autosuggestProps}\\n                    inputProps={{\\n                        classes,\\n                        label          : 'Label',\\n                        placeholder    : 'With Popper',\\n                        value          : this.state.popper,\\n                        onChange       : this.handleChange('popper'),\\n                        inputRef       : node => {\\n                            this.popperNode = node;\\n                        },\\n                        InputLabelProps: {\\n                            shrink: true\\n                        }\\n                    }}\\n                    theme={{\\n                        suggestionsList: classes.suggestionsList,\\n                        suggestion     : classes.suggestion\\n                    }}\\n                    renderSuggestionsContainer={options => (\\n                        <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\\n                            <Paper\\n                                square\\n                                {...options.containerProps}\\n                                style={{width: this.popperNode ? this.popperNode.clientWidth : null}}\\n                            >\\n                                {options.children}\\n                            </Paper>\\n                        </Popper>\\n                    )}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nIntegrationAutosuggest.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(IntegrationAutosuggest);\\n\"","import React from 'react';\nimport {FuseExample, FuseHighlight, FusePageSimple} from '@fuse';\nimport {Button, Icon, Typography} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles/index';\n/* eslint import/no-webpack-loader-syntax: off */\n/* eslint no-unused-vars: off */\nconst styles = theme => ({\n    layoutRoot: {\n        '& .description': {\n            marginBottom: 16\n        }\n    }\n});\n\nfunction Autocomplete({classes})\n{\n    return (\n\n        <FusePageSimple\n            classes={{\n                root: classes.layoutRoot\n            }}\n            header={\n                <div className=\"flex flex-1 items-center justify-between p-24\">\n                    <Typography variant=\"h6\">Autocomplete</Typography>\n                    <Button\n                        className=\"normal-case\"\n                        variant=\"contained\"\n                        component=\"a\"\n                        href=\"https://material-ui-next.com/demos/autocomplete\"\n                        target=\"_blank\"\n                    >\n                        <Icon className=\"mr-4\">link</Icon>\n                        Reference\n                    </Button>\n                </div>\n            }\n            content={\n                <div className=\"p-24 max-w-2xl mx-auto\">\n                    <Typography className=\"text-44 mt-32 mb-8\" component=\"h1\">Autocomplete</Typography>\n                    <Typography className=\"description\">The autocomplete is a normal text input enhanced by a panel of suggested options.</Typography>\n\n                    <Typography className=\"mb-16\" component=\"div\">Material-UI doesn&#39;t provide any high-level API for solving this problem.\n                        We encourage people relying on the solutions the React community has built.</Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">downshift</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><img src=\"https://img.shields.io/github/stars/paypal/downshift.svg?style=social&label=Stars\" alt=\"stars\"/>\n                        <img src=\"https://img.shields.io/npm/dm/downshift.svg\" alt=\"npm downloads\"/></Typography>\n                    <Typography className=\"mb-16\" component=\"div\">In the following example, we demonstrate how to use <a\n                        href=\"https://github.com/paypal/downshift\">downshift</a>.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationDownshift.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationDownshift.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">react-select</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><img src=\"https://img.shields.io/github/stars/JedWatson/react-select.svg?style=social&label=Stars\" alt=\"stars\"/>\n                        <img src=\"https://img.shields.io/npm/dm/react-select.svg\" alt=\"npm downloads\"/></Typography>\n                    <Typography className=\"mb-16\" component=\"div\">In the following example, we demonstrate how to use <a\n                        href=\"https://github.com/JedWatson/react-select\">react-select</a>.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationReactSelect.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationReactSelect.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">react-autosuggest</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><img src=\"https://img.shields.io/github/stars/moroshko/react-autosuggest.svg?style=social&label=Stars\"\n                                                                       alt=\"stars\"/>\n                        <img src=\"https://img.shields.io/npm/dm/react-autosuggest.svg\" alt=\"npm downloads\"/></Typography>\n                    <Typography className=\"mb-16\" component=\"div\">In the following example, we demonstrate how to use <a\n                        href=\"https://github.com/moroshko/react-autosuggest\">react-autosuggest</a>.\n                        It&#39;s also using <a href=\"https://www.npmjs.com/package/autosuggest-highlight\">autosuggest-highlight</a> for the highlighting logic.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationAutosuggest.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/autocomplete/IntegrationAutosuggest.js')}\n                    /></Typography>\n\n                </div>\n            }\n        />\n\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(Autocomplete);\n"],"sourceRoot":""}