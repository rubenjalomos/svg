(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{2599:function(n,e,t){"use strict";t.r(e);var o=t(10),a=t(11),i=t(13),r=t(12),s=t(14),m=t(0),c=t.n(m),l=t(15),u=t(3),p=t(1),f=function(n){function e(){return Object(o.a)(this,e),Object(i.a)(this,Object(r.a)(e).apply(this,arguments))}return Object(s.a)(e,n),Object(a.a)(e,[{key:"render",value:function(){var n=this.props.classes;return c.a.createElement(u.s,{classes:{root:n.layoutRoot},header:c.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},c.a.createElement(p.vb,{variant:"h6"},"FuseAuthorization")),content:c.a.createElement("div",{className:"p-24 max-w-2xl mx-auto"},c.a.createElement(p.vb,{className:"mb-16",component:"p"},c.a.createElement("code",{className:"language-bash"},"FuseAuthorization")," is authorization component of the Fuse React. It allows to block routes based on user roles. It should wraps the FuseTheme component."),c.a.createElement(u.l,{component:"pre",className:"language-jsx"},"\n                               <FuseAuthorization routes={routes}>\n                                    <FuseTheme>\n                                        <FuseLayout\n                                            routes={routes}\n                                            toolbar={\n                                                <MainToolbar/>\n                                            }\n                                            navbarHeader={\n                                                <MainNavbarHeader/>\n                                            }\n                                            navbarContent={\n                                                <MainNavbarContent/>\n                                            }\n                                            footer={\n                                                <MainFooter/>\n                                            }\n                                            rightSidePanel={\n                                                <React.Fragment>\n                                                    <ChatPanel/>\n                                                    <QuickPanel/>\n                                                </React.Fragment>\n                                            }\n                                            contentWrapper={\n                                                <SettingsPanel/>\n                                            }\n                                        />\n                                    </FuseTheme>\n                                </FuseAuthorization>\n                                "),c.a.createElement(p.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Configuration"),c.a.createElement(p.vb,{className:"mb-16",component:"p"},"You can define authorization roles in route config files."),c.a.createElement(u.l,{component:"pre",className:"language-js"},"\n                                export const AdminRoleExampleConfig = {\n                                    settings: {\n                                        layout: {\n                                            config: {}\n                                        }\n                                    },\n                                    auth    : authRoles.admin,//['admin']\n                                    routes  : [\n                                        {\n                                            path     : '/auth/admin-role-example',\n                                            component: AdminRoleExample\n                                        }\n                                    ]\n                                };\n                            "),c.a.createElement(p.vb,{className:"mb-16 mt-32",component:"p"},"You can also hide navigation item/group/collapse by adding auth property in ",c.a.createElement("code",{className:"language-bash"},"fuse-configs/fuseNavigationConfig.js"),"."),c.a.createElement(u.l,{component:"pre",className:"language-js"},"\n                                  {\n                                    'id'   : 'only-admin-navigation-item',\n                                    'title': 'Nav item only for Admin',\n                                    'type' : 'item',\n                                    'auth' : authRoles.admin,\n                                    'url'  : '/auth/admin-role-example',\n                                    'icon' : 'verified_user'\n                                  },\n                            "),c.a.createElement(p.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"On fuseRoutesConfig.js file"),c.a.createElement(p.vb,{className:"mb-16 mt-32",component:"p"},"If you don't want to set auth on every page config;",c.a.createElement("br",null),"You can group the configs and define authorization the fuseRoutesConfig.js file,",c.a.createElement("br",null),"With this configuration below makes ",c.a.createElement("b",null,"whole app")," auth protected:"),c.a.createElement(u.l,{component:"pre",className:"language-js"},"\n                                    import React from 'react';\n                                    import {Redirect} from 'react-router-dom';\n                                    import {FuseUtils} from '@fuse/index';\n                                    import {appsConfigs} from 'main/content/apps/appsConfigs';\n                                    import {pagesConfigs} from 'main/content/pages/pagesConfigs';\n                                    import {authRoleExamplesConfigs} from 'main/content/auth/authRoleExamplesConfigs';\n                                    import {UserInterfaceConfig} from 'main/content/user-interface/UserInterfaceConfig';\n                                    import {ComponentsConfig} from 'main/content/components/ComponentsConfig';\n                                    import {ComponentsThirdPartyConfig} from 'main/content/components-third-party/ComponentsThirdPartyConfig';\n                                    import {GettingStartedConfig} from 'main/content/getting-started/GettingStartedConfig';\n                                    import {LoginConfig} from 'main/content/login/LoginConfig';\n                                    import {RegisterConfig} from 'main/content/register/RegisterConfig';\n                                    import {CallbackConfig} from 'main/content/callback/CallbackConfig';\n                                    import _ from '@lodash';\n                                    import {authRoles} from 'auth';\n\n                                    function setAdminAuth(configs)\n                                    {\n                                        return configs.map(config => _.merge({}, config, {auth: authRoles.admin}))\n                                    }\n\n                                    const routeConfigs = [\n                                        ...setAdminAuth([\n                                            ...appsConfigs,\n                                            ...pagesConfigs,\n                                            ...authRoleExamplesConfigs,\n                                            ComponentsConfig,\n                                            ComponentsThirdPartyConfig,\n                                            UserInterfaceConfig,\n                                            GettingStartedConfig\n                                        ]),\n                                        LoginConfig,\n                                        RegisterConfig,\n                                        CallbackConfig\n                                    ];\n\n                                    export const routes = [\n                                        ...FuseUtils.generateRoutesFromConfigs(routeConfigs),\n                                        {\n                                            path     : '/',\n                                            component: () => <Redirect to=\"/apps/dashboards/analytics\"/>\n                                        },\n                                        {\n                                            exact    : true,\n                                            component: () => <Redirect to=\"/pages/errors/error-404\"/>\n                                        }\n                                    ];\n                            "))})}}]),e}(m.Component);e.default=Object(l.withStyles)(function(n){return{layoutRoot:{}}},{withTheme:!0})(f)}}]);
//# sourceMappingURL=71.03be6031.chunk.js.map