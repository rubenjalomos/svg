{"version":3,"sources":["main/content/apps/chat/store/actions/contacts.actions.js","main/content/apps/chat/store/actions/user.actions.js","main/content/apps/chat/store/actions/chat.actions.js","main/content/apps/chat/Chat.js","main/content/apps/chat/StatusIcon.js","main/content/apps/chat/ChatsSidebar.js","main/content/apps/chat/ContactSidebar.js","main/content/apps/chat/UserSidebar.js","main/content/apps/chat/store/reducers/sidebars.reducer.js","main/content/apps/chat/store/reducers/user.reducer.js","main/content/apps/chat/store/reducers/contacts.reducer.js","main/content/apps/chat/store/reducers/chat.reducer.js","main/content/apps/chat/store/reducers/index.js","main/content/apps/chat/ChatApp.js"],"names":["GET_CONTACTS","SET_SELECTED_CONTACT_ID","REMOVE_SELECTED_CONTACT_ID","getContacts","request","axios","get","dispatch","then","response","type","payload","data","GET_USER_DATA","UPDATE_USER_DATA","getUserData","updateUserData","newData","post","GET_CHAT","REMOVE_CHAT","SEND_MESSAGE","getChat","contactId","getState","userId","chatPanel","user","id","setselectedContactId","closeMobileChatsSidebar","chat","userChatData","sendMessage","messageText","chatId","message","who","time","Date","Chat","state","shouldShowContactAvatar","item","i","_this","props","selectedContactId","dialog","isFirstMessageOfGroup","isLastMessageOfGroup","length","onInputChange","ev","setState","target","value","onMessageSubmit","preventDefault","scrollToBottom","chatScroll","scrollTop","scrollHeight","prevProps","this","_","isEqual","_this2","_this$props","classes","contacts","className","react_default","a","createElement","classNames","_fuse","containerRef","ref","map","contact","find","_contact","key","messageRow","me","first-of-group","last-of-group","index_es","avatar","src","bubble","color","moment","format","onSubmit","bottom","inputWrapper","elevation","autoFocus","InputProps","disableUnderline","root","input","placeholder","InputLabelProps","shrink","bootstrapFormLabel","onChange","Component","withStyles","theme","position","display","flexDirection","alignItems","justifyContent","padding","flex","&.contact","& $bubble","backgroundColor","palette","primary","main","contrastText","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","& $time","marginLeft","&.first-of-group","&.last-of-group","&.me","paddingLeft","& $avatar","order","margin","grey","getContrastText","right","marginRight","&.contact + .me, &.me + .contact","paddingTop","marginTop","paddingBottom","left","maxWidth","whiteSpace","lineHeight","width","fontSize","top","background","default","borderTop","borderRadius","connect","_ref","chatApp","entities","bindActionCreators","Actions","StatusIcon","status","statusArr","title","ChatsSidebar","statusSwitchEl","chatsMoreMenuEl","searchText","handleContactClick","chatsMoreMenuClick","event","currentTarget","chatsMoreMenuClose","statusSwitchClick","stopPropagation","console","info","statusSwitchClose","getFilteredArray","arr","FuseUtils","filterArrayByString","setSearchText","openUserSidebar","_this$state","chatListContacts","chatList","_chat","Object","objectSpread","chatListArr","toConsumableArray","contactsArr","ContactListItem","button","contactListItem","active","onClick","chat_StatusIcon","alt","name","secondary","mood","lastMessageTime","unread","unreadBadge","contentToolbar","aria-owns","aria-haspopup","anchorEl","open","Boolean","onClose","fullWidth","inputProps","aria-label","Fragment","enter","animation","height","borderBottom","divider","minHeight","&.active","paper","minWidth","textAlign","withTheme","_ref2","closeContactSidebar","variant","label","disabled","multiline","UserSidebar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","debounce","handleChange","set","checked","prevState","snapshot","closeUserSidebar","component","control","initialState","mobileChatsSidebarOpen","userSidebarOpen","contactSidebarOpen","sidebarsReducer","arguments","undefined","getUpdatedUser","action","newUserData","merge","concat","userReducer","contactsReducer","reducer","combineReducers","sidebars","ChatApp","openMobileChatsSidebar","openContactSidebar","selectedContact","topBg","contentCardWrapper","contentCard","mdUp","anchor","drawerPaper","ModalProps","keepMounted","disablePortal","BackdropProps","chat_ChatsSidebar","smDown","chat_UserSidebar","contentWrapper","content","chat_Chat","chat_ContactSidebar","React","withReducer","_contentCardWrapper","backgroundImage","dark","backgroundSize","pointerEvents","maxHeight","defineProperty","breakpoints","down","boxShadow","shadows","overflow","up","zIndex","fade"],"mappings":"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","file":"static/js/11.b477ff03.chunk.js","sourcesContent":["import axios from 'axios/index';\n\nexport const GET_CONTACTS = '[CHAT APP] GET CONTACTS';\nexport const SET_SELECTED_CONTACT_ID = '[CHAT APP] SET SELECTED CONTACT ID';\nexport const REMOVE_SELECTED_CONTACT_ID = '[CHAT APP] REMOVE SELECTED CONTACT ID';\n\nexport function getContacts()\n{\n    const request = axios.get('/api/chat/contacts');\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_CONTACTS,\n                payload: response.data\n            })\n        );\n}\n\nexport function setselectedContactId(contactId)\n{\n    return {\n        type   : SET_SELECTED_CONTACT_ID,\n        payload: contactId\n    }\n}\n\nexport function removeSelectedContactId()\n{\n    return {\n        type: REMOVE_SELECTED_CONTACT_ID\n    }\n}","import axios from 'axios/index';\n\nexport const GET_USER_DATA = '[CHAT APP] GET USER DATA';\nexport const UPDATE_USER_DATA = '[CHAT APP] UPDATE USER DATA';\n\n\nexport function getUserData()\n{\n    const request = axios.get('/api/chat/user');\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : GET_USER_DATA,\n                payload: response.data\n            })\n        );\n}\n\nexport function updateUserData(newData)\n{\n    const request = axios.post('/api/chat/user/data', newData);\n\n    return (dispatch) =>\n        request.then((response) =>\n            dispatch({\n                type   : UPDATE_USER_DATA,\n                payload: response.data\n            })\n        );\n}\n","import axios from 'axios/index';\nimport {setselectedContactId} from './contacts.actions';\nimport {closeMobileChatsSidebar} from './sidebars.actions';\n\nexport const GET_CHAT = '[CHAT APP] GET CHAT';\nexport const REMOVE_CHAT = '[CHAT APP] REMOVE CHAT';\nexport const SEND_MESSAGE = '[CHAT APP] SEND MESSAGE';\n\nexport function getChat(contactId)\n{\n    return (dispatch, getState) => {\n        const {id: userId} = getState().chatPanel.user;\n        const request = axios.get('/api/chat/get-chat', {\n            contactId,\n            userId\n        });\n\n        return request.then((response) => {\n\n            dispatch(setselectedContactId(contactId));\n\n            dispatch(closeMobileChatsSidebar());\n\n            return dispatch({\n                type        : GET_CHAT,\n                chat        : response.data.chat,\n                userChatData: response.data.userChatData\n            });\n        });\n    }\n}\n\nexport function removeChat()\n{\n    return {\n        type: REMOVE_CHAT\n    };\n}\n\nexport function sendMessage(messageText, chatId, userId)\n{\n    const message = {\n        'who'    : userId,\n        'message': messageText,\n        'time'   : new Date()\n    };\n\n    const request = axios.post('/api/chat/send-message', {\n        chatId,\n        message\n    });\n\n    return (dispatch) =>\n        request.then((response) => {\n                return dispatch({\n                    type        : SEND_MESSAGE,\n                    message     : response.data.message,\n                    userChatData: response.data.userChatData\n                })\n            }\n        );\n}","import React, {Component} from 'react';\nimport {Avatar, Paper, Typography, withStyles, TextField, IconButton, Icon} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {FuseScrollbars} from '@fuse';\nimport moment from 'moment/moment';\nimport * as Actions from './store/actions';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport _ from '@lodash';\n\nconst styles = theme => ({\n    messageRow  : {\n        position                          : 'relative',\n        display                           : 'flex',\n        flexDirection                     : 'column',\n        alignItems                        : 'flex-start',\n        justifyContent                    : 'flex-end',\n        padding                           : '0 16px 4px 16px',\n        flex                              : '0 0 auto',\n        '&.contact'                       : {\n            '& $bubble'       : {\n                backgroundColor        : theme.palette.primary.main,\n                color                  : theme.palette.primary.contrastText,\n                borderTopLeftRadius    : 5,\n                borderBottomLeftRadius : 5,\n                borderTopRightRadius   : 20,\n                borderBottomRightRadius: 20,\n                '& $time'              : {\n                    marginLeft: 12\n                }\n            },\n            '&.first-of-group': {\n                '& $bubble': {\n                    borderTopLeftRadius: 20\n                }\n            },\n            '&.last-of-group' : {\n                '& $bubble': {\n                    borderBottomLeftRadius: 20\n                }\n            }\n        },\n        '&.me'                            : {\n            paddingLeft: 40,\n\n            '& $avatar': {\n                order : 2,\n                margin: '0 0 0 16px'\n            },\n\n            '& $bubble'       : {\n                marginLeft             : 'auto',\n                backgroundColor        : theme.palette.grey[300],\n                color                  : theme.palette.getContrastText(theme.palette.grey[300]),\n                borderTopLeftRadius    : 20,\n                borderBottomLeftRadius : 20,\n                borderTopRightRadius   : 5,\n                borderBottomRightRadius: 5,\n                '& $time'              : {\n                    justifyContent: 'flex-end',\n                    right         : 0,\n                    marginRight   : 12\n                }\n            },\n            '&.first-of-group': {\n                '& $bubble': {\n                    borderTopRightRadius: 20\n                }\n            },\n\n            '&.last-of-group': {\n                '& $bubble': {\n                    borderBottomRightRadius: 20\n                }\n            }\n        },\n        '&.contact + .me, &.me + .contact': {\n            paddingTop: 20,\n            marginTop : 20\n        },\n        '&.first-of-group'                : {\n            '& $bubble': {\n                borderTopLeftRadius: 20,\n                paddingTop         : 13\n            }\n        },\n        '&.last-of-group'                 : {\n            '& $bubble': {\n                borderBottomLeftRadius: 20,\n                paddingBottom         : 13,\n                '& $time'             : {\n                    display: 'flex'\n                }\n            }\n        }\n    },\n    avatar      : {\n        position: 'absolute',\n        left    : -32,\n        margin  : 0\n    },\n    bubble      : {\n        position      : 'relative',\n        display       : 'flex',\n        alignItems    : 'center',\n        justifyContent: 'center',\n        padding       : 12,\n        maxWidth      : '100%'\n    },\n    message     : {\n        whiteSpace: 'pre-wrap',\n        lineHeight: 1.2\n    },\n    time        : {\n        position  : 'absolute',\n        display   : 'none',\n        width     : '100%',\n        fontSize  : 11,\n        marginTop : 8,\n        top       : '100%',\n        left      : 0,\n        whiteSpace: 'nowrap'\n    },\n    bottom      : {\n        background: theme.palette.background.default,\n        borderTop : '1px solid rgba(0, 0, 0, 0.13)'\n    },\n    inputWrapper: {\n        borderRadius: 24\n    }\n});\n\nclass Chat extends Component {\n    state = {\n        messageText: ''\n    };\n\n    componentDidUpdate(prevProps)\n    {\n        if ( this.props.chat && !_.isEqual(prevProps.chat, this.props.chat) )\n        {\n            this.scrollToBottom();\n        }\n    }\n\n    shouldShowContactAvatar = (item, i) => {\n        return (\n            item.who === this.props.selectedContactId &&\n            ((this.props.chat.dialog[i + 1] && this.props.chat.dialog[i + 1].who !== this.props.selectedContactId) || !this.props.chat.dialog[i + 1])\n        );\n    };\n\n    isFirstMessageOfGroup = (item, i) => {\n        return (i === 0 || (this.props.chat.dialog[i - 1] && this.props.chat.dialog[i - 1].who !== item.who));\n    };\n\n    isLastMessageOfGroup = (item, i) => {\n        return (i === this.props.chat.dialog.length - 1 || (this.props.chat.dialog[i + 1] && this.props.chat.dialog[i + 1].who !== item.who));\n    };\n\n    onInputChange = (ev) => {\n        this.setState({messageText: ev.target.value});\n    };\n\n    onMessageSubmit = (ev) => {\n        ev.preventDefault();\n        if ( this.state.messageText === '' )\n        {\n            return;\n        }\n        this.props.sendMessage(this.state.messageText, this.props.chat.id, this.props.user.id)\n            .then(() => {\n                this.setState({messageText: ''});\n                this.scrollToBottom();\n            });\n    };\n\n    scrollToBottom = () => {\n        this.chatScroll.scrollTop = this.chatScroll.scrollHeight;\n    };\n\n    render()\n    {\n        const {classes, chat, contacts, user, className} = this.props;\n        const {messageText} = this.state;\n        return (\n            <div className={classNames(\"flex flex-col\", className)}>\n                <FuseScrollbars\n                    containerRef={(ref) => {\n                        this.chatScroll = ref\n                    }}\n                    className=\"flex flex-1 flex-col overflow-y-auto\"\n                >\n                    {chat && chat.dialog.length > 0 ?\n                        (\n                            <div className=\"flex flex-col pt-16 pl-56 pr-16 pb-40\">\n                                {chat.dialog.map((item, i) => {\n                                    const contact = item.who === user.id ? user : contacts.find(_contact => _contact.id === item.who);\n                                    return (\n                                        <div\n                                            key={item.time}\n                                            className={classNames(\n                                                classes.messageRow,\n                                                {'me': item.who === user.id},\n                                                {'contact': item.who !== user.id},\n                                                {'first-of-group': this.isFirstMessageOfGroup(item, i)},\n                                                {'last-of-group': this.isLastMessageOfGroup(item, i)}\n                                            )}\n                                        >\n                                            {this.shouldShowContactAvatar(item, i) && (\n                                                <Avatar className={classes.avatar} src={contact.avatar}/>\n                                            )}\n                                            <div className={classes.bubble}>\n                                                <div className={classes.message}>{item.message}</div>\n                                                <Typography className={classes.time}\n                                                            color=\"textSecondary\">{moment(item.time).format('MMMM Do YYYY, h:mm:ss a')}</Typography>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        ) : (\n                            <div className=\"flex flex-col flex-1\">\n                                <div className=\"flex flex-col flex-1 items-center justify-center\">\n                                    <Icon className=\"text-128\" color=\"disabled\">chat</Icon>\n                                </div>\n                                <Typography className=\"px-16 pb-24 text-center\" color=\"textSecondary\">\n                                    Start a conversation by typing your message below.\n                                </Typography>\n                            </div>\n                        )\n                    }\n\n                </FuseScrollbars>\n                {chat && (\n                    <form onSubmit={this.onMessageSubmit} className={classNames(classes.bottom, \"py-16 px-8\")}>\n                        <Paper className={classNames(classes.inputWrapper, \"flex items-center relative\")} elevation={1}>\n                            <TextField\n                                autoFocus={false}\n                                id=\"message-input\"\n                                className=\"flex-1\"\n                                InputProps={{\n                                    disableUnderline: true,\n                                    classes         : {\n                                        root : \"flex flex-grow flex-no-shrink ml-16 mr-48 my-8\",\n                                        input: \"\"\n                                    },\n                                    placeholder     : \"Type your message\"\n                                }}\n                                InputLabelProps={{\n                                    shrink   : false,\n                                    className: classes.bootstrapFormLabel\n                                }}\n                                onChange={this.onInputChange}\n                                value={messageText}\n                            />\n                            <IconButton className=\"absolute pin-r pin-t\" type=\"submit\">\n                                <Icon className=\"text-24\" color=\"action\">send</Icon>\n                            </IconButton>\n                        </Paper>\n                    </form>\n                )}\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        sendMessage: Actions.sendMessage\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        contacts         : chatApp.contacts.entities,\n        selectedContactId: chatApp.contacts.selectedContactId,\n        chat             : chatApp.chat,\n        user             : chatApp.user\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Chat));\n","import React from 'react';\nimport {Icon} from \"@material-ui/core\";\n\nconst StatusIcon = ({status}) => {\n    switch ( status )\n    {\n        case 'online':\n            return <Icon\n                className=\"block text-16 text-green bg-white rounded-full\">check_circle</Icon>;\n        case 'away':\n            return <Icon\n                className=\"block text-16 text-white bg-yellow-dark rounded-full\">access_time</Icon>;\n        case 'do-not-disturb':\n            return <Icon\n                className=\"block text-16 text-red bg-white rounded-full\">remove_circle_outline</Icon>;\n        case 'offline':\n            return <Icon\n                className=\"block text-16 text-grey-dark bg-white rounded-full\">not_interested</Icon>;\n        default:\n            return null;\n    }\n};\n\nexport default StatusIcon;\n","import {FuseScrollbars, FuseAnimateGroup, FuseUtils} from '@fuse';\nimport {withStyles, AppBar, Avatar, ListItemIcon, List, ListItem, ListItemText, Menu, MenuItem, Typography, Toolbar, Icon, IconButton, Input, Paper} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport moment from \"moment\";\nimport * as Actions from \"./store/actions\";\nimport StatusIcon from \"./StatusIcon\";\n\nconst statusArr = [\n    {\n        title: 'Online',\n        value: 'online'\n    },\n    {\n        title: 'Away',\n        value: 'away'\n    },\n    {\n        title: 'Do not disturb',\n        value: 'do-not-disturb'\n    },\n    {\n        title: 'Offline',\n        value: 'offline'\n    }\n];\n\nconst styles = theme => ({\n    root           : {\n        display      : 'flex',\n        flex         : '1 1 auto',\n        flexDirection: 'column',\n        height       : '100%'\n    },\n    contactListItem: {\n        padding     : '12px 16px',\n        borderBottom: '1px solid ' + theme.palette.divider,\n        minHeight   : 90,\n        '&.active'  : {\n            backgroundColor: theme.palette.background.paper\n        }\n    },\n    unreadBadge    : {\n        minWidth       : 24,\n        height         : 24,\n        lineHeight     : '24px',\n        borderRadius   : '50%',\n        fontSize       : 14,\n        textAlign      : 'center',\n        backgroundColor: theme.palette.secondary.main,\n        color          : theme.palette.secondary.contrastText\n    }\n});\n\nclass ChatsSidebar extends Component {\n\n    state = {\n        statusSwitchEl : null,\n        chatsMoreMenuEl: null,\n        searchText     : ''\n    };\n\n    handleContactClick = (contactId) => {\n        this.props.getChat(contactId);\n    };\n\n    chatsMoreMenuClick = (event) => {\n        this.setState({chatsMoreMenuEl: event.currentTarget});\n    };\n\n    chatsMoreMenuClose = (event) => {\n        this.setState({chatsMoreMenuEl: null});\n    };\n\n    statusSwitchClick = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        console.info('status click');\n\n        this.setState({statusSwitchEl: event.currentTarget});\n    };\n\n    statusSwitchClose = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({statusSwitchEl: null});\n    };\n\n\n    getFilteredArray = (arr, searchText) => {\n        if ( searchText.length === 0 )\n        {\n            return arr;\n        }\n        return FuseUtils.filterArrayByString(arr, searchText);\n    };\n\n    setSearchText = event => {\n        this.setState({searchText: event.target.value})\n    };\n\n    render()\n    {\n        const {classes, contacts, user, selectedContactId, openUserSidebar} = this.props;\n        const {statusSwitchEl, chatsMoreMenuEl, searchText} = this.state;\n\n        const chatListContacts = user && user.chatList ? user.chatList.map((_chat) => (\n            {\n                ..._chat,\n                ...contacts.find((_contact) => _contact.id === _chat.contactId)\n            }\n        )) : [];\n        const chatListArr = this.getFilteredArray([...chatListContacts], searchText);\n        const contactsArr = this.getFilteredArray([...contacts], searchText);\n\n        const ContactListItem = ({contact}) => {\n            return (\n                <ListItem\n                    button\n                    className={classNames(classes.contactListItem, {'active': (selectedContactId === contact.id)})}\n                    onClick={() => this.handleContactClick(contact.id)}\n                >\n                    <div className=\"relative\">\n\n                        <div className=\"absolute pin-r pin-b -m-4 z-10\">\n                            <StatusIcon status={contact.status}/>\n                        </div>\n\n                        <Avatar src={contact.avatar} alt={contact.name}>\n                            {!contact.avatar || contact.avatar === '' ? contact.name[0] : ''}\n                        </Avatar>\n                    </div>\n\n                    <ListItemText\n                        classes={{\n                            root     : \"min-w-px\",\n                            secondary: \"truncate\"\n                        }}\n                        primary={contact.name}\n                        secondary={contact.mood}\n                    />\n\n                    {contact.chatId && (\n                        <div className=\"flex flex-col justify-center items-end\">\n                            {contact.lastMessageTime && (\n                                <Typography className=\"whitespace-no-wrap mb-8\">\n                                    {moment(contact.lastMessageTime).format('ll')}\n                                </Typography>\n                            )}\n                            {contact.unread && (\n                                <div className={classes.unreadBadge}>{contact.unread}</div>\n                            )}\n                        </div>\n                    )}\n                </ListItem>\n            )\n        };\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    className={classes.contentToolbar}\n                    position=\"static\"\n                    color=\"default\"\n                    elevation={1}\n                >\n                    <Toolbar className=\"flex justify-between items-center px-16 pr-4\">\n\n                        {user && (\n                            <IconButton className=\"relative w-40 h-40 p-0\" onClick={openUserSidebar}>\n\n                                <Avatar src={user.avatar} alt={user.name} className=\"w-40 h-40\">\n                                    {(!user.avatar || user.avatar === '') ? user.name[0] : ''}\n                                </Avatar>\n\n                                <div\n                                    className=\"absolute pin-r pin-b -m-4 z-10 cursor-pointer\"\n                                    aria-owns={statusSwitchEl ? 'switch-menu' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.statusSwitchClick}\n                                >\n                                    <StatusIcon status={user.status}/>\n                                </div>\n\n                                <Menu\n                                    id=\"status-switch\"\n                                    anchorEl={statusSwitchEl}\n                                    open={Boolean(statusSwitchEl)}\n                                    onClose={this.statusSwitchClose}\n                                >\n                                    {statusArr.map((status) => (\n                                        <MenuItem onClick={this.statusSwitchClose} key={status.value}>\n                                            <ListItemIcon>\n                                                <StatusIcon status={status.value}/>\n                                            </ListItemIcon>\n                                            <ListItemText primary={status.title}/>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </IconButton>\n                        )}\n\n                        <div>\n                            <IconButton\n                                aria-owns={chatsMoreMenuEl ? 'chats-more-menu' : null}\n                                aria-haspopup=\"true\"\n                                onClick={this.chatsMoreMenuClick}\n                            >\n                                <Icon>more_vert</Icon>\n                            </IconButton>\n                            <Menu\n                                id=\"chats-more-menu\"\n                                anchorEl={chatsMoreMenuEl}\n                                open={Boolean(chatsMoreMenuEl)}\n                                onClose={this.chatsMoreMenuClose}\n                            >\n                                <MenuItem onClick={this.chatsMoreMenuClose}>Profile</MenuItem>\n                                <MenuItem onClick={this.chatsMoreMenuClose}>Logout</MenuItem>\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                    <Toolbar className=\"px-16\">\n                        <Paper className=\"flex p-4 items-center w-full px-8 py-4 rounded-8\" elevation={1}>\n\n                            <Icon className=\"mr-8\" color=\"action\">search</Icon>\n\n                            <Input\n                                placeholder=\"Search or start new chat\"\n                                className=\"flex flex-1\"\n                                disableUnderline\n                                fullWidth\n                                value={searchText}\n                                inputProps={{\n                                    'aria-label': 'Search'\n                                }}\n                                onChange={this.setSearchText}\n                            />\n                        </Paper>\n                    </Toolbar>\n                </AppBar>\n                <FuseScrollbars className=\"overflow-y-auto flex-1\">\n                    <List className=\"w-full\">\n                        {contacts.length > 0 && (\n                            <React.Fragment>\n                                <FuseAnimateGroup\n                                    enter={{\n                                        animation: \"transition.expandIn\"\n                                    }}\n                                    className=\"flex flex-col flex-no-shrink\"\n                                >\n                                    {chatListArr.length > 0 && (\n                                        <Typography\n                                            className=\"font-300 text-20 px-16 py-24\"\n                                            color=\"secondary\"\n                                        >\n                                            Chats\n                                        </Typography>\n                                    )}\n\n                                    {chatListArr.map(contact => (\n                                        <ContactListItem key={contact.id} contact={contact}/>\n                                    ))}\n\n                                    {contactsArr.length > 0 && (\n                                        <Typography\n                                            className=\"font-300 text-20 px-16 py-24\"\n                                            color=\"secondary\"\n                                        >\n                                            Contacts\n                                        </Typography>\n                                    )}\n\n                                    {contactsArr.map(contact => (\n                                        <ContactListItem key={contact.id} contact={contact}/>\n                                    ))}\n                                </FuseAnimateGroup>\n                            </React.Fragment>\n                        )}\n                    </List>\n                </FuseScrollbars>\n            </div>\n        )\n    };\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getChat        : Actions.getChat,\n        openUserSidebar: Actions.openUserSidebar\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        contacts         : chatApp.contacts.entities,\n        selectedContactId: chatApp.contacts.selectedContactId,\n        user             : chatApp.user\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(ChatsSidebar));\n","import React from 'react';\nimport {withStyles, IconButton, TextField, AppBar, Icon, Toolbar, Typography, Avatar} from '@material-ui/core';\nimport {FuseScrollbars} from '@fuse';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from './store/actions';\nimport connect from 'react-redux/es/connect/connect';\n\nconst styles = theme => ({\n    root: {\n        display      : 'flex',\n        flex         : '1 1 auto',\n        flexDirection: 'column',\n        height       : '100%'\n    }\n});\nconst ContactSidebar = ({classes, contacts, closeContactSidebar, selectedContactId}) => {\n    const contact = contacts.find(_contact => (_contact.id === selectedContactId));\n    return contact ? (\n        <div className={classes.root}>\n            <AppBar\n                className={classes.contentToolbar}\n                position=\"static\"\n                color=\"primary\"\n                elevation={1}\n            >\n                <Toolbar className=\"flex justify-between items-center px-16 pr-4\">\n                    <Typography color=\"inherit\" variant=\"subtitle1\">Contact Info</Typography>\n                    <IconButton onClick={closeContactSidebar} color=\"inherit\">\n                        <Icon>close</Icon>\n                    </IconButton>\n                </Toolbar>\n                <Toolbar className=\"flex flex-col justify-center items-center p-24\">\n                    <Avatar src={contact.avatar} alt={contact.name} className=\"w-96 h-96\">\n                        {!contact.avatar || contact.avatar === '' ? contact.name[0] : ''}\n                    </Avatar>\n                    <Typography color=\"inherit\" className=\"mt-16\" variant=\"h6\">{contact.name}</Typography>\n                </Toolbar>\n            </AppBar>\n            <FuseScrollbars className=\"overflow-y-auto flex-1 p-24\">\n                <TextField\n                    label=\"Mood\"\n                    className=\"w-full\"\n                    value={contact.mood}\n                    margin=\"normal\"\n                    disabled\n                    multiline\n                />\n            </FuseScrollbars>\n        </div>\n    ) : '';\n};\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeContactSidebar: Actions.closeContactSidebar\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        contacts         : chatApp.contacts.entities,\n        selectedContactId: chatApp.contacts.selectedContactId\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(ContactSidebar));\n","import React, {Component} from 'react';\nimport {Radio, FormControlLabel, RadioGroup, FormLabel, FormControl, IconButton, TextField, AppBar, Icon, Toolbar, withStyles, Typography, Avatar} from '@material-ui/core';\nimport {FuseScrollbars} from '@fuse';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from './store/actions';\nimport connect from 'react-redux/es/connect/connect';\nimport StatusIcon from './StatusIcon';\nimport _ from '@lodash';\n\nconst statusArr = [\n    {\n        title: 'Online',\n        value: 'online'\n    },\n    {\n        title: 'Away',\n        value: 'away'\n    },\n    {\n        title: 'Do not disturb',\n        value: 'do-not-disturb'\n    },\n    {\n        title: 'Offline',\n        value: 'offline'\n    }\n];\n\nconst styles = theme => ({\n    root: {\n        display      : 'flex',\n        flex         : '1 1 auto',\n        flexDirection: 'column',\n        height       : '100%'\n    }\n});\n\nclass UserSidebar extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state = this.props.user ? {...this.props.user} : null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot)\n    {\n        if ( this.props.user && !_.isEqual(prevProps.user, this.props.user) && !_.isEqual(this.state, this.props.user) )\n        {\n            this.setState({...this.props.user});\n        }\n\n        if ( this.state && !_.isEqual(this.state, prevState) && !_.isEqual(this.state, this.props.user) )\n        {\n            this.updateUserData();\n        }\n    }\n\n    updateUserData = _.debounce(() => {\n        this.props.updateUserData(this.state);\n    }, 500);\n\n    handleChange = (event) => {\n        this.setState(_.set({...this.state}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value));\n    };\n\n    render()\n    {\n        const {classes, user, closeUserSidebar} = this.props;\n        return this.state ? (\n            <div className={classes.root}>\n                <AppBar\n                    className={classes.contentToolbar}\n                    position=\"static\"\n                    color=\"primary\"\n                    elevation={1}\n                >\n                    <Toolbar className=\"flex justify-between items-center px-16 pr-4\">\n                        <Typography color=\"inherit\" variant=\"subtitle1\">User Info</Typography>\n                        <IconButton onClick={closeUserSidebar} color=\"inherit\">\n                            <Icon>close</Icon>\n                        </IconButton>\n                    </Toolbar>\n                    <Toolbar className=\"flex flex-col justify-center items-center p-24\">\n                        <Avatar src={user.avatar} alt={user.name} className=\"w-96 h-96\">\n                            {(!user.avatar || user.avatar === '') ? user.name[0] : ''}\n                        </Avatar>\n                        <Typography color=\"inherit\" className=\"mt-16\" variant=\"h6\">{user.name}</Typography>\n                    </Toolbar>\n                </AppBar>\n                <FuseScrollbars className=\"overflow-y-auto flex-1 p-24\">\n                    <form>\n                        <FormControl component=\"fieldset\" className=\"w-full mb-16\">\n                            <TextField\n                                label=\"Mood\"\n                                name=\"mood\"\n                                className=\"w-full\"\n                                value={this.state.mood}\n                                margin=\"normal\"\n                                multiline\n                                onChange={this.handleChange}\n                            />\n                        </FormControl>\n                        <FormControl component=\"fieldset\" className=\"w-full mb-16\">\n                            <FormLabel component=\"legend\">Status</FormLabel>\n                            <RadioGroup\n                                aria-label=\"Status\"\n                                name=\"status\"\n                                className=\"\"\n                                value={this.state.status}\n                                onChange={this.handleChange}\n                            >\n                                {statusArr.map((status) => (\n                                    <FormControlLabel\n                                        key={status.value}\n                                        value={status.value}\n                                        control={<Radio/>}\n                                        label={(\n                                            <div className=\"flex items-center\">\n                                                <StatusIcon status={status.value}/>\n                                                <span className=\"ml-8\">{status.title}</span>\n                                            </div>\n                                        )}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </FormControl>\n                    </form>\n                </FuseScrollbars>\n            </div>\n        ) : '';\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        closeUserSidebar: Actions.closeUserSidebar,\n        updateUserData  : Actions.updateUserData\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        user: chatApp.user\n    }\n}\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(UserSidebar));\n","import * as Actions from '../actions';\n\nconst initialState = {\n    mobileChatsSidebarOpen: false,\n    userSidebarOpen       : false,\n    contactSidebarOpen    : false\n};\n\nconst sidebarsReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.OPEN_MOBILE_CHATS_SIDEBAR:\n        {\n            return {\n                ...state,\n                mobileChatsSidebarOpen: true\n            }\n        }\n        case Actions.CLOSE_MOBILE_CHATS_SIDEBAR:\n        {\n            return {\n                ...state,\n                mobileChatsSidebarOpen: false\n            }\n        }\n        case Actions.OPEN_USER_SIDEBAR:\n        {\n            return {\n                ...state,\n                userSidebarOpen: true\n            }\n        }\n        case Actions.CLOSE_USER_SIDEBAR:\n        {\n            return {\n                ...state,\n                userSidebarOpen: false\n            }\n        }\n        case Actions.OPEN_CONTACT_SIDEBAR:\n        {\n            return {\n                ...state,\n                contactSidebarOpen: true\n            }\n        }\n        case Actions.CLOSE_CONTACT_SIDEBAR:\n        {\n            return {\n                ...state,\n                contactSidebarOpen: false\n            }\n        }\n        default:\n        {\n            return state;\n        }\n    }\n};\n\nexport default sidebarsReducer;","import * as Actions from '../actions';\nimport _ from \"lodash\";\n\nconst userReducer = function (state = null, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_USER_DATA:\n        {\n            return {...action.payload};\n        }\n        case Actions.UPDATE_USER_DATA:\n        {\n            return {...action.payload};\n        }\n        case Actions.GET_CHAT:\n        {\n            return getUpdatedUser(state, action);\n        }\n        case Actions.SEND_MESSAGE:\n        {\n            return getUpdatedUser(state, action);\n        }\n        default:\n            return state;\n    }\n};\n\nfunction getUpdatedUser(state, action)\n{\n    let newUserData = _.merge({}, state);\n    let userChatData = newUserData.chatList.find(_chat => _chat.contactId === action.userChatData.contactId);\n    if ( userChatData )\n    {\n        newUserData.chatList = newUserData.chatList.map(_chat => _chat.contactId === action.userChatData.contactId ? action.userChatData : _chat);\n    }\n    else\n    {\n        newUserData.chatList = [action.userChatData, ...newUserData.chatList];\n    }\n    return newUserData;\n}\n\nexport default userReducer;","import * as Actions from '../actions';\n\nconst initialState = {\n    entities         : [],\n    selectedContactId: null\n};\n\nconst contactsReducer = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_CONTACTS:\n        {\n            return {\n                ...state,\n                entities: [...action.payload]\n            };\n        }\n        case Actions.SET_SELECTED_CONTACT_ID:\n        {\n            return {\n                ...state,\n                selectedContactId: action.payload\n            };\n        }\n        case Actions.REMOVE_SELECTED_CONTACT_ID:\n        {\n            return {\n                ...state,\n                selectedContactId: null\n            };\n        }\n        default:\n        {\n            return state;\n        }\n    }\n};\n\nexport default contactsReducer;","import * as Actions from '../actions';\n\nconst initialState = null;\n\nconst chat = function (state = initialState, action) {\n    switch ( action.type )\n    {\n        case Actions.GET_CHAT:\n        {\n            return {\n                ...action.chat\n            };\n        }\n        case Actions.REMOVE_CHAT:\n        {\n            return null;\n        }\n        case Actions.SEND_MESSAGE:\n        {\n            return {\n                ...state,\n                dialog: [\n                    ...state.dialog,\n                    action.message\n                ]\n            };\n        }\n        default:\n        {\n            return state;\n        }\n    }\n};\n\nexport default chat;","import sidebars from './sidebars.reducer';\nimport user from './user.reducer';\nimport contacts from './contacts.reducer';\nimport chat from './chat.reducer';\nimport {combineReducers} from 'redux';\n\nconst reducer = combineReducers({\n    sidebars,\n    user,\n    contacts,\n    chat\n});\n\nexport default reducer;\n","import React from 'react';\nimport {withStyles, Drawer, AppBar, Toolbar, Typography, IconButton, Hidden, Avatar, Icon, Paper, Button} from '@material-ui/core';\nimport {fade} from '@material-ui/core/styles/colorManipulator';\nimport classNames from 'classnames';\nimport {bindActionCreators} from \"redux\";\nimport connect from \"react-redux/es/connect/connect\";\nimport * as Actions from \"./store/actions\";\nimport Chat from \"./Chat\";\nimport ChatsSidebar from \"./ChatsSidebar\";\nimport StatusIcon from \"./StatusIcon\";\nimport ContactSidebar from './ContactSidebar';\nimport UserSidebar from './UserSidebar';\nimport withReducer from 'store/withReducer';\nimport reducer from './store/reducers';\n\nconst drawerWidth = 400;\nconst headerHeight = 200;\n\nconst styles = theme => ({\n    root              : {\n        display        : 'flex',\n        flexDirection  : 'row',\n        minHeight      : '100%',\n        position       : 'relative',\n        flex           : '1 1 auto',\n        height         : 'auto',\n        backgroundColor: theme.palette.background.default\n    },\n    topBg             : {\n        position       : 'absolute',\n        left           : 0,\n        right          : 0,\n        top            : 0,\n        height         : headerHeight,\n        backgroundImage: 'url(\"../../assets/images/backgrounds/header-bg.png\")',\n        backgroundColor: theme.palette.primary.dark,\n        backgroundSize : 'cover',\n        pointerEvents  : 'none'\n    },\n    contentCardWrapper: {\n        position                      : 'relative',\n        padding                       : 32,\n        maxWidth                      : 1400,\n        display                       : 'flex',\n        flexDirection                 : 'column',\n        flex                          : '1 0 auto',\n        width                         : '100%',\n        minWidth                      : '0',\n        maxHeight                     : '100%',\n        margin                        : '0 auto',\n        [theme.breakpoints.down('sm')]: {\n            padding: 24\n        },\n        [theme.breakpoints.down('xs')]: {\n            padding: 12\n        }\n    },\n    contentCard       : {\n        display        : 'flex',\n        position       : 'relative',\n        flex           : '1 1 100%',\n        flexDirection  : 'row',\n        backgroundImage: 'url(\"/assets/images/patterns/rain-grey.png\")',\n        backgroundColor: theme.palette.background.paper,\n        boxShadow      : theme.shadows[1],\n        borderRadius   : 8,\n        minHeight      : 0,\n        overflow       : 'hidden'\n    },\n    drawerPaper       : {\n        width                       : drawerWidth,\n        maxWidth                    : '100%',\n        overflow                    : 'hidden',\n        height                      : '100%',\n        [theme.breakpoints.up('md')]: {\n            position: 'relative'\n        }\n    },\n    contentWrapper    : {\n        display      : 'flex',\n        flexDirection: 'column',\n        flex         : '1 1 100%',\n        zIndex       : 10,\n        background   : `linear-gradient(to bottom, ${fade(theme.palette.background.paper, 0.8)} 0,${fade(theme.palette.background.paper, 0.6)} 20%,${fade(theme.palette.background.paper, 0.8)})`\n    },\n    content           : {\n        display  : 'flex',\n        flex     : '1 1 100%',\n        minHeight: 0\n    }\n});\n\nclass ChatApp extends React.Component {\n\n    componentDidMount()\n    {\n        this.props.getUserData();\n        this.props.getContacts();\n    }\n\n    render()\n    {\n        const {classes, chat, selectedContactId, contacts, mobileChatsSidebarOpen, openMobileChatsSidebar, closeMobileChatsSidebar, userSidebarOpen, closeUserSidebar, contactSidebarOpen, openContactSidebar, closeContactSidebar} = this.props;\n        const selectedContact = contacts.find(_contact => (_contact.id === selectedContactId));\n        return (\n            <div className={classNames(classes.root)}>\n\n                <div className={classes.topBg}/>\n\n                <div className={classes.contentCardWrapper}>\n                    <div className={classes.contentCard}>\n\n                        <Hidden mdUp>\n                            <Drawer\n                                className=\"h-full absolute z-20\"\n                                variant=\"temporary\"\n                                anchor=\"left\"\n                                open={mobileChatsSidebarOpen}\n                                onClose={closeMobileChatsSidebar}\n                                classes={{\n                                    paper: classNames(classes.drawerPaper, \"absolute pin-l\")\n                                }}\n                                ModalProps={{\n                                    keepMounted  : true,\n                                    disablePortal: true,\n                                    BackdropProps: {\n                                        classes: {\n                                            root: \"absolute\"\n                                        }\n                                    }\n                                }}\n                            >\n                                <ChatsSidebar/>\n                            </Drawer>\n                        </Hidden>\n                        <Hidden smDown>\n                            <Drawer\n                                className=\"h-full z-20\"\n                                variant=\"permanent\"\n                                open\n                                classes={{\n                                    paper: classes.drawerPaper\n                                }}\n                            >\n                                <ChatsSidebar/>\n                            </Drawer>\n                        </Hidden>\n                        <Drawer\n                            className=\"h-full absolute z-30\"\n                            variant=\"temporary\"\n                            anchor=\"left\"\n                            open={userSidebarOpen}\n                            onClose={closeUserSidebar}\n                            classes={{\n                                paper: classNames(classes.drawerPaper, \"absolute pin-l\")\n                            }}\n                            ModalProps={{\n                                keepMounted  : true,\n                                disablePortal: true,\n                                BackdropProps: {\n                                    classes: {\n                                        root: \"absolute\"\n                                    }\n                                }\n                            }}\n                        >\n                            <UserSidebar/>\n                        </Drawer>\n\n                        <main className={classNames(classes.contentWrapper, \"z-10\")}>\n                            {!chat ?\n                                (\n                                    <div className=\"flex flex-col flex-1 items-center justify-center p-24\">\n                                        <Paper className=\"rounded-full p-48\">\n                                            <Icon className=\"block text-64\" color=\"secondary\">chat</Icon>\n                                        </Paper>\n                                        <Typography variant=\"h6\" className=\"my-24\">Chat App</Typography>\n                                        <Typography className=\"hidden md:flex px-16 pb-24 mt-24 text-center\" color=\"textSecondary\">\n                                            Select a contact to start a conversation!..\n                                        </Typography>\n                                        <Button variant=\"outlined\" color=\"primary\" className=\"flex md:hidden normal-case\" onClick={openMobileChatsSidebar}>\n                                            Select a contact to start a conversation!..\n                                        </Button>\n                                    </div>\n                                ) : (\n                                    <React.Fragment>\n                                        <AppBar className=\"w-full\" position=\"static\" elevation={1}>\n                                            <Toolbar className=\"px-16\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    aria-label=\"Open drawer\"\n                                                    onClick={openMobileChatsSidebar}\n                                                    className=\"flex md:hidden\"\n                                                >\n                                                    <Icon>chat</Icon>\n                                                </IconButton>\n                                                <div className=\"flex items-center cursor-pointer\" onClick={openContactSidebar}>\n                                                    <div className=\"relative ml-8 mr-12\">\n                                                        <div className=\"absolute pin-r pin-b -m-4 z-10\">\n                                                            <StatusIcon status={selectedContact.status}/>\n                                                        </div>\n\n                                                        <Avatar src={selectedContact.avatar} alt={selectedContact.name}>\n                                                            {!selectedContact.avatar || selectedContact.avatar === '' ? selectedContact.name[0] : ''}\n                                                        </Avatar>\n                                                    </div>\n                                                    <Typography color=\"inherit\" className=\"text-18 font-600\">{selectedContact.name}</Typography>\n                                                </div>\n                                            </Toolbar>\n                                        </AppBar>\n\n                                        <div className={classes.content}>\n                                            <Chat className=\"flex flex-1 z-10\"/>\n                                        </div>\n                                    </React.Fragment>\n                                )\n                            }\n                        </main>\n\n                        <Drawer\n                            className=\"h-full absolute z-30\"\n                            variant=\"temporary\"\n                            anchor=\"right\"\n                            open={contactSidebarOpen}\n                            onClose={closeContactSidebar}\n                            classes={{\n                                paper: classNames(classes.drawerPaper, \"absolute pin-r\")\n                            }}\n                            ModalProps={{\n                                keepMounted  : true,\n                                disablePortal: true,\n                                BackdropProps: {\n                                    classes: {\n                                        root: \"absolute\"\n                                    }\n                                }\n                            }}\n                        >\n                            <ContactSidebar/>\n                        </Drawer>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        getUserData            : Actions.getUserData,\n        getContacts            : Actions.getContacts,\n        openMobileChatsSidebar : Actions.openMobileChatsSidebar,\n        closeMobileChatsSidebar: Actions.closeMobileChatsSidebar,\n        openUserSidebar        : Actions.openUserSidebar,\n        closeUserSidebar       : Actions.closeUserSidebar,\n        openContactSidebar     : Actions.openContactSidebar,\n        closeContactSidebar    : Actions.closeContactSidebar\n    }, dispatch);\n}\n\nfunction mapStateToProps({chatApp})\n{\n    return {\n        chat                  : chatApp.chat,\n        contacts              : chatApp.contacts.entities,\n        selectedContactId     : chatApp.contacts.selectedContactId,\n        mobileChatsSidebarOpen: chatApp.sidebars.mobileChatsSidebarOpen,\n        userSidebarOpen       : chatApp.sidebars.userSidebarOpen,\n        contactSidebarOpen    : chatApp.sidebars.contactSidebarOpen\n    }\n}\n\nexport default withReducer('chatApp', reducer)(withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(ChatApp)));\n"],"sourceRoot":""}