{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/toNumber.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","HorizontalBar","Radar","Polar","Bubble","Scatter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","a","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_MAP_KEY","ChartComponent","_React$Component","_temp","_this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","_this2","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","_this18","_ref8","_React$Component10","_this20","_ref9","defaults","color","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","ilen","actual","origin","c0","c1","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","weight","addBox","Arc","Point","Rectangle","filterByPosition","array","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","item","boxes","push","removeBox","layoutItem","index","configure","prop","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","toString","isObject","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","toFinite","remainder","toNumber","INFINITY","MAX_INTEGER","baseFindIndex","baseIteratee","toInteger","nativeMax","predicate","fromRight","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","replace","isBinary","test","slice","Chart","Animation","animationService","elements","Interaction","platform","Scale","scaleService","Tooltip","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","onAnimationProgress","onAnimationComplete","defineProperty","get","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","find","createFind","isArrayLike","findIndexFunc","iterable","iteratee","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator","baseEach"],"mappings":"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","file":"static/js/4.60b39fa9.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}