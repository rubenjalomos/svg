{"version":3,"sources":["main/content/components/material-ui/material-ui-examples/chips/Chips.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/chips/Chips.js?7fdc","main/content/components/material-ui/material-ui-examples/chips/OutlinedChips.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/chips/OutlinedChips.js?48d4","main/content/components/material-ui/material-ui-examples/chips/ChipsArray.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/chips/ChipsArray.js?61d5","main/content/components/material-ui/MarkdownElement/prism.js","webpack:///./src/main/content/components/material-ui/material-ui-examples/chips/ChipsPlayground.js?45ac","main/content/components/material-ui/MarkdownElement/MarkdownElement.js","main/content/components/material-ui/material-ui-examples/chips/ChipsPlayground.js","main/content/components/material-ui/pages/Chips.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_icons_Done__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Done__WEBPACK_IMPORTED_MODULE_5___default","handleDelete","alert","handleClick","withStyles","theme","root","display","justifyContent","flexWrap","chip","margin","spacing","unit","props","classes","a","createElement","className","label","avatar","onClick","alt","src","onDelete","icon","deleteIcon","component","href","clickable","color","module","exports","variant","ChipsArray","state","chipData","key","data","_this","setState","Object","C_Users_rjalo_Documents_workspace_fuseDemo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","chipToDelete","indexOf","splice","_this2","this","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9___default","map","_material_ui_icons_TagFaces__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_8___default","React","Component","padding","process","styleNode","prismjs__WEBPACK_IMPORTED_MODULE_0__","prismjs__WEBPACK_IMPORTED_MODULE_0___default","browser","document","setAttribute","head","appendChild","prism","marked","Lexer","prototype","lex","replace","token","renderer","Renderer","heading","text","level","concat","escapedText","toLowerCase","setOptions","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","code","lang","language","languages","diff","css","typescript","jsx","fontFamily","typography","fontSize","palette","primary","& .anchor-link","marginTop","position","& pre, & pre[class*=\"language-\"]","backgroundColor","background","paper","borderRadius","shape","overflow","WebkitOverflowScrolling","& code","lineHeight","& p code, & ul code, & pre code","& h1","objectSpread","display2","secondary","& .description","headline","& h2","display1","& h3","& h4","title","& p, & ul, & ol","& h1, & h2, & h3, & h4","wordBreak","& .anchor-link-style","opacity","&:hover .anchor-link-style","hint","&:hover","& svg","width","height","fill","& table","overflowX","borderCollapse","borderSpacing","& .prop-name","& .required","type","& .prop-type","& .prop-default","borderBottom","& thead","fontWeight","fontWeightMedium","& tbody","& td","divider","textAlign","& td:last-child","paddingRight","& td compact","& td code","& th","whiteSpace","& th:last-child","& tr","& thead tr","& strong","& blockquote","borderLeft","& a, & a code","main","textDecoration","& img","maxWidth","flip","other","objectWithoutProperties","react_default","assign","classNames","dangerouslySetInnerHTML","__html","ChipsPlayground","handleChange","event","value","defineProperty","handleDeleteExample","onDeleteToCode","iconToCode","iconToPlayground","avatarToCode","avatarToPlayground","_this$state","colorToCode","variantToCode","Face_default","Avatar_default","Grid_default","container","item","xs","justify","alignItems","chipWrapper","Chip_default","Done_default","undefined","Paper_default","control","FormControl_default","FormLabel_default","RadioGroup_default","row","name","aria-label","onChange","FormControlLabel_default","Radio_default","MarkdownElement_MarkdownElement","flexGrow","marginBottom","_fuse__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles_index__WEBPACK_IMPORTED_MODULE_3__","layoutRoot","withTheme","_ref","header","target","content","iframe","require","default","raw"],"mappings":"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","file":"static/js/91.c8c92628.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    root: {\n        display       : 'flex',\n        justifyContent: 'center',\n        flexWrap      : 'wrap'\n    },\n    chip: {\n        margin: theme.spacing.unit\n    }\n});\n\nfunction handleDelete()\n{\n    alert('You clicked the delete icon.'); // eslint-disable-line no-alert\n}\n\nfunction handleClick()\n{\n    alert('You clicked the Chip.'); // eslint-disable-line no-alert\n}\n\nfunction Chips(props)\n{\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <Chip label=\"Basic Chip\" className={classes.chip}/>\n            <Chip\n                avatar={<Avatar>MB</Avatar>}\n                label=\"Clickable Chip\"\n                onClick={handleClick}\n                className={classes.chip}\n            />\n            <Chip\n                avatar={<Avatar alt=\"Natacha\" src=\"/static/images/avatar/1.jpg\"/>}\n                label=\"Deletable Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n            />\n            <Chip\n                avatar={\n                    <Avatar>\n                        <FaceIcon/>\n                    </Avatar>\n                }\n                label=\"Clickable Deletable Chip\"\n                onClick={handleClick}\n                onDelete={handleDelete}\n                className={classes.chip}\n            />\n            <Chip\n                icon={<FaceIcon/>}\n                label=\"Clickable Deletable Chip\"\n                onClick={handleClick}\n                onDelete={handleDelete}\n                className={classes.chip}\n            />\n            <Chip\n                label=\"Custom delete icon Chip\"\n                onClick={handleClick}\n                onDelete={handleDelete}\n                className={classes.chip}\n                deleteIcon={<DoneIcon/>}\n            />\n            <Chip\n                label=\"Clickable Link Chip\"\n                className={classes.chip}\n                component=\"a\"\n                href=\"#chip\"\n                clickable\n            />\n            <Chip\n                avatar={<Avatar>MB</Avatar>}\n                label=\"Primary Clickable Chip\"\n                clickable\n                className={classes.chip}\n                color=\"primary\"\n                onDelete={handleDelete}\n                deleteIcon={<DoneIcon/>}\n            />\n            <Chip\n                icon={<FaceIcon/>}\n                label=\"Primary Clickable Chip\"\n                clickable\n                className={classes.chip}\n                color=\"primary\"\n                onDelete={handleDelete}\n                deleteIcon={<DoneIcon/>}\n            />\n            <Chip\n                label=\"Deletable Primary Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n                color=\"primary\"\n            />\n            <Chip\n                avatar={\n                    <Avatar>\n                        <FaceIcon/>\n                    </Avatar>\n                }\n                label=\"Deletable Secondary Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n                color=\"secondary\"\n            />\n            <Chip\n                icon={<FaceIcon/>}\n                label=\"Deletable Secondary Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n                color=\"secondary\"\n            />\n        </div>\n    );\n}\n\nChips.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Chips);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport Chip from '@material-ui/core/Chip';\\nimport FaceIcon from '@material-ui/icons/Face';\\nimport DoneIcon from '@material-ui/icons/Done';\\n\\nconst styles = theme => ({\\n    root: {\\n        display       : 'flex',\\n        justifyContent: 'center',\\n        flexWrap      : 'wrap'\\n    },\\n    chip: {\\n        margin: theme.spacing.unit\\n    }\\n});\\n\\nfunction handleDelete()\\n{\\n    alert('You clicked the delete icon.'); // eslint-disable-line no-alert\\n}\\n\\nfunction handleClick()\\n{\\n    alert('You clicked the Chip.'); // eslint-disable-line no-alert\\n}\\n\\nfunction Chips(props)\\n{\\n    const {classes} = props;\\n    return (\\n        <div className={classes.root}>\\n            <Chip label=\\\"Basic Chip\\\" className={classes.chip}/>\\n            <Chip\\n                avatar={<Avatar>MB</Avatar>}\\n                label=\\\"Clickable Chip\\\"\\n                onClick={handleClick}\\n                className={classes.chip}\\n            />\\n            <Chip\\n                avatar={<Avatar alt=\\\"Natacha\\\" src=\\\"/static/images/avatar/1.jpg\\\"/>}\\n                label=\\\"Deletable Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n            />\\n            <Chip\\n                avatar={\\n                    <Avatar>\\n                        <FaceIcon/>\\n                    </Avatar>\\n                }\\n                label=\\\"Clickable Deletable Chip\\\"\\n                onClick={handleClick}\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n            />\\n            <Chip\\n                icon={<FaceIcon/>}\\n                label=\\\"Clickable Deletable Chip\\\"\\n                onClick={handleClick}\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n            />\\n            <Chip\\n                label=\\\"Custom delete icon Chip\\\"\\n                onClick={handleClick}\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                deleteIcon={<DoneIcon/>}\\n            />\\n            <Chip\\n                label=\\\"Clickable Link Chip\\\"\\n                className={classes.chip}\\n                component=\\\"a\\\"\\n                href=\\\"#chip\\\"\\n                clickable\\n            />\\n            <Chip\\n                avatar={<Avatar>MB</Avatar>}\\n                label=\\\"Primary Clickable Chip\\\"\\n                clickable\\n                className={classes.chip}\\n                color=\\\"primary\\\"\\n                onDelete={handleDelete}\\n                deleteIcon={<DoneIcon/>}\\n            />\\n            <Chip\\n                icon={<FaceIcon/>}\\n                label=\\\"Primary Clickable Chip\\\"\\n                clickable\\n                className={classes.chip}\\n                color=\\\"primary\\\"\\n                onDelete={handleDelete}\\n                deleteIcon={<DoneIcon/>}\\n            />\\n            <Chip\\n                label=\\\"Deletable Primary Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                color=\\\"primary\\\"\\n            />\\n            <Chip\\n                avatar={\\n                    <Avatar>\\n                        <FaceIcon/>\\n                    </Avatar>\\n                }\\n                label=\\\"Deletable Secondary Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                color=\\\"secondary\\\"\\n            />\\n            <Chip\\n                icon={<FaceIcon/>}\\n                label=\\\"Deletable Secondary Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                color=\\\"secondary\\\"\\n            />\\n        </div>\\n    );\\n}\\n\\nChips.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(Chips);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    root: {\n        display       : 'flex',\n        justifyContent: 'center',\n        flexWrap      : 'wrap'\n    },\n    chip: {\n        margin: theme.spacing.unit\n    }\n});\n\nfunction handleDelete()\n{\n    alert('You clicked the delete icon.'); // eslint-disable-line no-alert\n}\n\nfunction handleClick()\n{\n    alert('You clicked the Chip.'); // eslint-disable-line no-alert\n}\n\nfunction OutlinedChips(props)\n{\n    const {classes} = props;\n    return (\n        <div className={classes.root}>\n            <Chip label=\"Basic Chip\" className={classes.chip} variant=\"outlined\"/>\n            <Chip\n                avatar={<Avatar>MB</Avatar>}\n                label=\"Clickable Chip\"\n                onClick={handleClick}\n                className={classes.chip}\n                variant=\"outlined\"\n            />\n            <Chip\n                avatar={<Avatar alt=\"Natacha\" src=\"/static/images/avatar/1.jpg\"/>}\n                label=\"Deletable Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n                variant=\"outlined\"\n            />\n            <Chip\n                avatar={\n                    <Avatar>\n                        <FaceIcon/>\n                    </Avatar>\n                }\n                label=\"Clickable Deletable Chip\"\n                onClick={handleClick}\n                onDelete={handleDelete}\n                className={classes.chip}\n                variant=\"outlined\"\n            />\n            <Chip\n                icon={<FaceIcon/>}\n                label=\"Clickable Deletable Chip\"\n                onClick={handleClick}\n                onDelete={handleDelete}\n                className={classes.chip}\n                variant=\"outlined\"\n            />\n            <Chip\n                label=\"Custom delete icon Chip\"\n                onClick={handleClick}\n                onDelete={handleDelete}\n                className={classes.chip}\n                deleteIcon={<DoneIcon/>}\n                variant=\"outlined\"\n            />\n            <Chip\n                label=\"Clickable Link Chip\"\n                className={classes.chip}\n                component=\"a\"\n                href=\"#chip\"\n                clickable\n                variant=\"outlined\"\n            />\n            <Chip\n                avatar={<Avatar>MB</Avatar>}\n                label=\"Primary Clickable Chip\"\n                clickable\n                className={classes.chip}\n                color=\"primary\"\n                onDelete={handleDelete}\n                deleteIcon={<DoneIcon/>}\n                variant=\"outlined\"\n            />\n            <Chip\n                icon={<FaceIcon/>}\n                label=\"Primary Clickable Chip\"\n                clickable\n                className={classes.chip}\n                color=\"primary\"\n                onDelete={handleDelete}\n                deleteIcon={<DoneIcon/>}\n                variant=\"outlined\"\n            />\n            <Chip\n                label=\"Deletable Primary Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n                color=\"primary\"\n                variant=\"outlined\"\n            />\n            <Chip\n                avatar={\n                    <Avatar>\n                        <FaceIcon/>\n                    </Avatar>\n                }\n                label=\"Deletable Secondary Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n                color=\"secondary\"\n                variant=\"outlined\"\n            />\n            <Chip\n                icon={<FaceIcon/>}\n                label=\"Deletable Secondary Chip\"\n                onDelete={handleDelete}\n                className={classes.chip}\n                color=\"secondary\"\n                variant=\"outlined\"\n            />\n        </div>\n    );\n}\n\nOutlinedChips.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(OutlinedChips);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport Chip from '@material-ui/core/Chip';\\nimport FaceIcon from '@material-ui/icons/Face';\\nimport DoneIcon from '@material-ui/icons/Done';\\n\\nconst styles = theme => ({\\n    root: {\\n        display       : 'flex',\\n        justifyContent: 'center',\\n        flexWrap      : 'wrap'\\n    },\\n    chip: {\\n        margin: theme.spacing.unit\\n    }\\n});\\n\\nfunction handleDelete()\\n{\\n    alert('You clicked the delete icon.'); // eslint-disable-line no-alert\\n}\\n\\nfunction handleClick()\\n{\\n    alert('You clicked the Chip.'); // eslint-disable-line no-alert\\n}\\n\\nfunction OutlinedChips(props)\\n{\\n    const {classes} = props;\\n    return (\\n        <div className={classes.root}>\\n            <Chip label=\\\"Basic Chip\\\" className={classes.chip} variant=\\\"outlined\\\"/>\\n            <Chip\\n                avatar={<Avatar>MB</Avatar>}\\n                label=\\\"Clickable Chip\\\"\\n                onClick={handleClick}\\n                className={classes.chip}\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                avatar={<Avatar alt=\\\"Natacha\\\" src=\\\"/static/images/avatar/1.jpg\\\"/>}\\n                label=\\\"Deletable Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                avatar={\\n                    <Avatar>\\n                        <FaceIcon/>\\n                    </Avatar>\\n                }\\n                label=\\\"Clickable Deletable Chip\\\"\\n                onClick={handleClick}\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                icon={<FaceIcon/>}\\n                label=\\\"Clickable Deletable Chip\\\"\\n                onClick={handleClick}\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                label=\\\"Custom delete icon Chip\\\"\\n                onClick={handleClick}\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                deleteIcon={<DoneIcon/>}\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                label=\\\"Clickable Link Chip\\\"\\n                className={classes.chip}\\n                component=\\\"a\\\"\\n                href=\\\"#chip\\\"\\n                clickable\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                avatar={<Avatar>MB</Avatar>}\\n                label=\\\"Primary Clickable Chip\\\"\\n                clickable\\n                className={classes.chip}\\n                color=\\\"primary\\\"\\n                onDelete={handleDelete}\\n                deleteIcon={<DoneIcon/>}\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                icon={<FaceIcon/>}\\n                label=\\\"Primary Clickable Chip\\\"\\n                clickable\\n                className={classes.chip}\\n                color=\\\"primary\\\"\\n                onDelete={handleDelete}\\n                deleteIcon={<DoneIcon/>}\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                label=\\\"Deletable Primary Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                color=\\\"primary\\\"\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                avatar={\\n                    <Avatar>\\n                        <FaceIcon/>\\n                    </Avatar>\\n                }\\n                label=\\\"Deletable Secondary Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                color=\\\"secondary\\\"\\n                variant=\\\"outlined\\\"\\n            />\\n            <Chip\\n                icon={<FaceIcon/>}\\n                label=\\\"Deletable Secondary Chip\\\"\\n                onDelete={handleDelete}\\n                className={classes.chip}\\n                color=\\\"secondary\\\"\\n                variant=\\\"outlined\\\"\\n            />\\n        </div>\\n    );\\n}\\n\\nOutlinedChips.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(OutlinedChips);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\n\nconst styles = theme => ({\n    root: {\n        display       : 'flex',\n        justifyContent: 'center',\n        flexWrap      : 'wrap',\n        padding       : theme.spacing.unit / 2\n    },\n    chip: {\n        margin: theme.spacing.unit / 2\n    }\n});\n\nclass ChipsArray extends React.Component {\n    state = {\n        chipData: [\n            {\n                key  : 0,\n                label: 'Angular'\n            },\n            {\n                key  : 1,\n                label: 'jQuery'\n            },\n            {\n                key  : 2,\n                label: 'Polymer'\n            },\n            {\n                key  : 3,\n                label: 'React'\n            },\n            {\n                key  : 4,\n                label: 'Vue.js'\n            }\n        ]\n    };\n\n    handleDelete = data => () => {\n        if ( data.label === 'React' )\n        {\n            alert('Why would you want to delete React?! :)'); // eslint-disable-line no-alert\n            return;\n        }\n\n        this.setState(state => {\n            const chipData = [...state.chipData];\n            const chipToDelete = chipData.indexOf(data);\n            chipData.splice(chipToDelete, 1);\n            return {chipData};\n        });\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n\n        return (\n            <Paper className={classes.root}>\n                {this.state.chipData.map(data => {\n                    let icon = null;\n\n                    if ( data.label === 'React' )\n                    {\n                        icon = <TagFacesIcon/>;\n                    }\n\n                    return (\n                        <Chip\n                            key={data.key}\n                            icon={icon}\n                            label={data.label}\n                            onDelete={this.handleDelete(data)}\n                            className={classes.chip}\n                        />\n                    );\n                })}\n            </Paper>\n        );\n    }\n}\n\nChipsArray.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ChipsArray);\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport Chip from '@material-ui/core/Chip';\\nimport Paper from '@material-ui/core/Paper';\\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\\n\\nconst styles = theme => ({\\n    root: {\\n        display       : 'flex',\\n        justifyContent: 'center',\\n        flexWrap      : 'wrap',\\n        padding       : theme.spacing.unit / 2\\n    },\\n    chip: {\\n        margin: theme.spacing.unit / 2\\n    }\\n});\\n\\nclass ChipsArray extends React.Component {\\n    state = {\\n        chipData: [\\n            {\\n                key  : 0,\\n                label: 'Angular'\\n            },\\n            {\\n                key  : 1,\\n                label: 'jQuery'\\n            },\\n            {\\n                key  : 2,\\n                label: 'Polymer'\\n            },\\n            {\\n                key  : 3,\\n                label: 'React'\\n            },\\n            {\\n                key  : 4,\\n                label: 'Vue.js'\\n            }\\n        ]\\n    };\\n\\n    handleDelete = data => () => {\\n        if ( data.label === 'React' )\\n        {\\n            alert('Why would you want to delete React?! :)'); // eslint-disable-line no-alert\\n            return;\\n        }\\n\\n        this.setState(state => {\\n            const chipData = [...state.chipData];\\n            const chipToDelete = chipData.indexOf(data);\\n            chipData.splice(chipToDelete, 1);\\n            return {chipData};\\n        });\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n\\n        return (\\n            <Paper className={classes.root}>\\n                {this.state.chipData.map(data => {\\n                    let icon = null;\\n\\n                    if ( data.label === 'React' )\\n                    {\\n                        icon = <TagFacesIcon/>;\\n                    }\\n\\n                    return (\\n                        <Chip\\n                            key={data.key}\\n                            icon={icon}\\n                            label={data.label}\\n                            onDelete={this.handleDelete(data)}\\n                            className={classes.chip}\\n                        />\\n                    );\\n                })}\\n            </Paper>\\n        );\\n    }\\n}\\n\\nChipsArray.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(ChipsArray);\\n\"","import prism from 'prismjs';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-typescript';\nimport lightTheme from 'prismjs/themes/prism.css';\nimport darkTheme from 'prismjs/themes/prism-okaidia.css';\n\nexport {lightTheme, darkTheme};\n\nlet styleNode;\n\nif ( process.browser )\n{\n    styleNode = document.createElement('style');\n    styleNode.setAttribute('data-prism', 'true');\n    if ( document.head )\n    {\n        document.head.appendChild(styleNode);\n    }\n}\n\nexport function setPrismTheme(theme)\n{\n    styleNode.textContent = theme;\n}\n\nexport default prism;\n","module.exports = \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport {withStyles} from '@material-ui/core/styles';\\nimport MarkdownElement from 'main/content/components/material-ui/MarkdownElement';\\nimport Grid from '@material-ui/core/Grid';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormLabel from '@material-ui/core/FormLabel';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport RadioGroup from '@material-ui/core/RadioGroup';\\nimport Radio from '@material-ui/core/Radio';\\nimport Paper from '@material-ui/core/Paper';\\nimport Avatar from '@material-ui/core/Avatar';\\nimport Chip from '@material-ui/core/Chip';\\nimport FaceIcon from '@material-ui/icons/Face';\\nimport DoneIcon from '@material-ui/icons/Done';\\n\\nconst styles = theme => ({\\n    root       : {\\n        flexGrow: 1\\n    },\\n    control    : {\\n        padding: theme.spacing.unit * 2\\n    },\\n    chipWrapper: {\\n        marginBottom: theme.spacing.unit * 5\\n    }\\n});\\n\\nclass ChipsPlayground extends React.Component {\\n    state = {\\n        color   : 'default',\\n        onDelete: 'none',\\n        avatar  : 'none',\\n        icon    : 'none',\\n        variant : 'default'\\n    };\\n\\n    handleChange = key => (event, value) => {\\n        this.setState({\\n            [key]: value\\n        });\\n    };\\n\\n    handleDeleteExample = () => {\\n        alert('You clicked the delete icon.'); // eslint-disable-line no-alert\\n    };\\n\\n    render()\\n    {\\n        const {classes} = this.props;\\n        const {color, onDelete, avatar, icon, variant} = this.state;\\n\\n        const colorToCode = color !== 'default' ? `color=\\\"${color}\\\" ` : '';\\n        const variantToCode = variant !== 'default' ? `variant=\\\"${variant}\\\" ` : '';\\n\\n        let onDeleteToCode;\\n        switch ( onDelete )\\n        {\\n            case 'none':\\n                onDeleteToCode = '';\\n                break;\\n            case 'custom':\\n                onDeleteToCode = 'deleteIcon={<DoneIcon />} onDelete={handleDelete} ';\\n                break;\\n            default:\\n                onDeleteToCode = 'onDelete={handleDelete} ';\\n                break;\\n        }\\n\\n        let iconToCode;\\n        let iconToPlayground;\\n        switch ( icon )\\n        {\\n            case 'none':\\n                iconToCode = '';\\n                break;\\n            default:\\n                iconToCode = 'icon={<FaceIcon />} ';\\n                iconToPlayground = <FaceIcon/>;\\n                break;\\n        }\\n\\n        let avatarToCode;\\n        let avatarToPlayground;\\n        switch ( avatar )\\n        {\\n            case 'none':\\n                avatarToCode = '';\\n                break;\\n            case 'img':\\n                avatarToCode = 'avatar={<Avatar src=\\\"/static/images/avatar/1.jpg\\\" />} ';\\n                avatarToPlayground = <Avatar src=\\\"/static/images/avatar/1.jpg\\\"/>;\\n                break;\\n            case 'letter':\\n                avatarToCode = 'avatar={<Avatar>FH</Avatar>} ';\\n                avatarToPlayground = <Avatar>FH</Avatar>;\\n                break;\\n            default:\\n                avatarToCode = 'avatar={<Avatar><FaceIcon /></Avatar>} ';\\n                avatarToPlayground = (\\n                    <Avatar>\\n                        <FaceIcon/>\\n                    </Avatar>\\n                );\\n                break;\\n        }\\n\\n        if ( avatar !== 'none' )\\n        {\\n            iconToCode = '';\\n            iconToPlayground = null;\\n        }\\n\\n        const code = `\\n\\\\`\\\\`\\\\`jsx\\n<Chip ${colorToCode}${onDeleteToCode}${avatarToCode}${iconToCode}${variantToCode}/>\\n\\\\`\\\\`\\\\`\\n`;\\n\\n        return (\\n            <Grid container className={classes.root}>\\n                <Grid item xs={12}>\\n                    <Grid container justify=\\\"center\\\" alignItems=\\\"center\\\" spacing={40}>\\n                        <Grid item className={classes.chipWrapper}>\\n                            <Chip\\n                                label=\\\"Awesome Chip Component\\\"\\n                                color={color}\\n                                deleteIcon={onDelete === 'custom' ? <DoneIcon/> : undefined}\\n                                onDelete={onDelete !== 'none' ? this.handleDeleteExample : undefined}\\n                                avatar={avatarToPlayground}\\n                                icon={iconToPlayground}\\n                                variant={variant}\\n                            />\\n                        </Grid>\\n                    </Grid>\\n                </Grid>\\n                <Grid item xs={12}>\\n                    <Paper className={classes.control}>\\n                        <Grid container spacing={24}>\\n                            <Grid item xs={12}>\\n                                <FormControl component=\\\"fieldset\\\">\\n                                    <FormLabel>color</FormLabel>\\n                                    <RadioGroup\\n                                        row\\n                                        name=\\\"color\\\"\\n                                        aria-label=\\\"color\\\"\\n                                        value={color}\\n                                        onChange={this.handleChange('color')}\\n                                    >\\n                                        <FormControlLabel value=\\\"default\\\" control={<Radio/>} label=\\\"default\\\"/>\\n                                        <FormControlLabel value=\\\"primary\\\" control={<Radio/>} label=\\\"primary\\\"/>\\n                                        <FormControlLabel value=\\\"secondary\\\" control={<Radio/>} label=\\\"secondary\\\"/>\\n                                    </RadioGroup>\\n                                </FormControl>\\n                            </Grid>\\n                            <Grid item xs={12}>\\n                                <FormControl component=\\\"fieldset\\\">\\n                                    <FormLabel>onDelete</FormLabel>\\n                                    <RadioGroup\\n                                        row\\n                                        name=\\\"onDelete\\\"\\n                                        aria-label=\\\"onDelete\\\"\\n                                        value={onDelete}\\n                                        onChange={this.handleChange('onDelete')}\\n                                    >\\n                                        <FormControlLabel value=\\\"none\\\" control={<Radio/>} label=\\\"none\\\"/>\\n                                        <FormControlLabel value=\\\"default\\\" control={<Radio/>} label=\\\"default\\\"/>\\n                                        <FormControlLabel value=\\\"custom\\\" control={<Radio/>} label=\\\"custom\\\"/>\\n                                    </RadioGroup>\\n                                </FormControl>\\n                            </Grid>\\n                            <Grid item xs={12}>\\n                                <FormControl component=\\\"fieldset\\\">\\n                                    <FormLabel>icon</FormLabel>\\n                                    <RadioGroup\\n                                        row\\n                                        name=\\\"icon\\\"\\n                                        aria-label=\\\"icon\\\"\\n                                        value={icon}\\n                                        onChange={this.handleChange('icon')}\\n                                    >\\n                                        <FormControlLabel value=\\\"none\\\" control={<Radio/>} label=\\\"none\\\"/>\\n                                        <FormControlLabel value=\\\"icon\\\" control={<Radio/>} label=\\\"icon\\\"/>\\n                                    </RadioGroup>\\n                                </FormControl>\\n                            </Grid>\\n                            <Grid item xs={12}>\\n                                <FormControl component=\\\"fieldset\\\">\\n                                    <FormLabel>avatar</FormLabel>\\n                                    <RadioGroup\\n                                        row\\n                                        name=\\\"avatar\\\"\\n                                        aria-label=\\\"avatar\\\"\\n                                        value={avatar}\\n                                        onChange={this.handleChange('avatar')}\\n                                    >\\n                                        <FormControlLabel value=\\\"none\\\" control={<Radio/>} label=\\\"none\\\"/>\\n                                        <FormControlLabel value=\\\"letter\\\" control={<Radio/>} label=\\\"letter\\\"/>\\n                                        <FormControlLabel value=\\\"img\\\" control={<Radio/>} label=\\\"img\\\"/>\\n                                        <FormControlLabel value=\\\"icon\\\" control={<Radio/>} label=\\\"icon\\\"/>\\n                                    </RadioGroup>\\n                                </FormControl>\\n                            </Grid>\\n                            <Grid item xs={12}>\\n                                <FormControl component=\\\"fieldset\\\">\\n                                    <FormLabel>variant</FormLabel>\\n                                    <RadioGroup\\n                                        row\\n                                        name=\\\"variant\\\"\\n                                        aria-label=\\\"variant\\\"\\n                                        value={variant}\\n                                        onChange={this.handleChange('variant')}\\n                                    >\\n                                        <FormControlLabel value=\\\"default\\\" control={<Radio/>} label=\\\"default\\\"/>\\n                                        <FormControlLabel value=\\\"outlined\\\" control={<Radio/>} label=\\\"outlined\\\"/>\\n                                    </RadioGroup>\\n                                </FormControl>\\n                            </Grid>\\n                        </Grid>\\n                    </Paper>\\n                </Grid>\\n                <Grid item xs={12}>\\n                    <MarkdownElement text={code}/>\\n                </Grid>\\n            </Grid>\\n        );\\n    }\\n}\\n\\nChipsPlayground.propTypes = {\\n    classes: PropTypes.object.isRequired\\n};\\n\\nexport default withStyles(styles)(ChipsPlayground);\\n\"","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport marked from 'marked';\nimport {withStyles} from '@material-ui/core/styles';\nimport prism from './prism';\n\n// Monkey patch to preserve non-breaking spaces\n// https://github.com/chjj/marked/blob/6b0416d10910702f73da9cb6bb3d4c8dcb7dead7/lib/marked.js#L142-L150\nmarked.Lexer.prototype.lex = function lex(src) {\n    src = src\n        .replace(/\\r\\n|\\r/g, '\\n')\n        .replace(/\\t/g, '    ')\n        .replace(/\\u2424/g, '\\n');\n\n    return this.token(src, true);\n};\n\nconst renderer = new marked.Renderer();\n\nrenderer.heading = (text, level) => {\n    // Small title. No need for an anchor.\n    // It's reducing the risk of duplicated id and it's less elements in the DOM.\n    if ( level >= 4 )\n    {\n        return `<h${level}>${text}</h${level}>`;\n    }\n\n    const escapedText = text\n        .toLowerCase()\n        .replace(/=&gt;|&lt;| \\/&gt;|<code>|<\\/code>/g, '')\n        .replace(/[^\\w]+/g, '-');\n\n    return (\n        `\n    <h${level}>\n      <a class=\"anchor-link\" id=\"${escapedText}\"></a>${text}` +\n        `<a class=\"anchor-link-style\" href=\"#${escapedText}\">\n        <svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M46.9 13.9c-.5-.6-1.2-.94-2.07-.94h-6.67l1.86-8.98c.17-.85 0-1.7-.52-2.3-.48-.6-1.2-.94-2.07-.94-1.6 0-3.2 1.27-3.54 2.93l-.5 2.42c0 .07-.07.13-.07.2l-1.37 6.62H20.7l1.88-8.96c.16-.85 0-1.7-.53-2.3-.48-.6-1.2-.94-2.07-.94-1.65 0-3.2 1.27-3.56 2.93l-.52 2.58v.08l-1.37 6.64H7.3c-1.67 0-3.22 1.3-3.58 2.96-.16.86 0 1.7.52 2.3.48.6 1.2.93 2.07.93h6.97l-2 9.65H4c-1.67 0-3.22 1.27-3.56 2.94-.2.8 0 1.67.5 2.27.5.6 1.2.93 2.08.93H10l-1.84 9.05c-.2.84 0 1.67.52 2.3.5.6 1.25.92 2.08.92 1.66 0 3.2-1.3 3.55-2.94l1.94-9.33h11.22l-1.87 9.05c-.15.84.03 1.67.53 2.3.5.6 1.2.92 2.07.92 1.65 0 3.22-1.3 3.56-2.94l1.9-9.33h7c1.6 0 3.2-1.28 3.53-2.93.2-.87 0-1.7-.52-2.3-.48-.62-1.2-.96-2.05-.96h-6.7l2.02-9.65h6.93c1.67 0 3.22-1.27 3.56-2.92.2-.85 0-1.7-.5-2.3l-.04.03zM17.53 28.77l1.95-9.65H30.7l-1.97 9.66H17.5h.03z\"/></svg>\n      </a></h${level}>\n  `\n    );\n};\n\nmarked.setOptions({\n    gfm        : true,\n    tables     : true,\n    breaks     : false,\n    pedantic   : false,\n    sanitize   : false,\n    smartLists : true,\n    smartypants: false,\n    highlight(code, lang)\n    {\n        let language;\n        switch ( lang )\n        {\n            case 'diff':\n                language = prism.languages.diff;\n                break;\n\n            case 'css':\n                language = prism.languages.css;\n                break;\n\n            case 'ts':\n            case 'tsx':\n                language = prism.languages.typescript;\n                break;\n\n            case 'js':\n            case 'jsx':\n            default:\n                language = prism.languages.jsx;\n                break;\n        }\n\n        return prism.highlight(code, language);\n    },\n    renderer\n});\n\nconst styles = theme => ({\n    root: {\n        fontFamily                        : theme.typography.fontFamily,\n        fontSize                          : 16,\n        color                             : theme.palette.text.primary,\n        '& .anchor-link'                  : {\n            marginTop: -96, // Offset for the anchor.\n            position : 'absolute'\n        },\n        '& pre, & pre[class*=\"language-\"]': {\n            margin                 : '24px 0',\n            padding                : '12px 18px',\n            backgroundColor        : theme.palette.background.paper,\n            borderRadius           : theme.shape.borderRadius,\n            overflow               : 'auto',\n            WebkitOverflowScrolling: 'touch' // iOS momentum scrolling.\n        },\n        '& code'                          : {\n            display        : 'inline-block',\n            lineHeight     : 1.6,\n            fontFamily     : 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            padding        : '3px 6px',\n            color          : theme.palette.text.primary,\n            backgroundColor: theme.palette.background.paper,\n            fontSize       : 14\n        },\n        '& p code, & ul code, & pre code' : {\n            fontSize  : 14,\n            lineHeight: 1.6\n        },\n        '& h1'                            : {\n            ...theme.typography.display2,\n            color : theme.palette.text.secondary,\n            margin: '32px 0 16px'\n        },\n        '& .description'                  : {\n            ...theme.typography.headline,\n            margin: '0 0 40px'\n        },\n        '& h2'                            : {\n            ...theme.typography.display1,\n            color : theme.palette.text.secondary,\n            margin: '32px 0 24px'\n        },\n        '& h3'                            : {\n            ...theme.typography.headline,\n            color : theme.palette.text.secondary,\n            margin: '32px 0 24px'\n        },\n        '& h4'                            : {\n            ...theme.typography.title,\n            color : theme.palette.text.secondary,\n            margin: '24px 0 16px'\n        },\n        '& p, & ul, & ol'                 : {\n            lineHeight: 1.6\n        },\n        '& h1, & h2, & h3, & h4'          : {\n            '& code'                    : {\n                fontSize  : 'inherit',\n                lineHeight: 'inherit',\n                // Remove scroll on small screens.\n                wordBreak : 'break-word'\n            },\n            '& .anchor-link-style'      : {\n                opacity: 0,\n                // To prevent the link to get the focus.\n                display: 'none'\n            },\n            '&:hover .anchor-link-style': {\n                display  : 'inline-block',\n                opacity  : 1,\n                padding  : '0 8px',\n                color    : theme.palette.text.hint,\n                '&:hover': {\n                    color: theme.palette.text.secondary\n                },\n                '& svg'  : {\n                    width : '0.55em',\n                    height: '0.55em',\n                    fill  : 'currentColor'\n                }\n            }\n        },\n        '& table'                         : {\n            width                  : '100%',\n            display                : 'block',\n            overflowX              : 'auto',\n            WebkitOverflowScrolling: 'touch', // iOS momentum scrolling.\n            borderCollapse         : 'collapse',\n            borderSpacing          : 0,\n            overflow               : 'hidden',\n            '& .prop-name'         : {\n                fontSize  : 13,\n                fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace'\n            },\n            '& .required'          : {\n                color: theme.palette.type === 'light' ? '#006500' : '#9bc89b'\n            },\n            '& .prop-type'         : {\n                fontSize  : 13,\n                fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\n                color     : theme.palette.type === 'light' ? '#932981' : '#dbb0d0'\n            },\n            '& .prop-default'      : {\n                fontSize    : 13,\n                fontFamily  : 'Consolas, \"Liberation Mono\", Menlo, monospace',\n                borderBottom: `1px dotted ${theme.palette.text.hint}`\n            }\n        },\n        '& thead'                         : {\n            fontSize  : 14,\n            fontWeight: theme.typography.fontWeightMedium,\n            color     : theme.palette.text.secondary\n        },\n        '& tbody'                         : {\n            fontSize  : 14,\n            lineHeight: 1.5,\n            color     : theme.palette.text.primary\n        },\n        '& td'                            : {\n            borderBottom: `1px solid ${theme.palette.divider}`,\n            padding     : '8px 16px 8px 8px',\n            textAlign   : 'left'\n        },\n        '& td:last-child'                 : {\n            paddingRight: 24\n        },\n        '& td compact'                    : {\n            paddingRight: 24\n        },\n        '& td code'                       : {\n            fontSize  : 13,\n            lineHeight: 1.6\n        },\n        '& th'                            : {\n            whiteSpace  : 'pre',\n            borderBottom: `1px solid ${theme.palette.divider}`,\n            fontWeight  : theme.typography.fontWeightMedium,\n            padding     : '0 16px 0 8px',\n            textAlign   : 'left'\n        },\n        '& th:last-child'                 : {\n            paddingRight: 24\n        },\n        '& tr'                            : {\n            height: 48\n        },\n        '& thead tr'                      : {\n            height: 64\n        },\n        '& strong'                        : {\n            fontWeight: theme.typography.fontWeightMedium\n        },\n        '& blockquote'                    : {\n            borderLeft     : `5px solid ${theme.palette.text.hint}`,\n            backgroundColor: theme.palette.background.paper,\n            padding        : '4px 24px',\n            margin         : '24px 0'\n        },\n        '& a, & a code'                   : {\n            // Style taken from the Link component\n            color         : theme.palette.secondary.main,\n            textDecoration: 'none',\n            '&:hover'     : {\n                textDecoration: 'underline'\n            }\n        },\n        '& img'                           : {\n            maxWidth: '100%'\n        }\n    }\n});\n\nfunction MarkdownElement(props)\n{\n    const {classes, className, text, ...other} = props;\n\n    /* eslint-disable react/no-danger */\n    return (\n        <div\n            className={classNames(classes.root, 'markdown-body', className)}\n            dangerouslySetInnerHTML={{__html: marked(text)}}\n            {...other}\n        />\n    );\n    /* eslint-enable */\n}\n\nMarkdownElement.propTypes = {\n    classes  : PropTypes.object.isRequired,\n    className: PropTypes.string,\n    text     : PropTypes.string\n};\n\nexport default withStyles(styles, {flip: false})(MarkdownElement);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport MarkdownElement from 'main/content/components/material-ui/MarkdownElement';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst styles = theme => ({\n    root       : {\n        flexGrow: 1\n    },\n    control    : {\n        padding: theme.spacing.unit * 2\n    },\n    chipWrapper: {\n        marginBottom: theme.spacing.unit * 5\n    }\n});\n\nclass ChipsPlayground extends React.Component {\n    state = {\n        color   : 'default',\n        onDelete: 'none',\n        avatar  : 'none',\n        icon    : 'none',\n        variant : 'default'\n    };\n\n    handleChange = key => (event, value) => {\n        this.setState({\n            [key]: value\n        });\n    };\n\n    handleDeleteExample = () => {\n        alert('You clicked the delete icon.'); // eslint-disable-line no-alert\n    };\n\n    render()\n    {\n        const {classes} = this.props;\n        const {color, onDelete, avatar, icon, variant} = this.state;\n\n        const colorToCode = color !== 'default' ? `color=\"${color}\" ` : '';\n        const variantToCode = variant !== 'default' ? `variant=\"${variant}\" ` : '';\n\n        let onDeleteToCode;\n        switch ( onDelete )\n        {\n            case 'none':\n                onDeleteToCode = '';\n                break;\n            case 'custom':\n                onDeleteToCode = 'deleteIcon={<DoneIcon />} onDelete={handleDelete} ';\n                break;\n            default:\n                onDeleteToCode = 'onDelete={handleDelete} ';\n                break;\n        }\n\n        let iconToCode;\n        let iconToPlayground;\n        switch ( icon )\n        {\n            case 'none':\n                iconToCode = '';\n                break;\n            default:\n                iconToCode = 'icon={<FaceIcon />} ';\n                iconToPlayground = <FaceIcon/>;\n                break;\n        }\n\n        let avatarToCode;\n        let avatarToPlayground;\n        switch ( avatar )\n        {\n            case 'none':\n                avatarToCode = '';\n                break;\n            case 'img':\n                avatarToCode = 'avatar={<Avatar src=\"/static/images/avatar/1.jpg\" />} ';\n                avatarToPlayground = <Avatar src=\"/static/images/avatar/1.jpg\"/>;\n                break;\n            case 'letter':\n                avatarToCode = 'avatar={<Avatar>FH</Avatar>} ';\n                avatarToPlayground = <Avatar>FH</Avatar>;\n                break;\n            default:\n                avatarToCode = 'avatar={<Avatar><FaceIcon /></Avatar>} ';\n                avatarToPlayground = (\n                    <Avatar>\n                        <FaceIcon/>\n                    </Avatar>\n                );\n                break;\n        }\n\n        if ( avatar !== 'none' )\n        {\n            iconToCode = '';\n            iconToPlayground = null;\n        }\n\n        const code = `\n\\`\\`\\`jsx\n<Chip ${colorToCode}${onDeleteToCode}${avatarToCode}${iconToCode}${variantToCode}/>\n\\`\\`\\`\n`;\n\n        return (\n            <Grid container className={classes.root}>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" alignItems=\"center\" spacing={40}>\n                        <Grid item className={classes.chipWrapper}>\n                            <Chip\n                                label=\"Awesome Chip Component\"\n                                color={color}\n                                deleteIcon={onDelete === 'custom' ? <DoneIcon/> : undefined}\n                                onDelete={onDelete !== 'none' ? this.handleDeleteExample : undefined}\n                                avatar={avatarToPlayground}\n                                icon={iconToPlayground}\n                                variant={variant}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.control}>\n                        <Grid container spacing={24}>\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel>color</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        name=\"color\"\n                                        aria-label=\"color\"\n                                        value={color}\n                                        onChange={this.handleChange('color')}\n                                    >\n                                        <FormControlLabel value=\"default\" control={<Radio/>} label=\"default\"/>\n                                        <FormControlLabel value=\"primary\" control={<Radio/>} label=\"primary\"/>\n                                        <FormControlLabel value=\"secondary\" control={<Radio/>} label=\"secondary\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel>onDelete</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        name=\"onDelete\"\n                                        aria-label=\"onDelete\"\n                                        value={onDelete}\n                                        onChange={this.handleChange('onDelete')}\n                                    >\n                                        <FormControlLabel value=\"none\" control={<Radio/>} label=\"none\"/>\n                                        <FormControlLabel value=\"default\" control={<Radio/>} label=\"default\"/>\n                                        <FormControlLabel value=\"custom\" control={<Radio/>} label=\"custom\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel>icon</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        name=\"icon\"\n                                        aria-label=\"icon\"\n                                        value={icon}\n                                        onChange={this.handleChange('icon')}\n                                    >\n                                        <FormControlLabel value=\"none\" control={<Radio/>} label=\"none\"/>\n                                        <FormControlLabel value=\"icon\" control={<Radio/>} label=\"icon\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel>avatar</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        name=\"avatar\"\n                                        aria-label=\"avatar\"\n                                        value={avatar}\n                                        onChange={this.handleChange('avatar')}\n                                    >\n                                        <FormControlLabel value=\"none\" control={<Radio/>} label=\"none\"/>\n                                        <FormControlLabel value=\"letter\" control={<Radio/>} label=\"letter\"/>\n                                        <FormControlLabel value=\"img\" control={<Radio/>} label=\"img\"/>\n                                        <FormControlLabel value=\"icon\" control={<Radio/>} label=\"icon\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel>variant</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        name=\"variant\"\n                                        aria-label=\"variant\"\n                                        value={variant}\n                                        onChange={this.handleChange('variant')}\n                                    >\n                                        <FormControlLabel value=\"default\" control={<Radio/>} label=\"default\"/>\n                                        <FormControlLabel value=\"outlined\" control={<Radio/>} label=\"outlined\"/>\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <MarkdownElement text={code}/>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nChipsPlayground.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ChipsPlayground);\n","import React from 'react';\nimport {FuseExample, FuseHighlight, FusePageSimple} from '@fuse';\nimport {Button, Icon, Typography} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles/index';\n/* eslint import/no-webpack-loader-syntax: off */\n/* eslint no-unused-vars: off */\nconst styles = theme => ({\n    layoutRoot: {\n        '& .description': {\n            marginBottom: 16\n        }\n    }\n});\n\nfunction Chips({classes})\n{\n    return (\n\n        <FusePageSimple\n            classes={{\n                root: classes.layoutRoot\n            }}\n            header={\n                <div className=\"flex flex-1 items-center justify-between p-24\">\n                    <Typography variant=\"h6\">Chips</Typography>\n                    <Button\n                        className=\"normal-case\"\n                        variant=\"contained\"\n                        component=\"a\"\n                        href=\"https://material-ui-next.com/demos/chips\"\n                        target=\"_blank\"\n                    >\n                        <Icon className=\"mr-4\">link</Icon>\n                        Reference\n                    </Button>\n                </div>\n            }\n            content={\n                <div className=\"p-24 max-w-2xl mx-auto\">\n                    <Typography className=\"text-44 mt-32 mb-8\" component=\"h1\">Chips</Typography>\n                    <Typography className=\"description\">Chips are compact elements that represent an input, attribute, or action.</Typography>\n\n                    <Typography className=\"mb-16\" component=\"div\"><a href=\"https://material.io/design/components/chips.html\">Chips</a> allow users to enter information, make\n                        selections, filter content, or trigger actions.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">While included here as a standalone component, the most common use will\n                        be in some form of input, so some of the behaviour demonstrated here is\n                        not shown in context.</Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Chip</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Examples of Chips, using an image Avatar, SVG Icon Avatar, &quot;Letter&quot;\n                        and (string) Avatar.</Typography>\n                    <ul>\n                        <li>Chips with the <code>onClick</code> property defined change appearance on focus,\n                            hover, and click.\n                        </li>\n                        <li>Chips with the <code>onDelete</code> property defined will display a delete\n                            icon which changes appearance on hover.\n                        </li>\n                    </ul>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/chips/Chips.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/chips/Chips.js')}\n                    /></Typography>\n                    <Typography className=\"text-24 mt-32 mb-8\" component=\"h3\">Outlined Chips</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">Outlined chips offer an alternative style.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/chips/OutlinedChips.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/chips/OutlinedChips.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Chip array</Typography>\n                    <Typography className=\"mb-16\" component=\"div\">An example of rendering multiple Chips from an array of values.\n                        Deleting a chip removes it from the array. Note that since no\n                        <code>onClick</code> property is defined, the Chip can be focused, but does not\n                        gain depth while clicked or touched.</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/chips/ChipsArray.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/chips/ChipsArray.js')}\n                    /></Typography>\n                    <Typography className=\"text-32 mt-32 mb-8\" component=\"h2\">Chip Playground</Typography>\n                    <Typography className=\"mb-16\" component=\"div\"><FuseExample\n                        className=\"my-24\"\n                        iframe={false}\n                        component={require('main/content/components/material-ui/material-ui-examples/chips/ChipsPlayground.js').default}\n                        raw={require('!raw-loader!main/content/components/material-ui/material-ui-examples/chips/ChipsPlayground.js')}\n                    /></Typography>\n\n                </div>\n            }\n        />\n\n    );\n}\n\nexport default withStyles(styles, {withTheme: true})(Chips);\n"],"sourceRoot":""}